
/**
 * Client
**/

import * as runtime from './runtime/library';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model dasar
 * 
 */
export type dasar = $Result.DefaultSelection<Prisma.$dasarPayload>
/**
 * Model spt
 * 
 */
export type spt = $Result.DefaultSelection<Prisma.$sptPayload>
/**
 * Model spt_pegawai
 * 
 */
export type spt_pegawai = $Result.DefaultSelection<Prisma.$spt_pegawaiPayload>
/**
 * Model npd
 * 
 */
export type npd = $Result.DefaultSelection<Prisma.$npdPayload>
/**
 * Model biaya
 * 
 */
export type biaya = $Result.DefaultSelection<Prisma.$biayaPayload>
/**
 * Model provinsi
 * 
 */
export type provinsi = $Result.DefaultSelection<Prisma.$provinsiPayload>
/**
 * Model kota
 * 
 */
export type kota = $Result.DefaultSelection<Prisma.$kotaPayload>
/**
 * Model laporan
 * 
 */
export type laporan = $Result.DefaultSelection<Prisma.$laporanPayload>
/**
 * Model setting
 * 
 */
export type setting = $Result.DefaultSelection<Prisma.$settingPayload>
/**
 * Model kegiatan
 * 
 */
export type kegiatan = $Result.DefaultSelection<Prisma.$kegiatanPayload>
/**
 * Model sumberdana
 * 
 */
export type sumberdana = $Result.DefaultSelection<Prisma.$sumberdanaPayload>
/**
 * Model opd
 * 
 */
export type opd = $Result.DefaultSelection<Prisma.$opdPayload>
/**
 * Model jabatan
 * 
 */
export type jabatan = $Result.DefaultSelection<Prisma.$jabatanPayload>
/**
 * Model kwitansi
 * 
 */
export type kwitansi = $Result.DefaultSelection<Prisma.$kwitansiPayload>
/**
 * Model kategori
 * 
 */
export type kategori = $Result.DefaultSelection<Prisma.$kategoriPayload>
/**
 * Model standard
 * 
 */
export type standard = $Result.DefaultSelection<Prisma.$standardPayload>
/**
 * Model bank
 * 
 */
export type bank = $Result.DefaultSelection<Prisma.$bankPayload>
/**
 * Model tunjangan_potongan
 * 
 */
export type tunjangan_potongan = $Result.DefaultSelection<Prisma.$tunjangan_potonganPayload>
/**
 * Model gajian
 * 
 */
export type gajian = $Result.DefaultSelection<Prisma.$gajianPayload>
/**
 * Model ttd_gajian
 * 
 */
export type ttd_gajian = $Result.DefaultSelection<Prisma.$ttd_gajianPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const JK: {
  L: 'L',
  P: 'P'
};

export type JK = (typeof JK)[keyof typeof JK]

}

export type JK = $Enums.JK

export const JK: typeof $Enums.JK

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.users.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.users.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs>;

  /**
   * `prisma.dasar`: Exposes CRUD operations for the **dasar** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Dasars
    * const dasars = await prisma.dasar.findMany()
    * ```
    */
  get dasar(): Prisma.dasarDelegate<ExtArgs>;

  /**
   * `prisma.spt`: Exposes CRUD operations for the **spt** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Spts
    * const spts = await prisma.spt.findMany()
    * ```
    */
  get spt(): Prisma.sptDelegate<ExtArgs>;

  /**
   * `prisma.spt_pegawai`: Exposes CRUD operations for the **spt_pegawai** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Spt_pegawais
    * const spt_pegawais = await prisma.spt_pegawai.findMany()
    * ```
    */
  get spt_pegawai(): Prisma.spt_pegawaiDelegate<ExtArgs>;

  /**
   * `prisma.npd`: Exposes CRUD operations for the **npd** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Npds
    * const npds = await prisma.npd.findMany()
    * ```
    */
  get npd(): Prisma.npdDelegate<ExtArgs>;

  /**
   * `prisma.biaya`: Exposes CRUD operations for the **biaya** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Biayas
    * const biayas = await prisma.biaya.findMany()
    * ```
    */
  get biaya(): Prisma.biayaDelegate<ExtArgs>;

  /**
   * `prisma.provinsi`: Exposes CRUD operations for the **provinsi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Provinsis
    * const provinsis = await prisma.provinsi.findMany()
    * ```
    */
  get provinsi(): Prisma.provinsiDelegate<ExtArgs>;

  /**
   * `prisma.kota`: Exposes CRUD operations for the **kota** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kotas
    * const kotas = await prisma.kota.findMany()
    * ```
    */
  get kota(): Prisma.kotaDelegate<ExtArgs>;

  /**
   * `prisma.laporan`: Exposes CRUD operations for the **laporan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Laporans
    * const laporans = await prisma.laporan.findMany()
    * ```
    */
  get laporan(): Prisma.laporanDelegate<ExtArgs>;

  /**
   * `prisma.setting`: Exposes CRUD operations for the **setting** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Settings
    * const settings = await prisma.setting.findMany()
    * ```
    */
  get setting(): Prisma.settingDelegate<ExtArgs>;

  /**
   * `prisma.kegiatan`: Exposes CRUD operations for the **kegiatan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kegiatans
    * const kegiatans = await prisma.kegiatan.findMany()
    * ```
    */
  get kegiatan(): Prisma.kegiatanDelegate<ExtArgs>;

  /**
   * `prisma.sumberdana`: Exposes CRUD operations for the **sumberdana** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sumberdanas
    * const sumberdanas = await prisma.sumberdana.findMany()
    * ```
    */
  get sumberdana(): Prisma.sumberdanaDelegate<ExtArgs>;

  /**
   * `prisma.opd`: Exposes CRUD operations for the **opd** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Opds
    * const opds = await prisma.opd.findMany()
    * ```
    */
  get opd(): Prisma.opdDelegate<ExtArgs>;

  /**
   * `prisma.jabatan`: Exposes CRUD operations for the **jabatan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Jabatans
    * const jabatans = await prisma.jabatan.findMany()
    * ```
    */
  get jabatan(): Prisma.jabatanDelegate<ExtArgs>;

  /**
   * `prisma.kwitansi`: Exposes CRUD operations for the **kwitansi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kwitansis
    * const kwitansis = await prisma.kwitansi.findMany()
    * ```
    */
  get kwitansi(): Prisma.kwitansiDelegate<ExtArgs>;

  /**
   * `prisma.kategori`: Exposes CRUD operations for the **kategori** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kategoris
    * const kategoris = await prisma.kategori.findMany()
    * ```
    */
  get kategori(): Prisma.kategoriDelegate<ExtArgs>;

  /**
   * `prisma.standard`: Exposes CRUD operations for the **standard** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Standards
    * const standards = await prisma.standard.findMany()
    * ```
    */
  get standard(): Prisma.standardDelegate<ExtArgs>;

  /**
   * `prisma.bank`: Exposes CRUD operations for the **bank** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Banks
    * const banks = await prisma.bank.findMany()
    * ```
    */
  get bank(): Prisma.bankDelegate<ExtArgs>;

  /**
   * `prisma.tunjangan_potongan`: Exposes CRUD operations for the **tunjangan_potongan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tunjangan_potongans
    * const tunjangan_potongans = await prisma.tunjangan_potongan.findMany()
    * ```
    */
  get tunjangan_potongan(): Prisma.tunjangan_potonganDelegate<ExtArgs>;

  /**
   * `prisma.gajian`: Exposes CRUD operations for the **gajian** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gajians
    * const gajians = await prisma.gajian.findMany()
    * ```
    */
  get gajian(): Prisma.gajianDelegate<ExtArgs>;

  /**
   * `prisma.ttd_gajian`: Exposes CRUD operations for the **ttd_gajian** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ttd_gajians
    * const ttd_gajians = await prisma.ttd_gajian.findMany()
    * ```
    */
  get ttd_gajian(): Prisma.ttd_gajianDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.8.1
   * Query Engine version: 78caf6feeaed953168c64e15a249c3e9a033ebe2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    users: 'users',
    dasar: 'dasar',
    spt: 'spt',
    spt_pegawai: 'spt_pegawai',
    npd: 'npd',
    biaya: 'biaya',
    provinsi: 'provinsi',
    kota: 'kota',
    laporan: 'laporan',
    setting: 'setting',
    kegiatan: 'kegiatan',
    sumberdana: 'sumberdana',
    opd: 'opd',
    jabatan: 'jabatan',
    kwitansi: 'kwitansi',
    kategori: 'kategori',
    standard: 'standard',
    bank: 'bank',
    tunjangan_potongan: 'tunjangan_potongan',
    gajian: 'gajian',
    ttd_gajian: 'ttd_gajian'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'users' | 'dasar' | 'spt' | 'spt_pegawai' | 'npd' | 'biaya' | 'provinsi' | 'kota' | 'laporan' | 'setting' | 'kegiatan' | 'sumberdana' | 'opd' | 'jabatan' | 'kwitansi' | 'kategori' | 'standard' | 'bank' | 'tunjangan_potongan' | 'gajian' | 'ttd_gajian'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>,
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      dasar: {
        payload: Prisma.$dasarPayload<ExtArgs>
        fields: Prisma.dasarFieldRefs
        operations: {
          findUnique: {
            args: Prisma.dasarFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$dasarPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.dasarFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$dasarPayload>
          }
          findFirst: {
            args: Prisma.dasarFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$dasarPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.dasarFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$dasarPayload>
          }
          findMany: {
            args: Prisma.dasarFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$dasarPayload>[]
          }
          create: {
            args: Prisma.dasarCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$dasarPayload>
          }
          createMany: {
            args: Prisma.dasarCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.dasarDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$dasarPayload>
          }
          update: {
            args: Prisma.dasarUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$dasarPayload>
          }
          deleteMany: {
            args: Prisma.dasarDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.dasarUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.dasarUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$dasarPayload>
          }
          aggregate: {
            args: Prisma.DasarAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDasar>
          }
          groupBy: {
            args: Prisma.dasarGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DasarGroupByOutputType>[]
          }
          count: {
            args: Prisma.dasarCountArgs<ExtArgs>,
            result: $Utils.Optional<DasarCountAggregateOutputType> | number
          }
        }
      }
      spt: {
        payload: Prisma.$sptPayload<ExtArgs>
        fields: Prisma.sptFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sptFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sptPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sptFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sptPayload>
          }
          findFirst: {
            args: Prisma.sptFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sptPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sptFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sptPayload>
          }
          findMany: {
            args: Prisma.sptFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sptPayload>[]
          }
          create: {
            args: Prisma.sptCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sptPayload>
          }
          createMany: {
            args: Prisma.sptCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.sptDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sptPayload>
          }
          update: {
            args: Prisma.sptUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sptPayload>
          }
          deleteMany: {
            args: Prisma.sptDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.sptUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.sptUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sptPayload>
          }
          aggregate: {
            args: Prisma.SptAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSpt>
          }
          groupBy: {
            args: Prisma.sptGroupByArgs<ExtArgs>,
            result: $Utils.Optional<SptGroupByOutputType>[]
          }
          count: {
            args: Prisma.sptCountArgs<ExtArgs>,
            result: $Utils.Optional<SptCountAggregateOutputType> | number
          }
        }
      }
      spt_pegawai: {
        payload: Prisma.$spt_pegawaiPayload<ExtArgs>
        fields: Prisma.spt_pegawaiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.spt_pegawaiFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$spt_pegawaiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.spt_pegawaiFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$spt_pegawaiPayload>
          }
          findFirst: {
            args: Prisma.spt_pegawaiFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$spt_pegawaiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.spt_pegawaiFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$spt_pegawaiPayload>
          }
          findMany: {
            args: Prisma.spt_pegawaiFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$spt_pegawaiPayload>[]
          }
          create: {
            args: Prisma.spt_pegawaiCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$spt_pegawaiPayload>
          }
          createMany: {
            args: Prisma.spt_pegawaiCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.spt_pegawaiDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$spt_pegawaiPayload>
          }
          update: {
            args: Prisma.spt_pegawaiUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$spt_pegawaiPayload>
          }
          deleteMany: {
            args: Prisma.spt_pegawaiDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.spt_pegawaiUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.spt_pegawaiUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$spt_pegawaiPayload>
          }
          aggregate: {
            args: Prisma.Spt_pegawaiAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSpt_pegawai>
          }
          groupBy: {
            args: Prisma.spt_pegawaiGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Spt_pegawaiGroupByOutputType>[]
          }
          count: {
            args: Prisma.spt_pegawaiCountArgs<ExtArgs>,
            result: $Utils.Optional<Spt_pegawaiCountAggregateOutputType> | number
          }
        }
      }
      npd: {
        payload: Prisma.$npdPayload<ExtArgs>
        fields: Prisma.npdFieldRefs
        operations: {
          findUnique: {
            args: Prisma.npdFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$npdPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.npdFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$npdPayload>
          }
          findFirst: {
            args: Prisma.npdFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$npdPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.npdFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$npdPayload>
          }
          findMany: {
            args: Prisma.npdFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$npdPayload>[]
          }
          create: {
            args: Prisma.npdCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$npdPayload>
          }
          createMany: {
            args: Prisma.npdCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.npdDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$npdPayload>
          }
          update: {
            args: Prisma.npdUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$npdPayload>
          }
          deleteMany: {
            args: Prisma.npdDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.npdUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.npdUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$npdPayload>
          }
          aggregate: {
            args: Prisma.NpdAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateNpd>
          }
          groupBy: {
            args: Prisma.npdGroupByArgs<ExtArgs>,
            result: $Utils.Optional<NpdGroupByOutputType>[]
          }
          count: {
            args: Prisma.npdCountArgs<ExtArgs>,
            result: $Utils.Optional<NpdCountAggregateOutputType> | number
          }
        }
      }
      biaya: {
        payload: Prisma.$biayaPayload<ExtArgs>
        fields: Prisma.biayaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.biayaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$biayaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.biayaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$biayaPayload>
          }
          findFirst: {
            args: Prisma.biayaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$biayaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.biayaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$biayaPayload>
          }
          findMany: {
            args: Prisma.biayaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$biayaPayload>[]
          }
          create: {
            args: Prisma.biayaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$biayaPayload>
          }
          createMany: {
            args: Prisma.biayaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.biayaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$biayaPayload>
          }
          update: {
            args: Prisma.biayaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$biayaPayload>
          }
          deleteMany: {
            args: Prisma.biayaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.biayaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.biayaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$biayaPayload>
          }
          aggregate: {
            args: Prisma.BiayaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateBiaya>
          }
          groupBy: {
            args: Prisma.biayaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<BiayaGroupByOutputType>[]
          }
          count: {
            args: Prisma.biayaCountArgs<ExtArgs>,
            result: $Utils.Optional<BiayaCountAggregateOutputType> | number
          }
        }
      }
      provinsi: {
        payload: Prisma.$provinsiPayload<ExtArgs>
        fields: Prisma.provinsiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.provinsiFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$provinsiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.provinsiFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$provinsiPayload>
          }
          findFirst: {
            args: Prisma.provinsiFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$provinsiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.provinsiFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$provinsiPayload>
          }
          findMany: {
            args: Prisma.provinsiFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$provinsiPayload>[]
          }
          create: {
            args: Prisma.provinsiCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$provinsiPayload>
          }
          createMany: {
            args: Prisma.provinsiCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.provinsiDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$provinsiPayload>
          }
          update: {
            args: Prisma.provinsiUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$provinsiPayload>
          }
          deleteMany: {
            args: Prisma.provinsiDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.provinsiUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.provinsiUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$provinsiPayload>
          }
          aggregate: {
            args: Prisma.ProvinsiAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateProvinsi>
          }
          groupBy: {
            args: Prisma.provinsiGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ProvinsiGroupByOutputType>[]
          }
          count: {
            args: Prisma.provinsiCountArgs<ExtArgs>,
            result: $Utils.Optional<ProvinsiCountAggregateOutputType> | number
          }
        }
      }
      kota: {
        payload: Prisma.$kotaPayload<ExtArgs>
        fields: Prisma.kotaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.kotaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kotaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.kotaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kotaPayload>
          }
          findFirst: {
            args: Prisma.kotaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kotaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.kotaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kotaPayload>
          }
          findMany: {
            args: Prisma.kotaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kotaPayload>[]
          }
          create: {
            args: Prisma.kotaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kotaPayload>
          }
          createMany: {
            args: Prisma.kotaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.kotaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kotaPayload>
          }
          update: {
            args: Prisma.kotaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kotaPayload>
          }
          deleteMany: {
            args: Prisma.kotaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.kotaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.kotaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kotaPayload>
          }
          aggregate: {
            args: Prisma.KotaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateKota>
          }
          groupBy: {
            args: Prisma.kotaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<KotaGroupByOutputType>[]
          }
          count: {
            args: Prisma.kotaCountArgs<ExtArgs>,
            result: $Utils.Optional<KotaCountAggregateOutputType> | number
          }
        }
      }
      laporan: {
        payload: Prisma.$laporanPayload<ExtArgs>
        fields: Prisma.laporanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.laporanFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$laporanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.laporanFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$laporanPayload>
          }
          findFirst: {
            args: Prisma.laporanFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$laporanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.laporanFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$laporanPayload>
          }
          findMany: {
            args: Prisma.laporanFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$laporanPayload>[]
          }
          create: {
            args: Prisma.laporanCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$laporanPayload>
          }
          createMany: {
            args: Prisma.laporanCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.laporanDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$laporanPayload>
          }
          update: {
            args: Prisma.laporanUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$laporanPayload>
          }
          deleteMany: {
            args: Prisma.laporanDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.laporanUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.laporanUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$laporanPayload>
          }
          aggregate: {
            args: Prisma.LaporanAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateLaporan>
          }
          groupBy: {
            args: Prisma.laporanGroupByArgs<ExtArgs>,
            result: $Utils.Optional<LaporanGroupByOutputType>[]
          }
          count: {
            args: Prisma.laporanCountArgs<ExtArgs>,
            result: $Utils.Optional<LaporanCountAggregateOutputType> | number
          }
        }
      }
      setting: {
        payload: Prisma.$settingPayload<ExtArgs>
        fields: Prisma.settingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.settingFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$settingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.settingFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$settingPayload>
          }
          findFirst: {
            args: Prisma.settingFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$settingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.settingFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$settingPayload>
          }
          findMany: {
            args: Prisma.settingFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$settingPayload>[]
          }
          create: {
            args: Prisma.settingCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$settingPayload>
          }
          createMany: {
            args: Prisma.settingCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.settingDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$settingPayload>
          }
          update: {
            args: Prisma.settingUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$settingPayload>
          }
          deleteMany: {
            args: Prisma.settingDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.settingUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.settingUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$settingPayload>
          }
          aggregate: {
            args: Prisma.SettingAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSetting>
          }
          groupBy: {
            args: Prisma.settingGroupByArgs<ExtArgs>,
            result: $Utils.Optional<SettingGroupByOutputType>[]
          }
          count: {
            args: Prisma.settingCountArgs<ExtArgs>,
            result: $Utils.Optional<SettingCountAggregateOutputType> | number
          }
        }
      }
      kegiatan: {
        payload: Prisma.$kegiatanPayload<ExtArgs>
        fields: Prisma.kegiatanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.kegiatanFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kegiatanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.kegiatanFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kegiatanPayload>
          }
          findFirst: {
            args: Prisma.kegiatanFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kegiatanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.kegiatanFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kegiatanPayload>
          }
          findMany: {
            args: Prisma.kegiatanFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kegiatanPayload>[]
          }
          create: {
            args: Prisma.kegiatanCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kegiatanPayload>
          }
          createMany: {
            args: Prisma.kegiatanCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.kegiatanDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kegiatanPayload>
          }
          update: {
            args: Prisma.kegiatanUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kegiatanPayload>
          }
          deleteMany: {
            args: Prisma.kegiatanDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.kegiatanUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.kegiatanUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kegiatanPayload>
          }
          aggregate: {
            args: Prisma.KegiatanAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateKegiatan>
          }
          groupBy: {
            args: Prisma.kegiatanGroupByArgs<ExtArgs>,
            result: $Utils.Optional<KegiatanGroupByOutputType>[]
          }
          count: {
            args: Prisma.kegiatanCountArgs<ExtArgs>,
            result: $Utils.Optional<KegiatanCountAggregateOutputType> | number
          }
        }
      }
      sumberdana: {
        payload: Prisma.$sumberdanaPayload<ExtArgs>
        fields: Prisma.sumberdanaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sumberdanaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sumberdanaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sumberdanaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sumberdanaPayload>
          }
          findFirst: {
            args: Prisma.sumberdanaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sumberdanaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sumberdanaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sumberdanaPayload>
          }
          findMany: {
            args: Prisma.sumberdanaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sumberdanaPayload>[]
          }
          create: {
            args: Prisma.sumberdanaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sumberdanaPayload>
          }
          createMany: {
            args: Prisma.sumberdanaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.sumberdanaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sumberdanaPayload>
          }
          update: {
            args: Prisma.sumberdanaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sumberdanaPayload>
          }
          deleteMany: {
            args: Prisma.sumberdanaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.sumberdanaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.sumberdanaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sumberdanaPayload>
          }
          aggregate: {
            args: Prisma.SumberdanaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSumberdana>
          }
          groupBy: {
            args: Prisma.sumberdanaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<SumberdanaGroupByOutputType>[]
          }
          count: {
            args: Prisma.sumberdanaCountArgs<ExtArgs>,
            result: $Utils.Optional<SumberdanaCountAggregateOutputType> | number
          }
        }
      }
      opd: {
        payload: Prisma.$opdPayload<ExtArgs>
        fields: Prisma.opdFieldRefs
        operations: {
          findUnique: {
            args: Prisma.opdFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opdPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.opdFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opdPayload>
          }
          findFirst: {
            args: Prisma.opdFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opdPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.opdFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opdPayload>
          }
          findMany: {
            args: Prisma.opdFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opdPayload>[]
          }
          create: {
            args: Prisma.opdCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opdPayload>
          }
          createMany: {
            args: Prisma.opdCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.opdDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opdPayload>
          }
          update: {
            args: Prisma.opdUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opdPayload>
          }
          deleteMany: {
            args: Prisma.opdDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.opdUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.opdUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$opdPayload>
          }
          aggregate: {
            args: Prisma.OpdAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateOpd>
          }
          groupBy: {
            args: Prisma.opdGroupByArgs<ExtArgs>,
            result: $Utils.Optional<OpdGroupByOutputType>[]
          }
          count: {
            args: Prisma.opdCountArgs<ExtArgs>,
            result: $Utils.Optional<OpdCountAggregateOutputType> | number
          }
        }
      }
      jabatan: {
        payload: Prisma.$jabatanPayload<ExtArgs>
        fields: Prisma.jabatanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.jabatanFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$jabatanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.jabatanFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$jabatanPayload>
          }
          findFirst: {
            args: Prisma.jabatanFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$jabatanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.jabatanFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$jabatanPayload>
          }
          findMany: {
            args: Prisma.jabatanFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$jabatanPayload>[]
          }
          create: {
            args: Prisma.jabatanCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$jabatanPayload>
          }
          createMany: {
            args: Prisma.jabatanCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.jabatanDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$jabatanPayload>
          }
          update: {
            args: Prisma.jabatanUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$jabatanPayload>
          }
          deleteMany: {
            args: Prisma.jabatanDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.jabatanUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.jabatanUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$jabatanPayload>
          }
          aggregate: {
            args: Prisma.JabatanAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateJabatan>
          }
          groupBy: {
            args: Prisma.jabatanGroupByArgs<ExtArgs>,
            result: $Utils.Optional<JabatanGroupByOutputType>[]
          }
          count: {
            args: Prisma.jabatanCountArgs<ExtArgs>,
            result: $Utils.Optional<JabatanCountAggregateOutputType> | number
          }
        }
      }
      kwitansi: {
        payload: Prisma.$kwitansiPayload<ExtArgs>
        fields: Prisma.kwitansiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.kwitansiFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kwitansiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.kwitansiFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kwitansiPayload>
          }
          findFirst: {
            args: Prisma.kwitansiFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kwitansiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.kwitansiFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kwitansiPayload>
          }
          findMany: {
            args: Prisma.kwitansiFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kwitansiPayload>[]
          }
          create: {
            args: Prisma.kwitansiCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kwitansiPayload>
          }
          createMany: {
            args: Prisma.kwitansiCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.kwitansiDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kwitansiPayload>
          }
          update: {
            args: Prisma.kwitansiUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kwitansiPayload>
          }
          deleteMany: {
            args: Prisma.kwitansiDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.kwitansiUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.kwitansiUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kwitansiPayload>
          }
          aggregate: {
            args: Prisma.KwitansiAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateKwitansi>
          }
          groupBy: {
            args: Prisma.kwitansiGroupByArgs<ExtArgs>,
            result: $Utils.Optional<KwitansiGroupByOutputType>[]
          }
          count: {
            args: Prisma.kwitansiCountArgs<ExtArgs>,
            result: $Utils.Optional<KwitansiCountAggregateOutputType> | number
          }
        }
      }
      kategori: {
        payload: Prisma.$kategoriPayload<ExtArgs>
        fields: Prisma.kategoriFieldRefs
        operations: {
          findUnique: {
            args: Prisma.kategoriFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.kategoriFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload>
          }
          findFirst: {
            args: Prisma.kategoriFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.kategoriFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload>
          }
          findMany: {
            args: Prisma.kategoriFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload>[]
          }
          create: {
            args: Prisma.kategoriCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload>
          }
          createMany: {
            args: Prisma.kategoriCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.kategoriDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload>
          }
          update: {
            args: Prisma.kategoriUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload>
          }
          deleteMany: {
            args: Prisma.kategoriDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.kategoriUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.kategoriUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$kategoriPayload>
          }
          aggregate: {
            args: Prisma.KategoriAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateKategori>
          }
          groupBy: {
            args: Prisma.kategoriGroupByArgs<ExtArgs>,
            result: $Utils.Optional<KategoriGroupByOutputType>[]
          }
          count: {
            args: Prisma.kategoriCountArgs<ExtArgs>,
            result: $Utils.Optional<KategoriCountAggregateOutputType> | number
          }
        }
      }
      standard: {
        payload: Prisma.$standardPayload<ExtArgs>
        fields: Prisma.standardFieldRefs
        operations: {
          findUnique: {
            args: Prisma.standardFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$standardPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.standardFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$standardPayload>
          }
          findFirst: {
            args: Prisma.standardFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$standardPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.standardFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$standardPayload>
          }
          findMany: {
            args: Prisma.standardFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$standardPayload>[]
          }
          create: {
            args: Prisma.standardCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$standardPayload>
          }
          createMany: {
            args: Prisma.standardCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.standardDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$standardPayload>
          }
          update: {
            args: Prisma.standardUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$standardPayload>
          }
          deleteMany: {
            args: Prisma.standardDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.standardUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.standardUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$standardPayload>
          }
          aggregate: {
            args: Prisma.StandardAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateStandard>
          }
          groupBy: {
            args: Prisma.standardGroupByArgs<ExtArgs>,
            result: $Utils.Optional<StandardGroupByOutputType>[]
          }
          count: {
            args: Prisma.standardCountArgs<ExtArgs>,
            result: $Utils.Optional<StandardCountAggregateOutputType> | number
          }
        }
      }
      bank: {
        payload: Prisma.$bankPayload<ExtArgs>
        fields: Prisma.bankFieldRefs
        operations: {
          findUnique: {
            args: Prisma.bankFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bankPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.bankFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bankPayload>
          }
          findFirst: {
            args: Prisma.bankFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bankPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.bankFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bankPayload>
          }
          findMany: {
            args: Prisma.bankFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bankPayload>[]
          }
          create: {
            args: Prisma.bankCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bankPayload>
          }
          createMany: {
            args: Prisma.bankCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.bankDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bankPayload>
          }
          update: {
            args: Prisma.bankUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bankPayload>
          }
          deleteMany: {
            args: Prisma.bankDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.bankUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.bankUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bankPayload>
          }
          aggregate: {
            args: Prisma.BankAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateBank>
          }
          groupBy: {
            args: Prisma.bankGroupByArgs<ExtArgs>,
            result: $Utils.Optional<BankGroupByOutputType>[]
          }
          count: {
            args: Prisma.bankCountArgs<ExtArgs>,
            result: $Utils.Optional<BankCountAggregateOutputType> | number
          }
        }
      }
      tunjangan_potongan: {
        payload: Prisma.$tunjangan_potonganPayload<ExtArgs>
        fields: Prisma.tunjangan_potonganFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tunjangan_potonganFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tunjangan_potonganPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tunjangan_potonganFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tunjangan_potonganPayload>
          }
          findFirst: {
            args: Prisma.tunjangan_potonganFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tunjangan_potonganPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tunjangan_potonganFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tunjangan_potonganPayload>
          }
          findMany: {
            args: Prisma.tunjangan_potonganFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tunjangan_potonganPayload>[]
          }
          create: {
            args: Prisma.tunjangan_potonganCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tunjangan_potonganPayload>
          }
          createMany: {
            args: Prisma.tunjangan_potonganCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tunjangan_potonganDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tunjangan_potonganPayload>
          }
          update: {
            args: Prisma.tunjangan_potonganUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tunjangan_potonganPayload>
          }
          deleteMany: {
            args: Prisma.tunjangan_potonganDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tunjangan_potonganUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tunjangan_potonganUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tunjangan_potonganPayload>
          }
          aggregate: {
            args: Prisma.Tunjangan_potonganAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTunjangan_potongan>
          }
          groupBy: {
            args: Prisma.tunjangan_potonganGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tunjangan_potonganGroupByOutputType>[]
          }
          count: {
            args: Prisma.tunjangan_potonganCountArgs<ExtArgs>,
            result: $Utils.Optional<Tunjangan_potonganCountAggregateOutputType> | number
          }
        }
      }
      gajian: {
        payload: Prisma.$gajianPayload<ExtArgs>
        fields: Prisma.gajianFieldRefs
        operations: {
          findUnique: {
            args: Prisma.gajianFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$gajianPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.gajianFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$gajianPayload>
          }
          findFirst: {
            args: Prisma.gajianFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$gajianPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.gajianFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$gajianPayload>
          }
          findMany: {
            args: Prisma.gajianFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$gajianPayload>[]
          }
          create: {
            args: Prisma.gajianCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$gajianPayload>
          }
          createMany: {
            args: Prisma.gajianCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.gajianDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$gajianPayload>
          }
          update: {
            args: Prisma.gajianUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$gajianPayload>
          }
          deleteMany: {
            args: Prisma.gajianDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.gajianUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.gajianUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$gajianPayload>
          }
          aggregate: {
            args: Prisma.GajianAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateGajian>
          }
          groupBy: {
            args: Prisma.gajianGroupByArgs<ExtArgs>,
            result: $Utils.Optional<GajianGroupByOutputType>[]
          }
          count: {
            args: Prisma.gajianCountArgs<ExtArgs>,
            result: $Utils.Optional<GajianCountAggregateOutputType> | number
          }
        }
      }
      ttd_gajian: {
        payload: Prisma.$ttd_gajianPayload<ExtArgs>
        fields: Prisma.ttd_gajianFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ttd_gajianFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ttd_gajianPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ttd_gajianFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ttd_gajianPayload>
          }
          findFirst: {
            args: Prisma.ttd_gajianFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ttd_gajianPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ttd_gajianFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ttd_gajianPayload>
          }
          findMany: {
            args: Prisma.ttd_gajianFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ttd_gajianPayload>[]
          }
          create: {
            args: Prisma.ttd_gajianCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ttd_gajianPayload>
          }
          createMany: {
            args: Prisma.ttd_gajianCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ttd_gajianDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ttd_gajianPayload>
          }
          update: {
            args: Prisma.ttd_gajianUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ttd_gajianPayload>
          }
          deleteMany: {
            args: Prisma.ttd_gajianDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ttd_gajianUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ttd_gajianUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ttd_gajianPayload>
          }
          aggregate: {
            args: Prisma.Ttd_gajianAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTtd_gajian>
          }
          groupBy: {
            args: Prisma.ttd_gajianGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Ttd_gajianGroupByOutputType>[]
          }
          count: {
            args: Prisma.ttd_gajianCountArgs<ExtArgs>,
            result: $Utils.Optional<Ttd_gajianCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    spt_pegawai: number
    pj: number
    pj2: number
    sumberdana: number
    sumberdana_bendahara: number
    sumberdana_pa: number
    bank: number
    gajian: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spt_pegawai?: boolean | UsersCountOutputTypeCountSpt_pegawaiArgs
    pj?: boolean | UsersCountOutputTypeCountPjArgs
    pj2?: boolean | UsersCountOutputTypeCountPj2Args
    sumberdana?: boolean | UsersCountOutputTypeCountSumberdanaArgs
    sumberdana_bendahara?: boolean | UsersCountOutputTypeCountSumberdana_bendaharaArgs
    sumberdana_pa?: boolean | UsersCountOutputTypeCountSumberdana_paArgs
    bank?: boolean | UsersCountOutputTypeCountBankArgs
    gajian?: boolean | UsersCountOutputTypeCountGajianArgs
  }

  // Custom InputTypes

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSpt_pegawaiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: spt_pegawaiWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountPjArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sptWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountPj2Args<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sptWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSumberdanaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sumberdanaWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSumberdana_bendaharaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sumberdanaWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSumberdana_paArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sumberdanaWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountBankArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bankWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountGajianArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: gajianWhereInput
  }



  /**
   * Count Type SptCountOutputType
   */

  export type SptCountOutputType = {
    spt_pegawai: number
  }

  export type SptCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spt_pegawai?: boolean | SptCountOutputTypeCountSpt_pegawaiArgs
  }

  // Custom InputTypes

  /**
   * SptCountOutputType without action
   */
  export type SptCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SptCountOutputType
     */
    select?: SptCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * SptCountOutputType without action
   */
  export type SptCountOutputTypeCountSpt_pegawaiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: spt_pegawaiWhereInput
  }



  /**
   * Count Type Spt_pegawaiCountOutputType
   */

  export type Spt_pegawaiCountOutputType = {
    biaya: number
    npd: number
  }

  export type Spt_pegawaiCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    biaya?: boolean | Spt_pegawaiCountOutputTypeCountBiayaArgs
    npd?: boolean | Spt_pegawaiCountOutputTypeCountNpdArgs
  }

  // Custom InputTypes

  /**
   * Spt_pegawaiCountOutputType without action
   */
  export type Spt_pegawaiCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Spt_pegawaiCountOutputType
     */
    select?: Spt_pegawaiCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Spt_pegawaiCountOutputType without action
   */
  export type Spt_pegawaiCountOutputTypeCountBiayaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: biayaWhereInput
  }


  /**
   * Spt_pegawaiCountOutputType without action
   */
  export type Spt_pegawaiCountOutputTypeCountNpdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: npdWhereInput
  }



  /**
   * Count Type ProvinsiCountOutputType
   */

  export type ProvinsiCountOutputType = {
    kota: number
  }

  export type ProvinsiCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kota?: boolean | ProvinsiCountOutputTypeCountKotaArgs
  }

  // Custom InputTypes

  /**
   * ProvinsiCountOutputType without action
   */
  export type ProvinsiCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProvinsiCountOutputType
     */
    select?: ProvinsiCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * ProvinsiCountOutputType without action
   */
  export type ProvinsiCountOutputTypeCountKotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: kotaWhereInput
  }



  /**
   * Count Type KotaCountOutputType
   */

  export type KotaCountOutputType = {
    kota_asal: number
    kota_tujuan: number
    kota_tujuan2: number
    spt: number
    standard_asal: number
    standard_tujuan: number
  }

  export type KotaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kota_asal?: boolean | KotaCountOutputTypeCountKota_asalArgs
    kota_tujuan?: boolean | KotaCountOutputTypeCountKota_tujuanArgs
    kota_tujuan2?: boolean | KotaCountOutputTypeCountKota_tujuan2Args
    spt?: boolean | KotaCountOutputTypeCountSptArgs
    standard_asal?: boolean | KotaCountOutputTypeCountStandard_asalArgs
    standard_tujuan?: boolean | KotaCountOutputTypeCountStandard_tujuanArgs
  }

  // Custom InputTypes

  /**
   * KotaCountOutputType without action
   */
  export type KotaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KotaCountOutputType
     */
    select?: KotaCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * KotaCountOutputType without action
   */
  export type KotaCountOutputTypeCountKota_asalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sptWhereInput
  }


  /**
   * KotaCountOutputType without action
   */
  export type KotaCountOutputTypeCountKota_tujuanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sptWhereInput
  }


  /**
   * KotaCountOutputType without action
   */
  export type KotaCountOutputTypeCountKota_tujuan2Args<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sptWhereInput
  }


  /**
   * KotaCountOutputType without action
   */
  export type KotaCountOutputTypeCountSptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sptWhereInput
  }


  /**
   * KotaCountOutputType without action
   */
  export type KotaCountOutputTypeCountStandard_asalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: standardWhereInput
  }


  /**
   * KotaCountOutputType without action
   */
  export type KotaCountOutputTypeCountStandard_tujuanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: standardWhereInput
  }



  /**
   * Count Type KegiatanCountOutputType
   */

  export type KegiatanCountOutputType = {
    sumberdana: number
    spt: number
  }

  export type KegiatanCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sumberdana?: boolean | KegiatanCountOutputTypeCountSumberdanaArgs
    spt?: boolean | KegiatanCountOutputTypeCountSptArgs
  }

  // Custom InputTypes

  /**
   * KegiatanCountOutputType without action
   */
  export type KegiatanCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KegiatanCountOutputType
     */
    select?: KegiatanCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * KegiatanCountOutputType without action
   */
  export type KegiatanCountOutputTypeCountSumberdanaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sumberdanaWhereInput
  }


  /**
   * KegiatanCountOutputType without action
   */
  export type KegiatanCountOutputTypeCountSptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sptWhereInput
  }



  /**
   * Count Type SumberdanaCountOutputType
   */

  export type SumberdanaCountOutputType = {
    spt: number
    ttd_gajian: number
  }

  export type SumberdanaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spt?: boolean | SumberdanaCountOutputTypeCountSptArgs
    ttd_gajian?: boolean | SumberdanaCountOutputTypeCountTtd_gajianArgs
  }

  // Custom InputTypes

  /**
   * SumberdanaCountOutputType without action
   */
  export type SumberdanaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SumberdanaCountOutputType
     */
    select?: SumberdanaCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * SumberdanaCountOutputType without action
   */
  export type SumberdanaCountOutputTypeCountSptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sptWhereInput
  }


  /**
   * SumberdanaCountOutputType without action
   */
  export type SumberdanaCountOutputTypeCountTtd_gajianArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ttd_gajianWhereInput
  }



  /**
   * Count Type OpdCountOutputType
   */

  export type OpdCountOutputType = {
    users: number
    spt: number
    setting: number
    sumberdana: number
    standard: number
    kegiatan: number
  }

  export type OpdCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | OpdCountOutputTypeCountUsersArgs
    spt?: boolean | OpdCountOutputTypeCountSptArgs
    setting?: boolean | OpdCountOutputTypeCountSettingArgs
    sumberdana?: boolean | OpdCountOutputTypeCountSumberdanaArgs
    standard?: boolean | OpdCountOutputTypeCountStandardArgs
    kegiatan?: boolean | OpdCountOutputTypeCountKegiatanArgs
  }

  // Custom InputTypes

  /**
   * OpdCountOutputType without action
   */
  export type OpdCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpdCountOutputType
     */
    select?: OpdCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * OpdCountOutputType without action
   */
  export type OpdCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
  }


  /**
   * OpdCountOutputType without action
   */
  export type OpdCountOutputTypeCountSptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sptWhereInput
  }


  /**
   * OpdCountOutputType without action
   */
  export type OpdCountOutputTypeCountSettingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: settingWhereInput
  }


  /**
   * OpdCountOutputType without action
   */
  export type OpdCountOutputTypeCountSumberdanaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sumberdanaWhereInput
  }


  /**
   * OpdCountOutputType without action
   */
  export type OpdCountOutputTypeCountStandardArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: standardWhereInput
  }


  /**
   * OpdCountOutputType without action
   */
  export type OpdCountOutputTypeCountKegiatanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: kegiatanWhereInput
  }



  /**
   * Count Type JabatanCountOutputType
   */

  export type JabatanCountOutputType = {
    users: number
  }

  export type JabatanCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | JabatanCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes

  /**
   * JabatanCountOutputType without action
   */
  export type JabatanCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JabatanCountOutputType
     */
    select?: JabatanCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * JabatanCountOutputType without action
   */
  export type JabatanCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
  }



  /**
   * Count Type KategoriCountOutputType
   */

  export type KategoriCountOutputType = {
    spt: number
  }

  export type KategoriCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spt?: boolean | KategoriCountOutputTypeCountSptArgs
  }

  // Custom InputTypes

  /**
   * KategoriCountOutputType without action
   */
  export type KategoriCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KategoriCountOutputType
     */
    select?: KategoriCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * KategoriCountOutputType without action
   */
  export type KategoriCountOutputTypeCountSptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sptWhereInput
  }



  /**
   * Count Type Tunjangan_potonganCountOutputType
   */

  export type Tunjangan_potonganCountOutputType = {
    gajian: number
  }

  export type Tunjangan_potonganCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    gajian?: boolean | Tunjangan_potonganCountOutputTypeCountGajianArgs
  }

  // Custom InputTypes

  /**
   * Tunjangan_potonganCountOutputType without action
   */
  export type Tunjangan_potonganCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tunjangan_potonganCountOutputType
     */
    select?: Tunjangan_potonganCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Tunjangan_potonganCountOutputType without action
   */
  export type Tunjangan_potonganCountOutputTypeCountGajianArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: gajianWhereInput
  }



  /**
   * Models
   */

  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    user_id: number | null
    user_opd: number | null
    user_pendidikan_akhir: number | null
    user_level: number | null
    user_jabatan: number | null
    user_jumlah_anak: number | null
  }

  export type UsersSumAggregateOutputType = {
    user_id: number | null
    user_opd: number | null
    user_pendidikan_akhir: number | null
    user_level: number | null
    user_jabatan: number | null
    user_jumlah_anak: number | null
  }

  export type UsersMinAggregateOutputType = {
    user_id: number | null
    user_opd: number | null
    user_nama: string | null
    user_nip: string | null
    user_nik: string | null
    user_name: string | null
    user_pass: string | null
    user_image: string | null
    user_tmp_lahir: string | null
    user_tgl_lahir: Date | null
    user_pendidikan_akhir: number | null
    user_level: number | null
    user_email: string | null
    user_nohp: string | null
    user_alamat: string | null
    user_jk: $Enums.JK | null
    user_ttd: boolean | null
    user_jabatan: number | null
    user_pangkat: string | null
    user_jumlah_anak: number | null
    user_active: boolean | null
    user_external: boolean | null
    user_lastip: string | null
    user_lastlogin: Date | null
    user_created: Date | null
    user_updated: Date | null
    user_deleted: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    user_id: number | null
    user_opd: number | null
    user_nama: string | null
    user_nip: string | null
    user_nik: string | null
    user_name: string | null
    user_pass: string | null
    user_image: string | null
    user_tmp_lahir: string | null
    user_tgl_lahir: Date | null
    user_pendidikan_akhir: number | null
    user_level: number | null
    user_email: string | null
    user_nohp: string | null
    user_alamat: string | null
    user_jk: $Enums.JK | null
    user_ttd: boolean | null
    user_jabatan: number | null
    user_pangkat: string | null
    user_jumlah_anak: number | null
    user_active: boolean | null
    user_external: boolean | null
    user_lastip: string | null
    user_lastlogin: Date | null
    user_created: Date | null
    user_updated: Date | null
    user_deleted: Date | null
  }

  export type UsersCountAggregateOutputType = {
    user_id: number
    user_opd: number
    user_nama: number
    user_nip: number
    user_nik: number
    user_name: number
    user_pass: number
    user_image: number
    user_tmp_lahir: number
    user_tgl_lahir: number
    user_pendidikan_akhir: number
    user_level: number
    user_email: number
    user_nohp: number
    user_alamat: number
    user_jk: number
    user_ttd: number
    user_jabatan: number
    user_pangkat: number
    user_jumlah_anak: number
    user_active: number
    user_external: number
    user_lastip: number
    user_lastlogin: number
    user_created: number
    user_updated: number
    user_deleted: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    user_id?: true
    user_opd?: true
    user_pendidikan_akhir?: true
    user_level?: true
    user_jabatan?: true
    user_jumlah_anak?: true
  }

  export type UsersSumAggregateInputType = {
    user_id?: true
    user_opd?: true
    user_pendidikan_akhir?: true
    user_level?: true
    user_jabatan?: true
    user_jumlah_anak?: true
  }

  export type UsersMinAggregateInputType = {
    user_id?: true
    user_opd?: true
    user_nama?: true
    user_nip?: true
    user_nik?: true
    user_name?: true
    user_pass?: true
    user_image?: true
    user_tmp_lahir?: true
    user_tgl_lahir?: true
    user_pendidikan_akhir?: true
    user_level?: true
    user_email?: true
    user_nohp?: true
    user_alamat?: true
    user_jk?: true
    user_ttd?: true
    user_jabatan?: true
    user_pangkat?: true
    user_jumlah_anak?: true
    user_active?: true
    user_external?: true
    user_lastip?: true
    user_lastlogin?: true
    user_created?: true
    user_updated?: true
    user_deleted?: true
  }

  export type UsersMaxAggregateInputType = {
    user_id?: true
    user_opd?: true
    user_nama?: true
    user_nip?: true
    user_nik?: true
    user_name?: true
    user_pass?: true
    user_image?: true
    user_tmp_lahir?: true
    user_tgl_lahir?: true
    user_pendidikan_akhir?: true
    user_level?: true
    user_email?: true
    user_nohp?: true
    user_alamat?: true
    user_jk?: true
    user_ttd?: true
    user_jabatan?: true
    user_pangkat?: true
    user_jumlah_anak?: true
    user_active?: true
    user_external?: true
    user_lastip?: true
    user_lastlogin?: true
    user_created?: true
    user_updated?: true
    user_deleted?: true
  }

  export type UsersCountAggregateInputType = {
    user_id?: true
    user_opd?: true
    user_nama?: true
    user_nip?: true
    user_nik?: true
    user_name?: true
    user_pass?: true
    user_image?: true
    user_tmp_lahir?: true
    user_tgl_lahir?: true
    user_pendidikan_akhir?: true
    user_level?: true
    user_email?: true
    user_nohp?: true
    user_alamat?: true
    user_jk?: true
    user_ttd?: true
    user_jabatan?: true
    user_pangkat?: true
    user_jumlah_anak?: true
    user_active?: true
    user_external?: true
    user_lastip?: true
    user_lastlogin?: true
    user_created?: true
    user_updated?: true
    user_deleted?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    user_id: number
    user_opd: number
    user_nama: string
    user_nip: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd: boolean
    user_jabatan: number
    user_pangkat: string | null
    user_jumlah_anak: number
    user_active: boolean
    user_external: boolean
    user_lastip: string | null
    user_lastlogin: Date | null
    user_created: Date
    user_updated: Date
    user_deleted: Date | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    user_opd?: boolean
    user_nama?: boolean
    user_nip?: boolean
    user_nik?: boolean
    user_name?: boolean
    user_pass?: boolean
    user_image?: boolean
    user_tmp_lahir?: boolean
    user_tgl_lahir?: boolean
    user_pendidikan_akhir?: boolean
    user_level?: boolean
    user_email?: boolean
    user_nohp?: boolean
    user_alamat?: boolean
    user_jk?: boolean
    user_ttd?: boolean
    user_jabatan?: boolean
    user_pangkat?: boolean
    user_jumlah_anak?: boolean
    user_active?: boolean
    user_external?: boolean
    user_lastip?: boolean
    user_lastlogin?: boolean
    user_created?: boolean
    user_updated?: boolean
    user_deleted?: boolean
    spt_pegawai?: boolean | users$spt_pegawaiArgs<ExtArgs>
    pj?: boolean | users$pjArgs<ExtArgs>
    pj2?: boolean | users$pj2Args<ExtArgs>
    opd?: boolean | opdDefaultArgs<ExtArgs>
    jabatan?: boolean | jabatanDefaultArgs<ExtArgs>
    sumberdana?: boolean | users$sumberdanaArgs<ExtArgs>
    sumberdana_bendahara?: boolean | users$sumberdana_bendaharaArgs<ExtArgs>
    sumberdana_pa?: boolean | users$sumberdana_paArgs<ExtArgs>
    bank?: boolean | users$bankArgs<ExtArgs>
    gajian?: boolean | users$gajianArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    user_id?: boolean
    user_opd?: boolean
    user_nama?: boolean
    user_nip?: boolean
    user_nik?: boolean
    user_name?: boolean
    user_pass?: boolean
    user_image?: boolean
    user_tmp_lahir?: boolean
    user_tgl_lahir?: boolean
    user_pendidikan_akhir?: boolean
    user_level?: boolean
    user_email?: boolean
    user_nohp?: boolean
    user_alamat?: boolean
    user_jk?: boolean
    user_ttd?: boolean
    user_jabatan?: boolean
    user_pangkat?: boolean
    user_jumlah_anak?: boolean
    user_active?: boolean
    user_external?: boolean
    user_lastip?: boolean
    user_lastlogin?: boolean
    user_created?: boolean
    user_updated?: boolean
    user_deleted?: boolean
  }

  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spt_pegawai?: boolean | users$spt_pegawaiArgs<ExtArgs>
    pj?: boolean | users$pjArgs<ExtArgs>
    pj2?: boolean | users$pj2Args<ExtArgs>
    opd?: boolean | opdDefaultArgs<ExtArgs>
    jabatan?: boolean | jabatanDefaultArgs<ExtArgs>
    sumberdana?: boolean | users$sumberdanaArgs<ExtArgs>
    sumberdana_bendahara?: boolean | users$sumberdana_bendaharaArgs<ExtArgs>
    sumberdana_pa?: boolean | users$sumberdana_paArgs<ExtArgs>
    bank?: boolean | users$bankArgs<ExtArgs>
    gajian?: boolean | users$gajianArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      spt_pegawai: Prisma.$spt_pegawaiPayload<ExtArgs>[]
      pj: Prisma.$sptPayload<ExtArgs>[]
      pj2: Prisma.$sptPayload<ExtArgs>[]
      opd: Prisma.$opdPayload<ExtArgs>
      jabatan: Prisma.$jabatanPayload<ExtArgs>
      sumberdana: Prisma.$sumberdanaPayload<ExtArgs>[]
      sumberdana_bendahara: Prisma.$sumberdanaPayload<ExtArgs>[]
      sumberdana_pa: Prisma.$sumberdanaPayload<ExtArgs>[]
      bank: Prisma.$bankPayload<ExtArgs>[]
      gajian: Prisma.$gajianPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: number
      user_opd: number
      user_nama: string
      user_nip: string | null
      user_nik: string
      user_name: string
      user_pass: string
      user_image: string | null
      user_tmp_lahir: string
      user_tgl_lahir: Date
      user_pendidikan_akhir: number
      user_level: number
      user_email: string
      user_nohp: string
      user_alamat: string
      user_jk: $Enums.JK
      user_ttd: boolean
      user_jabatan: number
      user_pangkat: string | null
      user_jumlah_anak: number
      user_active: boolean
      user_external: boolean
      user_lastip: string | null
      user_lastlogin: Date | null
      user_created: Date
      user_updated: Date
      user_deleted: Date | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }


  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends usersFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends usersFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const usersWithUser_idOnly = await prisma.users.findMany({ select: { user_id: true } })
     * 
    **/
    findMany<T extends usersFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
    **/
    create<T extends usersCreateArgs<ExtArgs>>(
      args: SelectSubset<T, usersCreateArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Users.
     *     @param {usersCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const users = await prisma.users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends usersCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
    **/
    delete<T extends usersDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, usersDeleteArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends usersUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpdateArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends usersDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends usersUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
    **/
    upsert<T extends usersUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpsertArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    spt_pegawai<T extends users$spt_pegawaiArgs<ExtArgs> = {}>(args?: Subset<T, users$spt_pegawaiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'findMany'> | Null>;

    pj<T extends users$pjArgs<ExtArgs> = {}>(args?: Subset<T, users$pjArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findMany'> | Null>;

    pj2<T extends users$pj2Args<ExtArgs> = {}>(args?: Subset<T, users$pj2Args<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findMany'> | Null>;

    opd<T extends opdDefaultArgs<ExtArgs> = {}>(args?: Subset<T, opdDefaultArgs<ExtArgs>>): Prisma__opdClient<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    jabatan<T extends jabatanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, jabatanDefaultArgs<ExtArgs>>): Prisma__jabatanClient<$Result.GetResult<Prisma.$jabatanPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    sumberdana<T extends users$sumberdanaArgs<ExtArgs> = {}>(args?: Subset<T, users$sumberdanaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'findMany'> | Null>;

    sumberdana_bendahara<T extends users$sumberdana_bendaharaArgs<ExtArgs> = {}>(args?: Subset<T, users$sumberdana_bendaharaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'findMany'> | Null>;

    sumberdana_pa<T extends users$sumberdana_paArgs<ExtArgs> = {}>(args?: Subset<T, users$sumberdana_paArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'findMany'> | Null>;

    bank<T extends users$bankArgs<ExtArgs> = {}>(args?: Subset<T, users$bankArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bankPayload<ExtArgs>, T, 'findMany'> | Null>;

    gajian<T extends users$gajianArgs<ExtArgs> = {}>(args?: Subset<T, users$gajianArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gajianPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the users model
   */ 
  interface usersFieldRefs {
    readonly user_id: FieldRef<"users", 'Int'>
    readonly user_opd: FieldRef<"users", 'Int'>
    readonly user_nama: FieldRef<"users", 'String'>
    readonly user_nip: FieldRef<"users", 'String'>
    readonly user_nik: FieldRef<"users", 'String'>
    readonly user_name: FieldRef<"users", 'String'>
    readonly user_pass: FieldRef<"users", 'String'>
    readonly user_image: FieldRef<"users", 'String'>
    readonly user_tmp_lahir: FieldRef<"users", 'String'>
    readonly user_tgl_lahir: FieldRef<"users", 'DateTime'>
    readonly user_pendidikan_akhir: FieldRef<"users", 'Int'>
    readonly user_level: FieldRef<"users", 'Int'>
    readonly user_email: FieldRef<"users", 'String'>
    readonly user_nohp: FieldRef<"users", 'String'>
    readonly user_alamat: FieldRef<"users", 'String'>
    readonly user_jk: FieldRef<"users", 'JK'>
    readonly user_ttd: FieldRef<"users", 'Boolean'>
    readonly user_jabatan: FieldRef<"users", 'Int'>
    readonly user_pangkat: FieldRef<"users", 'String'>
    readonly user_jumlah_anak: FieldRef<"users", 'Int'>
    readonly user_active: FieldRef<"users", 'Boolean'>
    readonly user_external: FieldRef<"users", 'Boolean'>
    readonly user_lastip: FieldRef<"users", 'String'>
    readonly user_lastlogin: FieldRef<"users", 'DateTime'>
    readonly user_created: FieldRef<"users", 'DateTime'>
    readonly user_updated: FieldRef<"users", 'DateTime'>
    readonly user_deleted: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }


  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
  }


  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }


  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
  }


  /**
   * users.spt_pegawai
   */
  export type users$spt_pegawaiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt_pegawai
     */
    select?: spt_pegawaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: spt_pegawaiInclude<ExtArgs> | null
    where?: spt_pegawaiWhereInput
    orderBy?: spt_pegawaiOrderByWithRelationInput | spt_pegawaiOrderByWithRelationInput[]
    cursor?: spt_pegawaiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Spt_pegawaiScalarFieldEnum | Spt_pegawaiScalarFieldEnum[]
  }


  /**
   * users.pj
   */
  export type users$pjArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    where?: sptWhereInput
    orderBy?: sptOrderByWithRelationInput | sptOrderByWithRelationInput[]
    cursor?: sptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SptScalarFieldEnum | SptScalarFieldEnum[]
  }


  /**
   * users.pj2
   */
  export type users$pj2Args<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    where?: sptWhereInput
    orderBy?: sptOrderByWithRelationInput | sptOrderByWithRelationInput[]
    cursor?: sptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SptScalarFieldEnum | SptScalarFieldEnum[]
  }


  /**
   * users.sumberdana
   */
  export type users$sumberdanaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
    where?: sumberdanaWhereInput
    orderBy?: sumberdanaOrderByWithRelationInput | sumberdanaOrderByWithRelationInput[]
    cursor?: sumberdanaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SumberdanaScalarFieldEnum | SumberdanaScalarFieldEnum[]
  }


  /**
   * users.sumberdana_bendahara
   */
  export type users$sumberdana_bendaharaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
    where?: sumberdanaWhereInput
    orderBy?: sumberdanaOrderByWithRelationInput | sumberdanaOrderByWithRelationInput[]
    cursor?: sumberdanaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SumberdanaScalarFieldEnum | SumberdanaScalarFieldEnum[]
  }


  /**
   * users.sumberdana_pa
   */
  export type users$sumberdana_paArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
    where?: sumberdanaWhereInput
    orderBy?: sumberdanaOrderByWithRelationInput | sumberdanaOrderByWithRelationInput[]
    cursor?: sumberdanaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SumberdanaScalarFieldEnum | SumberdanaScalarFieldEnum[]
  }


  /**
   * users.bank
   */
  export type users$bankArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank
     */
    select?: bankSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bankInclude<ExtArgs> | null
    where?: bankWhereInput
    orderBy?: bankOrderByWithRelationInput | bankOrderByWithRelationInput[]
    cursor?: bankWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BankScalarFieldEnum | BankScalarFieldEnum[]
  }


  /**
   * users.gajian
   */
  export type users$gajianArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gajian
     */
    select?: gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gajianInclude<ExtArgs> | null
    where?: gajianWhereInput
    orderBy?: gajianOrderByWithRelationInput | gajianOrderByWithRelationInput[]
    cursor?: gajianWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GajianScalarFieldEnum | GajianScalarFieldEnum[]
  }


  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
  }



  /**
   * Model dasar
   */

  export type AggregateDasar = {
    _count: DasarCountAggregateOutputType | null
    _avg: DasarAvgAggregateOutputType | null
    _sum: DasarSumAggregateOutputType | null
    _min: DasarMinAggregateOutputType | null
    _max: DasarMaxAggregateOutputType | null
  }

  export type DasarAvgAggregateOutputType = {
    dasar_id: number | null
    dasar_opd: number | null
  }

  export type DasarSumAggregateOutputType = {
    dasar_id: number | null
    dasar_opd: number | null
  }

  export type DasarMinAggregateOutputType = {
    dasar_id: number | null
    dasar_isi: string | null
    dasar_opd: number | null
    dasar_active: boolean | null
    dasar_created: Date | null
    dasar_updated: Date | null
    dasar_deleted: Date | null
  }

  export type DasarMaxAggregateOutputType = {
    dasar_id: number | null
    dasar_isi: string | null
    dasar_opd: number | null
    dasar_active: boolean | null
    dasar_created: Date | null
    dasar_updated: Date | null
    dasar_deleted: Date | null
  }

  export type DasarCountAggregateOutputType = {
    dasar_id: number
    dasar_isi: number
    dasar_opd: number
    dasar_active: number
    dasar_created: number
    dasar_updated: number
    dasar_deleted: number
    _all: number
  }


  export type DasarAvgAggregateInputType = {
    dasar_id?: true
    dasar_opd?: true
  }

  export type DasarSumAggregateInputType = {
    dasar_id?: true
    dasar_opd?: true
  }

  export type DasarMinAggregateInputType = {
    dasar_id?: true
    dasar_isi?: true
    dasar_opd?: true
    dasar_active?: true
    dasar_created?: true
    dasar_updated?: true
    dasar_deleted?: true
  }

  export type DasarMaxAggregateInputType = {
    dasar_id?: true
    dasar_isi?: true
    dasar_opd?: true
    dasar_active?: true
    dasar_created?: true
    dasar_updated?: true
    dasar_deleted?: true
  }

  export type DasarCountAggregateInputType = {
    dasar_id?: true
    dasar_isi?: true
    dasar_opd?: true
    dasar_active?: true
    dasar_created?: true
    dasar_updated?: true
    dasar_deleted?: true
    _all?: true
  }

  export type DasarAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which dasar to aggregate.
     */
    where?: dasarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dasars to fetch.
     */
    orderBy?: dasarOrderByWithRelationInput | dasarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: dasarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dasars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dasars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned dasars
    **/
    _count?: true | DasarCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DasarAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DasarSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DasarMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DasarMaxAggregateInputType
  }

  export type GetDasarAggregateType<T extends DasarAggregateArgs> = {
        [P in keyof T & keyof AggregateDasar]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDasar[P]>
      : GetScalarType<T[P], AggregateDasar[P]>
  }




  export type dasarGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: dasarWhereInput
    orderBy?: dasarOrderByWithAggregationInput | dasarOrderByWithAggregationInput[]
    by: DasarScalarFieldEnum[] | DasarScalarFieldEnum
    having?: dasarScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DasarCountAggregateInputType | true
    _avg?: DasarAvgAggregateInputType
    _sum?: DasarSumAggregateInputType
    _min?: DasarMinAggregateInputType
    _max?: DasarMaxAggregateInputType
  }

  export type DasarGroupByOutputType = {
    dasar_id: number
    dasar_isi: string
    dasar_opd: number
    dasar_active: boolean
    dasar_created: Date
    dasar_updated: Date
    dasar_deleted: Date | null
    _count: DasarCountAggregateOutputType | null
    _avg: DasarAvgAggregateOutputType | null
    _sum: DasarSumAggregateOutputType | null
    _min: DasarMinAggregateOutputType | null
    _max: DasarMaxAggregateOutputType | null
  }

  type GetDasarGroupByPayload<T extends dasarGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DasarGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DasarGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DasarGroupByOutputType[P]>
            : GetScalarType<T[P], DasarGroupByOutputType[P]>
        }
      >
    >


  export type dasarSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    dasar_id?: boolean
    dasar_isi?: boolean
    dasar_opd?: boolean
    dasar_active?: boolean
    dasar_created?: boolean
    dasar_updated?: boolean
    dasar_deleted?: boolean
  }, ExtArgs["result"]["dasar"]>

  export type dasarSelectScalar = {
    dasar_id?: boolean
    dasar_isi?: boolean
    dasar_opd?: boolean
    dasar_active?: boolean
    dasar_created?: boolean
    dasar_updated?: boolean
    dasar_deleted?: boolean
  }


  export type $dasarPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "dasar"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      dasar_id: number
      dasar_isi: string
      dasar_opd: number
      dasar_active: boolean
      dasar_created: Date
      dasar_updated: Date
      dasar_deleted: Date | null
    }, ExtArgs["result"]["dasar"]>
    composites: {}
  }


  type dasarGetPayload<S extends boolean | null | undefined | dasarDefaultArgs> = $Result.GetResult<Prisma.$dasarPayload, S>

  type dasarCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<dasarFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DasarCountAggregateInputType | true
    }

  export interface dasarDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['dasar'], meta: { name: 'dasar' } }
    /**
     * Find zero or one Dasar that matches the filter.
     * @param {dasarFindUniqueArgs} args - Arguments to find a Dasar
     * @example
     * // Get one Dasar
     * const dasar = await prisma.dasar.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends dasarFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, dasarFindUniqueArgs<ExtArgs>>
    ): Prisma__dasarClient<$Result.GetResult<Prisma.$dasarPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Dasar that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {dasarFindUniqueOrThrowArgs} args - Arguments to find a Dasar
     * @example
     * // Get one Dasar
     * const dasar = await prisma.dasar.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends dasarFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, dasarFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__dasarClient<$Result.GetResult<Prisma.$dasarPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Dasar that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dasarFindFirstArgs} args - Arguments to find a Dasar
     * @example
     * // Get one Dasar
     * const dasar = await prisma.dasar.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends dasarFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, dasarFindFirstArgs<ExtArgs>>
    ): Prisma__dasarClient<$Result.GetResult<Prisma.$dasarPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Dasar that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dasarFindFirstOrThrowArgs} args - Arguments to find a Dasar
     * @example
     * // Get one Dasar
     * const dasar = await prisma.dasar.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends dasarFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, dasarFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__dasarClient<$Result.GetResult<Prisma.$dasarPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Dasars that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dasarFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Dasars
     * const dasars = await prisma.dasar.findMany()
     * 
     * // Get first 10 Dasars
     * const dasars = await prisma.dasar.findMany({ take: 10 })
     * 
     * // Only select the `dasar_id`
     * const dasarWithDasar_idOnly = await prisma.dasar.findMany({ select: { dasar_id: true } })
     * 
    **/
    findMany<T extends dasarFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, dasarFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$dasarPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Dasar.
     * @param {dasarCreateArgs} args - Arguments to create a Dasar.
     * @example
     * // Create one Dasar
     * const Dasar = await prisma.dasar.create({
     *   data: {
     *     // ... data to create a Dasar
     *   }
     * })
     * 
    **/
    create<T extends dasarCreateArgs<ExtArgs>>(
      args: SelectSubset<T, dasarCreateArgs<ExtArgs>>
    ): Prisma__dasarClient<$Result.GetResult<Prisma.$dasarPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Dasars.
     *     @param {dasarCreateManyArgs} args - Arguments to create many Dasars.
     *     @example
     *     // Create many Dasars
     *     const dasar = await prisma.dasar.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends dasarCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, dasarCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Dasar.
     * @param {dasarDeleteArgs} args - Arguments to delete one Dasar.
     * @example
     * // Delete one Dasar
     * const Dasar = await prisma.dasar.delete({
     *   where: {
     *     // ... filter to delete one Dasar
     *   }
     * })
     * 
    **/
    delete<T extends dasarDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, dasarDeleteArgs<ExtArgs>>
    ): Prisma__dasarClient<$Result.GetResult<Prisma.$dasarPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Dasar.
     * @param {dasarUpdateArgs} args - Arguments to update one Dasar.
     * @example
     * // Update one Dasar
     * const dasar = await prisma.dasar.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends dasarUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, dasarUpdateArgs<ExtArgs>>
    ): Prisma__dasarClient<$Result.GetResult<Prisma.$dasarPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Dasars.
     * @param {dasarDeleteManyArgs} args - Arguments to filter Dasars to delete.
     * @example
     * // Delete a few Dasars
     * const { count } = await prisma.dasar.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends dasarDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, dasarDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Dasars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dasarUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Dasars
     * const dasar = await prisma.dasar.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends dasarUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, dasarUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Dasar.
     * @param {dasarUpsertArgs} args - Arguments to update or create a Dasar.
     * @example
     * // Update or create a Dasar
     * const dasar = await prisma.dasar.upsert({
     *   create: {
     *     // ... data to create a Dasar
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Dasar we want to update
     *   }
     * })
    **/
    upsert<T extends dasarUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, dasarUpsertArgs<ExtArgs>>
    ): Prisma__dasarClient<$Result.GetResult<Prisma.$dasarPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Dasars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dasarCountArgs} args - Arguments to filter Dasars to count.
     * @example
     * // Count the number of Dasars
     * const count = await prisma.dasar.count({
     *   where: {
     *     // ... the filter for the Dasars we want to count
     *   }
     * })
    **/
    count<T extends dasarCountArgs>(
      args?: Subset<T, dasarCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DasarCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Dasar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DasarAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DasarAggregateArgs>(args: Subset<T, DasarAggregateArgs>): Prisma.PrismaPromise<GetDasarAggregateType<T>>

    /**
     * Group by Dasar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dasarGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends dasarGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: dasarGroupByArgs['orderBy'] }
        : { orderBy?: dasarGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, dasarGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDasarGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the dasar model
   */
  readonly fields: dasarFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for dasar.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__dasarClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the dasar model
   */ 
  interface dasarFieldRefs {
    readonly dasar_id: FieldRef<"dasar", 'Int'>
    readonly dasar_isi: FieldRef<"dasar", 'String'>
    readonly dasar_opd: FieldRef<"dasar", 'Int'>
    readonly dasar_active: FieldRef<"dasar", 'Boolean'>
    readonly dasar_created: FieldRef<"dasar", 'DateTime'>
    readonly dasar_updated: FieldRef<"dasar", 'DateTime'>
    readonly dasar_deleted: FieldRef<"dasar", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * dasar findUnique
   */
  export type dasarFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dasar
     */
    select?: dasarSelect<ExtArgs> | null
    /**
     * Filter, which dasar to fetch.
     */
    where: dasarWhereUniqueInput
  }


  /**
   * dasar findUniqueOrThrow
   */
  export type dasarFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dasar
     */
    select?: dasarSelect<ExtArgs> | null
    /**
     * Filter, which dasar to fetch.
     */
    where: dasarWhereUniqueInput
  }


  /**
   * dasar findFirst
   */
  export type dasarFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dasar
     */
    select?: dasarSelect<ExtArgs> | null
    /**
     * Filter, which dasar to fetch.
     */
    where?: dasarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dasars to fetch.
     */
    orderBy?: dasarOrderByWithRelationInput | dasarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for dasars.
     */
    cursor?: dasarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dasars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dasars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of dasars.
     */
    distinct?: DasarScalarFieldEnum | DasarScalarFieldEnum[]
  }


  /**
   * dasar findFirstOrThrow
   */
  export type dasarFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dasar
     */
    select?: dasarSelect<ExtArgs> | null
    /**
     * Filter, which dasar to fetch.
     */
    where?: dasarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dasars to fetch.
     */
    orderBy?: dasarOrderByWithRelationInput | dasarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for dasars.
     */
    cursor?: dasarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dasars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dasars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of dasars.
     */
    distinct?: DasarScalarFieldEnum | DasarScalarFieldEnum[]
  }


  /**
   * dasar findMany
   */
  export type dasarFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dasar
     */
    select?: dasarSelect<ExtArgs> | null
    /**
     * Filter, which dasars to fetch.
     */
    where?: dasarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dasars to fetch.
     */
    orderBy?: dasarOrderByWithRelationInput | dasarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing dasars.
     */
    cursor?: dasarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dasars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dasars.
     */
    skip?: number
    distinct?: DasarScalarFieldEnum | DasarScalarFieldEnum[]
  }


  /**
   * dasar create
   */
  export type dasarCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dasar
     */
    select?: dasarSelect<ExtArgs> | null
    /**
     * The data needed to create a dasar.
     */
    data: XOR<dasarCreateInput, dasarUncheckedCreateInput>
  }


  /**
   * dasar createMany
   */
  export type dasarCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many dasars.
     */
    data: dasarCreateManyInput | dasarCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * dasar update
   */
  export type dasarUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dasar
     */
    select?: dasarSelect<ExtArgs> | null
    /**
     * The data needed to update a dasar.
     */
    data: XOR<dasarUpdateInput, dasarUncheckedUpdateInput>
    /**
     * Choose, which dasar to update.
     */
    where: dasarWhereUniqueInput
  }


  /**
   * dasar updateMany
   */
  export type dasarUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update dasars.
     */
    data: XOR<dasarUpdateManyMutationInput, dasarUncheckedUpdateManyInput>
    /**
     * Filter which dasars to update
     */
    where?: dasarWhereInput
  }


  /**
   * dasar upsert
   */
  export type dasarUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dasar
     */
    select?: dasarSelect<ExtArgs> | null
    /**
     * The filter to search for the dasar to update in case it exists.
     */
    where: dasarWhereUniqueInput
    /**
     * In case the dasar found by the `where` argument doesn't exist, create a new dasar with this data.
     */
    create: XOR<dasarCreateInput, dasarUncheckedCreateInput>
    /**
     * In case the dasar was found with the provided `where` argument, update it with this data.
     */
    update: XOR<dasarUpdateInput, dasarUncheckedUpdateInput>
  }


  /**
   * dasar delete
   */
  export type dasarDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dasar
     */
    select?: dasarSelect<ExtArgs> | null
    /**
     * Filter which dasar to delete.
     */
    where: dasarWhereUniqueInput
  }


  /**
   * dasar deleteMany
   */
  export type dasarDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which dasars to delete
     */
    where?: dasarWhereInput
  }


  /**
   * dasar without action
   */
  export type dasarDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dasar
     */
    select?: dasarSelect<ExtArgs> | null
  }



  /**
   * Model spt
   */

  export type AggregateSpt = {
    _count: SptCountAggregateOutputType | null
    _avg: SptAvgAggregateOutputType | null
    _sum: SptSumAggregateOutputType | null
    _min: SptMinAggregateOutputType | null
    _max: SptMaxAggregateOutputType | null
  }

  export type SptAvgAggregateOutputType = {
    spt_id: number | null
    spt_seq: number | null
    spt_tahun: number | null
    spt_opd: number | null
    spt_kota_asal: number | null
    spt_kota_tujuan: number | null
    spt_kota_tujuan2: number | null
    spt_via: number | null
    spt_lama: number | null
    spt_kategori: number | null
    spt_kegiatan: number | null
    spt_sumber_dana: number | null
    spt_pj: number | null
    spt_pj2: number | null
    spt_status: number | null
    kotaKota_id: number | null
  }

  export type SptSumAggregateOutputType = {
    spt_id: number | null
    spt_seq: number | null
    spt_tahun: number | null
    spt_opd: number | null
    spt_kota_asal: number | null
    spt_kota_tujuan: number | null
    spt_kota_tujuan2: number | null
    spt_via: number | null
    spt_lama: number | null
    spt_kategori: number | null
    spt_kegiatan: number | null
    spt_sumber_dana: number | null
    spt_pj: number | null
    spt_pj2: number | null
    spt_status: number | null
    kotaKota_id: number | null
  }

  export type SptMinAggregateOutputType = {
    spt_id: number | null
    spt_seq: number | null
    spt_tahun: number | null
    spt_nomor: string | null
    spt_opd: number | null
    spt_kota_asal: number | null
    spt_kota_tujuan: number | null
    spt_kota_tujuan2: number | null
    spt_tempat_tujuan: string | null
    spt_via: number | null
    spt_tgl_brkt: Date | null
    spt_tgl_kembali: Date | null
    spt_lama: number | null
    spt_perihal: string | null
    spt_kategori: number | null
    spt_kegiatan: number | null
    spt_sumber_dana: number | null
    spt_pj: number | null
    spt_pj2: number | null
    spt_dasar: string | null
    spt_status: number | null
    spt_created: Date | null
    spt_updated: Date | null
    spt_deleted: Date | null
    kotaKota_id: number | null
  }

  export type SptMaxAggregateOutputType = {
    spt_id: number | null
    spt_seq: number | null
    spt_tahun: number | null
    spt_nomor: string | null
    spt_opd: number | null
    spt_kota_asal: number | null
    spt_kota_tujuan: number | null
    spt_kota_tujuan2: number | null
    spt_tempat_tujuan: string | null
    spt_via: number | null
    spt_tgl_brkt: Date | null
    spt_tgl_kembali: Date | null
    spt_lama: number | null
    spt_perihal: string | null
    spt_kategori: number | null
    spt_kegiatan: number | null
    spt_sumber_dana: number | null
    spt_pj: number | null
    spt_pj2: number | null
    spt_dasar: string | null
    spt_status: number | null
    spt_created: Date | null
    spt_updated: Date | null
    spt_deleted: Date | null
    kotaKota_id: number | null
  }

  export type SptCountAggregateOutputType = {
    spt_id: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: number
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2: number
    spt_tempat_tujuan: number
    spt_via: number
    spt_tgl_brkt: number
    spt_tgl_kembali: number
    spt_lama: number
    spt_perihal: number
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar: number
    spt_status: number
    spt_created: number
    spt_updated: number
    spt_deleted: number
    kotaKota_id: number
    _all: number
  }


  export type SptAvgAggregateInputType = {
    spt_id?: true
    spt_seq?: true
    spt_tahun?: true
    spt_opd?: true
    spt_kota_asal?: true
    spt_kota_tujuan?: true
    spt_kota_tujuan2?: true
    spt_via?: true
    spt_lama?: true
    spt_kategori?: true
    spt_kegiatan?: true
    spt_sumber_dana?: true
    spt_pj?: true
    spt_pj2?: true
    spt_status?: true
    kotaKota_id?: true
  }

  export type SptSumAggregateInputType = {
    spt_id?: true
    spt_seq?: true
    spt_tahun?: true
    spt_opd?: true
    spt_kota_asal?: true
    spt_kota_tujuan?: true
    spt_kota_tujuan2?: true
    spt_via?: true
    spt_lama?: true
    spt_kategori?: true
    spt_kegiatan?: true
    spt_sumber_dana?: true
    spt_pj?: true
    spt_pj2?: true
    spt_status?: true
    kotaKota_id?: true
  }

  export type SptMinAggregateInputType = {
    spt_id?: true
    spt_seq?: true
    spt_tahun?: true
    spt_nomor?: true
    spt_opd?: true
    spt_kota_asal?: true
    spt_kota_tujuan?: true
    spt_kota_tujuan2?: true
    spt_tempat_tujuan?: true
    spt_via?: true
    spt_tgl_brkt?: true
    spt_tgl_kembali?: true
    spt_lama?: true
    spt_perihal?: true
    spt_kategori?: true
    spt_kegiatan?: true
    spt_sumber_dana?: true
    spt_pj?: true
    spt_pj2?: true
    spt_dasar?: true
    spt_status?: true
    spt_created?: true
    spt_updated?: true
    spt_deleted?: true
    kotaKota_id?: true
  }

  export type SptMaxAggregateInputType = {
    spt_id?: true
    spt_seq?: true
    spt_tahun?: true
    spt_nomor?: true
    spt_opd?: true
    spt_kota_asal?: true
    spt_kota_tujuan?: true
    spt_kota_tujuan2?: true
    spt_tempat_tujuan?: true
    spt_via?: true
    spt_tgl_brkt?: true
    spt_tgl_kembali?: true
    spt_lama?: true
    spt_perihal?: true
    spt_kategori?: true
    spt_kegiatan?: true
    spt_sumber_dana?: true
    spt_pj?: true
    spt_pj2?: true
    spt_dasar?: true
    spt_status?: true
    spt_created?: true
    spt_updated?: true
    spt_deleted?: true
    kotaKota_id?: true
  }

  export type SptCountAggregateInputType = {
    spt_id?: true
    spt_seq?: true
    spt_tahun?: true
    spt_nomor?: true
    spt_opd?: true
    spt_kota_asal?: true
    spt_kota_tujuan?: true
    spt_kota_tujuan2?: true
    spt_tempat_tujuan?: true
    spt_via?: true
    spt_tgl_brkt?: true
    spt_tgl_kembali?: true
    spt_lama?: true
    spt_perihal?: true
    spt_kategori?: true
    spt_kegiatan?: true
    spt_sumber_dana?: true
    spt_pj?: true
    spt_pj2?: true
    spt_dasar?: true
    spt_status?: true
    spt_created?: true
    spt_updated?: true
    spt_deleted?: true
    kotaKota_id?: true
    _all?: true
  }

  export type SptAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which spt to aggregate.
     */
    where?: sptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spts to fetch.
     */
    orderBy?: sptOrderByWithRelationInput | sptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned spts
    **/
    _count?: true | SptCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SptAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SptSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SptMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SptMaxAggregateInputType
  }

  export type GetSptAggregateType<T extends SptAggregateArgs> = {
        [P in keyof T & keyof AggregateSpt]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSpt[P]>
      : GetScalarType<T[P], AggregateSpt[P]>
  }




  export type sptGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sptWhereInput
    orderBy?: sptOrderByWithAggregationInput | sptOrderByWithAggregationInput[]
    by: SptScalarFieldEnum[] | SptScalarFieldEnum
    having?: sptScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SptCountAggregateInputType | true
    _avg?: SptAvgAggregateInputType
    _sum?: SptSumAggregateInputType
    _min?: SptMinAggregateInputType
    _max?: SptMaxAggregateInputType
  }

  export type SptGroupByOutputType = {
    spt_id: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date
    spt_tgl_kembali: Date
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar: string | null
    spt_status: number
    spt_created: Date
    spt_updated: Date
    spt_deleted: Date | null
    kotaKota_id: number | null
    _count: SptCountAggregateOutputType | null
    _avg: SptAvgAggregateOutputType | null
    _sum: SptSumAggregateOutputType | null
    _min: SptMinAggregateOutputType | null
    _max: SptMaxAggregateOutputType | null
  }

  type GetSptGroupByPayload<T extends sptGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SptGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SptGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SptGroupByOutputType[P]>
            : GetScalarType<T[P], SptGroupByOutputType[P]>
        }
      >
    >


  export type sptSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    spt_id?: boolean
    spt_seq?: boolean
    spt_tahun?: boolean
    spt_nomor?: boolean
    spt_opd?: boolean
    spt_kota_asal?: boolean
    spt_kota_tujuan?: boolean
    spt_kota_tujuan2?: boolean
    spt_tempat_tujuan?: boolean
    spt_via?: boolean
    spt_tgl_brkt?: boolean
    spt_tgl_kembali?: boolean
    spt_lama?: boolean
    spt_perihal?: boolean
    spt_kategori?: boolean
    spt_kegiatan?: boolean
    spt_sumber_dana?: boolean
    spt_pj?: boolean
    spt_pj2?: boolean
    spt_dasar?: boolean
    spt_status?: boolean
    spt_created?: boolean
    spt_updated?: boolean
    spt_deleted?: boolean
    kotaKota_id?: boolean
    spt_pegawai?: boolean | spt$spt_pegawaiArgs<ExtArgs>
    users_pj?: boolean | usersDefaultArgs<ExtArgs>
    users_pj2?: boolean | usersDefaultArgs<ExtArgs>
    kota_asal?: boolean | kotaDefaultArgs<ExtArgs>
    kota_tujuan?: boolean | kotaDefaultArgs<ExtArgs>
    kota_tujuan2?: boolean | spt$kota_tujuan2Args<ExtArgs>
    opd?: boolean | opdDefaultArgs<ExtArgs>
    kegiatan?: boolean | kegiatanDefaultArgs<ExtArgs>
    sumber_dana?: boolean | sumberdanaDefaultArgs<ExtArgs>
    kategori?: boolean | kategoriDefaultArgs<ExtArgs>
    kota?: boolean | spt$kotaArgs<ExtArgs>
    _count?: boolean | SptCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["spt"]>

  export type sptSelectScalar = {
    spt_id?: boolean
    spt_seq?: boolean
    spt_tahun?: boolean
    spt_nomor?: boolean
    spt_opd?: boolean
    spt_kota_asal?: boolean
    spt_kota_tujuan?: boolean
    spt_kota_tujuan2?: boolean
    spt_tempat_tujuan?: boolean
    spt_via?: boolean
    spt_tgl_brkt?: boolean
    spt_tgl_kembali?: boolean
    spt_lama?: boolean
    spt_perihal?: boolean
    spt_kategori?: boolean
    spt_kegiatan?: boolean
    spt_sumber_dana?: boolean
    spt_pj?: boolean
    spt_pj2?: boolean
    spt_dasar?: boolean
    spt_status?: boolean
    spt_created?: boolean
    spt_updated?: boolean
    spt_deleted?: boolean
    kotaKota_id?: boolean
  }

  export type sptInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spt_pegawai?: boolean | spt$spt_pegawaiArgs<ExtArgs>
    users_pj?: boolean | usersDefaultArgs<ExtArgs>
    users_pj2?: boolean | usersDefaultArgs<ExtArgs>
    kota_asal?: boolean | kotaDefaultArgs<ExtArgs>
    kota_tujuan?: boolean | kotaDefaultArgs<ExtArgs>
    kota_tujuan2?: boolean | spt$kota_tujuan2Args<ExtArgs>
    opd?: boolean | opdDefaultArgs<ExtArgs>
    kegiatan?: boolean | kegiatanDefaultArgs<ExtArgs>
    sumber_dana?: boolean | sumberdanaDefaultArgs<ExtArgs>
    kategori?: boolean | kategoriDefaultArgs<ExtArgs>
    kota?: boolean | spt$kotaArgs<ExtArgs>
    _count?: boolean | SptCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $sptPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "spt"
    objects: {
      spt_pegawai: Prisma.$spt_pegawaiPayload<ExtArgs>[]
      users_pj: Prisma.$usersPayload<ExtArgs>
      users_pj2: Prisma.$usersPayload<ExtArgs>
      kota_asal: Prisma.$kotaPayload<ExtArgs>
      kota_tujuan: Prisma.$kotaPayload<ExtArgs>
      kota_tujuan2: Prisma.$kotaPayload<ExtArgs> | null
      opd: Prisma.$opdPayload<ExtArgs>
      kegiatan: Prisma.$kegiatanPayload<ExtArgs>
      sumber_dana: Prisma.$sumberdanaPayload<ExtArgs>
      kategori: Prisma.$kategoriPayload<ExtArgs>
      kota: Prisma.$kotaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      spt_id: number
      spt_seq: number
      spt_tahun: number
      spt_nomor: string
      spt_opd: number
      spt_kota_asal: number
      spt_kota_tujuan: number
      spt_kota_tujuan2: number | null
      spt_tempat_tujuan: string
      spt_via: number
      spt_tgl_brkt: Date
      spt_tgl_kembali: Date
      spt_lama: number
      spt_perihal: string
      spt_kategori: number
      spt_kegiatan: number
      spt_sumber_dana: number
      spt_pj: number
      spt_pj2: number
      spt_dasar: string | null
      spt_status: number
      spt_created: Date
      spt_updated: Date
      spt_deleted: Date | null
      kotaKota_id: number | null
    }, ExtArgs["result"]["spt"]>
    composites: {}
  }


  type sptGetPayload<S extends boolean | null | undefined | sptDefaultArgs> = $Result.GetResult<Prisma.$sptPayload, S>

  type sptCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sptFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SptCountAggregateInputType | true
    }

  export interface sptDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['spt'], meta: { name: 'spt' } }
    /**
     * Find zero or one Spt that matches the filter.
     * @param {sptFindUniqueArgs} args - Arguments to find a Spt
     * @example
     * // Get one Spt
     * const spt = await prisma.spt.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sptFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, sptFindUniqueArgs<ExtArgs>>
    ): Prisma__sptClient<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Spt that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {sptFindUniqueOrThrowArgs} args - Arguments to find a Spt
     * @example
     * // Get one Spt
     * const spt = await prisma.spt.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sptFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, sptFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__sptClient<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Spt that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sptFindFirstArgs} args - Arguments to find a Spt
     * @example
     * // Get one Spt
     * const spt = await prisma.spt.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sptFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, sptFindFirstArgs<ExtArgs>>
    ): Prisma__sptClient<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Spt that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sptFindFirstOrThrowArgs} args - Arguments to find a Spt
     * @example
     * // Get one Spt
     * const spt = await prisma.spt.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sptFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, sptFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__sptClient<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Spts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sptFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Spts
     * const spts = await prisma.spt.findMany()
     * 
     * // Get first 10 Spts
     * const spts = await prisma.spt.findMany({ take: 10 })
     * 
     * // Only select the `spt_id`
     * const sptWithSpt_idOnly = await prisma.spt.findMany({ select: { spt_id: true } })
     * 
    **/
    findMany<T extends sptFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sptFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Spt.
     * @param {sptCreateArgs} args - Arguments to create a Spt.
     * @example
     * // Create one Spt
     * const Spt = await prisma.spt.create({
     *   data: {
     *     // ... data to create a Spt
     *   }
     * })
     * 
    **/
    create<T extends sptCreateArgs<ExtArgs>>(
      args: SelectSubset<T, sptCreateArgs<ExtArgs>>
    ): Prisma__sptClient<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Spts.
     *     @param {sptCreateManyArgs} args - Arguments to create many Spts.
     *     @example
     *     // Create many Spts
     *     const spt = await prisma.spt.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sptCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sptCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Spt.
     * @param {sptDeleteArgs} args - Arguments to delete one Spt.
     * @example
     * // Delete one Spt
     * const Spt = await prisma.spt.delete({
     *   where: {
     *     // ... filter to delete one Spt
     *   }
     * })
     * 
    **/
    delete<T extends sptDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, sptDeleteArgs<ExtArgs>>
    ): Prisma__sptClient<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Spt.
     * @param {sptUpdateArgs} args - Arguments to update one Spt.
     * @example
     * // Update one Spt
     * const spt = await prisma.spt.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sptUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, sptUpdateArgs<ExtArgs>>
    ): Prisma__sptClient<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Spts.
     * @param {sptDeleteManyArgs} args - Arguments to filter Spts to delete.
     * @example
     * // Delete a few Spts
     * const { count } = await prisma.spt.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sptDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sptDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Spts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sptUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Spts
     * const spt = await prisma.spt.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sptUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, sptUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Spt.
     * @param {sptUpsertArgs} args - Arguments to update or create a Spt.
     * @example
     * // Update or create a Spt
     * const spt = await prisma.spt.upsert({
     *   create: {
     *     // ... data to create a Spt
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Spt we want to update
     *   }
     * })
    **/
    upsert<T extends sptUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, sptUpsertArgs<ExtArgs>>
    ): Prisma__sptClient<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Spts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sptCountArgs} args - Arguments to filter Spts to count.
     * @example
     * // Count the number of Spts
     * const count = await prisma.spt.count({
     *   where: {
     *     // ... the filter for the Spts we want to count
     *   }
     * })
    **/
    count<T extends sptCountArgs>(
      args?: Subset<T, sptCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SptCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Spt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SptAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SptAggregateArgs>(args: Subset<T, SptAggregateArgs>): Prisma.PrismaPromise<GetSptAggregateType<T>>

    /**
     * Group by Spt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sptGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sptGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sptGroupByArgs['orderBy'] }
        : { orderBy?: sptGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sptGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSptGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the spt model
   */
  readonly fields: sptFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for spt.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sptClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    spt_pegawai<T extends spt$spt_pegawaiArgs<ExtArgs> = {}>(args?: Subset<T, spt$spt_pegawaiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'findMany'> | Null>;

    users_pj<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    users_pj2<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    kota_asal<T extends kotaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, kotaDefaultArgs<ExtArgs>>): Prisma__kotaClient<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    kota_tujuan<T extends kotaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, kotaDefaultArgs<ExtArgs>>): Prisma__kotaClient<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    kota_tujuan2<T extends spt$kota_tujuan2Args<ExtArgs> = {}>(args?: Subset<T, spt$kota_tujuan2Args<ExtArgs>>): Prisma__kotaClient<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    opd<T extends opdDefaultArgs<ExtArgs> = {}>(args?: Subset<T, opdDefaultArgs<ExtArgs>>): Prisma__opdClient<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    kegiatan<T extends kegiatanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, kegiatanDefaultArgs<ExtArgs>>): Prisma__kegiatanClient<$Result.GetResult<Prisma.$kegiatanPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    sumber_dana<T extends sumberdanaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sumberdanaDefaultArgs<ExtArgs>>): Prisma__sumberdanaClient<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    kategori<T extends kategoriDefaultArgs<ExtArgs> = {}>(args?: Subset<T, kategoriDefaultArgs<ExtArgs>>): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    kota<T extends spt$kotaArgs<ExtArgs> = {}>(args?: Subset<T, spt$kotaArgs<ExtArgs>>): Prisma__kotaClient<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the spt model
   */ 
  interface sptFieldRefs {
    readonly spt_id: FieldRef<"spt", 'Int'>
    readonly spt_seq: FieldRef<"spt", 'Int'>
    readonly spt_tahun: FieldRef<"spt", 'Int'>
    readonly spt_nomor: FieldRef<"spt", 'String'>
    readonly spt_opd: FieldRef<"spt", 'Int'>
    readonly spt_kota_asal: FieldRef<"spt", 'Int'>
    readonly spt_kota_tujuan: FieldRef<"spt", 'Int'>
    readonly spt_kota_tujuan2: FieldRef<"spt", 'Int'>
    readonly spt_tempat_tujuan: FieldRef<"spt", 'String'>
    readonly spt_via: FieldRef<"spt", 'Int'>
    readonly spt_tgl_brkt: FieldRef<"spt", 'DateTime'>
    readonly spt_tgl_kembali: FieldRef<"spt", 'DateTime'>
    readonly spt_lama: FieldRef<"spt", 'Int'>
    readonly spt_perihal: FieldRef<"spt", 'String'>
    readonly spt_kategori: FieldRef<"spt", 'Int'>
    readonly spt_kegiatan: FieldRef<"spt", 'Int'>
    readonly spt_sumber_dana: FieldRef<"spt", 'Int'>
    readonly spt_pj: FieldRef<"spt", 'Int'>
    readonly spt_pj2: FieldRef<"spt", 'Int'>
    readonly spt_dasar: FieldRef<"spt", 'String'>
    readonly spt_status: FieldRef<"spt", 'Int'>
    readonly spt_created: FieldRef<"spt", 'DateTime'>
    readonly spt_updated: FieldRef<"spt", 'DateTime'>
    readonly spt_deleted: FieldRef<"spt", 'DateTime'>
    readonly kotaKota_id: FieldRef<"spt", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * spt findUnique
   */
  export type sptFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    /**
     * Filter, which spt to fetch.
     */
    where: sptWhereUniqueInput
  }


  /**
   * spt findUniqueOrThrow
   */
  export type sptFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    /**
     * Filter, which spt to fetch.
     */
    where: sptWhereUniqueInput
  }


  /**
   * spt findFirst
   */
  export type sptFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    /**
     * Filter, which spt to fetch.
     */
    where?: sptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spts to fetch.
     */
    orderBy?: sptOrderByWithRelationInput | sptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for spts.
     */
    cursor?: sptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of spts.
     */
    distinct?: SptScalarFieldEnum | SptScalarFieldEnum[]
  }


  /**
   * spt findFirstOrThrow
   */
  export type sptFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    /**
     * Filter, which spt to fetch.
     */
    where?: sptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spts to fetch.
     */
    orderBy?: sptOrderByWithRelationInput | sptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for spts.
     */
    cursor?: sptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of spts.
     */
    distinct?: SptScalarFieldEnum | SptScalarFieldEnum[]
  }


  /**
   * spt findMany
   */
  export type sptFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    /**
     * Filter, which spts to fetch.
     */
    where?: sptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spts to fetch.
     */
    orderBy?: sptOrderByWithRelationInput | sptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing spts.
     */
    cursor?: sptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spts.
     */
    skip?: number
    distinct?: SptScalarFieldEnum | SptScalarFieldEnum[]
  }


  /**
   * spt create
   */
  export type sptCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    /**
     * The data needed to create a spt.
     */
    data: XOR<sptCreateInput, sptUncheckedCreateInput>
  }


  /**
   * spt createMany
   */
  export type sptCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many spts.
     */
    data: sptCreateManyInput | sptCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * spt update
   */
  export type sptUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    /**
     * The data needed to update a spt.
     */
    data: XOR<sptUpdateInput, sptUncheckedUpdateInput>
    /**
     * Choose, which spt to update.
     */
    where: sptWhereUniqueInput
  }


  /**
   * spt updateMany
   */
  export type sptUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update spts.
     */
    data: XOR<sptUpdateManyMutationInput, sptUncheckedUpdateManyInput>
    /**
     * Filter which spts to update
     */
    where?: sptWhereInput
  }


  /**
   * spt upsert
   */
  export type sptUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    /**
     * The filter to search for the spt to update in case it exists.
     */
    where: sptWhereUniqueInput
    /**
     * In case the spt found by the `where` argument doesn't exist, create a new spt with this data.
     */
    create: XOR<sptCreateInput, sptUncheckedCreateInput>
    /**
     * In case the spt was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sptUpdateInput, sptUncheckedUpdateInput>
  }


  /**
   * spt delete
   */
  export type sptDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    /**
     * Filter which spt to delete.
     */
    where: sptWhereUniqueInput
  }


  /**
   * spt deleteMany
   */
  export type sptDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which spts to delete
     */
    where?: sptWhereInput
  }


  /**
   * spt.spt_pegawai
   */
  export type spt$spt_pegawaiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt_pegawai
     */
    select?: spt_pegawaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: spt_pegawaiInclude<ExtArgs> | null
    where?: spt_pegawaiWhereInput
    orderBy?: spt_pegawaiOrderByWithRelationInput | spt_pegawaiOrderByWithRelationInput[]
    cursor?: spt_pegawaiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Spt_pegawaiScalarFieldEnum | Spt_pegawaiScalarFieldEnum[]
  }


  /**
   * spt.kota_tujuan2
   */
  export type spt$kota_tujuan2Args<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
    where?: kotaWhereInput
  }


  /**
   * spt.kota
   */
  export type spt$kotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
    where?: kotaWhereInput
  }


  /**
   * spt without action
   */
  export type sptDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
  }



  /**
   * Model spt_pegawai
   */

  export type AggregateSpt_pegawai = {
    _count: Spt_pegawaiCountAggregateOutputType | null
    _avg: Spt_pegawaiAvgAggregateOutputType | null
    _sum: Spt_pegawaiSumAggregateOutputType | null
    _min: Spt_pegawaiMinAggregateOutputType | null
    _max: Spt_pegawaiMaxAggregateOutputType | null
  }

  export type Spt_pegawaiAvgAggregateOutputType = {
    sp_id: number | null
    sp_spt: number | null
    sp_user: number | null
    sp_seq: number | null
  }

  export type Spt_pegawaiSumAggregateOutputType = {
    sp_id: number | null
    sp_spt: number | null
    sp_user: number | null
    sp_seq: number | null
  }

  export type Spt_pegawaiMinAggregateOutputType = {
    sp_id: number | null
    sp_spt: number | null
    sp_user: number | null
    sp_nomor_sppd: string | null
    sp_seq: number | null
  }

  export type Spt_pegawaiMaxAggregateOutputType = {
    sp_id: number | null
    sp_spt: number | null
    sp_user: number | null
    sp_nomor_sppd: string | null
    sp_seq: number | null
  }

  export type Spt_pegawaiCountAggregateOutputType = {
    sp_id: number
    sp_spt: number
    sp_user: number
    sp_nomor_sppd: number
    sp_seq: number
    _all: number
  }


  export type Spt_pegawaiAvgAggregateInputType = {
    sp_id?: true
    sp_spt?: true
    sp_user?: true
    sp_seq?: true
  }

  export type Spt_pegawaiSumAggregateInputType = {
    sp_id?: true
    sp_spt?: true
    sp_user?: true
    sp_seq?: true
  }

  export type Spt_pegawaiMinAggregateInputType = {
    sp_id?: true
    sp_spt?: true
    sp_user?: true
    sp_nomor_sppd?: true
    sp_seq?: true
  }

  export type Spt_pegawaiMaxAggregateInputType = {
    sp_id?: true
    sp_spt?: true
    sp_user?: true
    sp_nomor_sppd?: true
    sp_seq?: true
  }

  export type Spt_pegawaiCountAggregateInputType = {
    sp_id?: true
    sp_spt?: true
    sp_user?: true
    sp_nomor_sppd?: true
    sp_seq?: true
    _all?: true
  }

  export type Spt_pegawaiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which spt_pegawai to aggregate.
     */
    where?: spt_pegawaiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spt_pegawais to fetch.
     */
    orderBy?: spt_pegawaiOrderByWithRelationInput | spt_pegawaiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: spt_pegawaiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spt_pegawais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spt_pegawais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned spt_pegawais
    **/
    _count?: true | Spt_pegawaiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Spt_pegawaiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Spt_pegawaiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Spt_pegawaiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Spt_pegawaiMaxAggregateInputType
  }

  export type GetSpt_pegawaiAggregateType<T extends Spt_pegawaiAggregateArgs> = {
        [P in keyof T & keyof AggregateSpt_pegawai]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSpt_pegawai[P]>
      : GetScalarType<T[P], AggregateSpt_pegawai[P]>
  }




  export type spt_pegawaiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: spt_pegawaiWhereInput
    orderBy?: spt_pegawaiOrderByWithAggregationInput | spt_pegawaiOrderByWithAggregationInput[]
    by: Spt_pegawaiScalarFieldEnum[] | Spt_pegawaiScalarFieldEnum
    having?: spt_pegawaiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Spt_pegawaiCountAggregateInputType | true
    _avg?: Spt_pegawaiAvgAggregateInputType
    _sum?: Spt_pegawaiSumAggregateInputType
    _min?: Spt_pegawaiMinAggregateInputType
    _max?: Spt_pegawaiMaxAggregateInputType
  }

  export type Spt_pegawaiGroupByOutputType = {
    sp_id: number
    sp_spt: number
    sp_user: number
    sp_nomor_sppd: string
    sp_seq: number
    _count: Spt_pegawaiCountAggregateOutputType | null
    _avg: Spt_pegawaiAvgAggregateOutputType | null
    _sum: Spt_pegawaiSumAggregateOutputType | null
    _min: Spt_pegawaiMinAggregateOutputType | null
    _max: Spt_pegawaiMaxAggregateOutputType | null
  }

  type GetSpt_pegawaiGroupByPayload<T extends spt_pegawaiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Spt_pegawaiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Spt_pegawaiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Spt_pegawaiGroupByOutputType[P]>
            : GetScalarType<T[P], Spt_pegawaiGroupByOutputType[P]>
        }
      >
    >


  export type spt_pegawaiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sp_id?: boolean
    sp_spt?: boolean
    sp_user?: boolean
    sp_nomor_sppd?: boolean
    sp_seq?: boolean
    spt?: boolean | sptDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    biaya?: boolean | spt_pegawai$biayaArgs<ExtArgs>
    npd?: boolean | spt_pegawai$npdArgs<ExtArgs>
    laporan?: boolean | spt_pegawai$laporanArgs<ExtArgs>
    kwitansi?: boolean | spt_pegawai$kwitansiArgs<ExtArgs>
    _count?: boolean | Spt_pegawaiCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["spt_pegawai"]>

  export type spt_pegawaiSelectScalar = {
    sp_id?: boolean
    sp_spt?: boolean
    sp_user?: boolean
    sp_nomor_sppd?: boolean
    sp_seq?: boolean
  }

  export type spt_pegawaiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spt?: boolean | sptDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    biaya?: boolean | spt_pegawai$biayaArgs<ExtArgs>
    npd?: boolean | spt_pegawai$npdArgs<ExtArgs>
    laporan?: boolean | spt_pegawai$laporanArgs<ExtArgs>
    kwitansi?: boolean | spt_pegawai$kwitansiArgs<ExtArgs>
    _count?: boolean | Spt_pegawaiCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $spt_pegawaiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "spt_pegawai"
    objects: {
      spt: Prisma.$sptPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
      biaya: Prisma.$biayaPayload<ExtArgs>[]
      npd: Prisma.$npdPayload<ExtArgs>[]
      laporan: Prisma.$laporanPayload<ExtArgs> | null
      kwitansi: Prisma.$kwitansiPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      sp_id: number
      sp_spt: number
      sp_user: number
      sp_nomor_sppd: string
      sp_seq: number
    }, ExtArgs["result"]["spt_pegawai"]>
    composites: {}
  }


  type spt_pegawaiGetPayload<S extends boolean | null | undefined | spt_pegawaiDefaultArgs> = $Result.GetResult<Prisma.$spt_pegawaiPayload, S>

  type spt_pegawaiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<spt_pegawaiFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Spt_pegawaiCountAggregateInputType | true
    }

  export interface spt_pegawaiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['spt_pegawai'], meta: { name: 'spt_pegawai' } }
    /**
     * Find zero or one Spt_pegawai that matches the filter.
     * @param {spt_pegawaiFindUniqueArgs} args - Arguments to find a Spt_pegawai
     * @example
     * // Get one Spt_pegawai
     * const spt_pegawai = await prisma.spt_pegawai.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends spt_pegawaiFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, spt_pegawaiFindUniqueArgs<ExtArgs>>
    ): Prisma__spt_pegawaiClient<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Spt_pegawai that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {spt_pegawaiFindUniqueOrThrowArgs} args - Arguments to find a Spt_pegawai
     * @example
     * // Get one Spt_pegawai
     * const spt_pegawai = await prisma.spt_pegawai.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends spt_pegawaiFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, spt_pegawaiFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__spt_pegawaiClient<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Spt_pegawai that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spt_pegawaiFindFirstArgs} args - Arguments to find a Spt_pegawai
     * @example
     * // Get one Spt_pegawai
     * const spt_pegawai = await prisma.spt_pegawai.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends spt_pegawaiFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, spt_pegawaiFindFirstArgs<ExtArgs>>
    ): Prisma__spt_pegawaiClient<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Spt_pegawai that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spt_pegawaiFindFirstOrThrowArgs} args - Arguments to find a Spt_pegawai
     * @example
     * // Get one Spt_pegawai
     * const spt_pegawai = await prisma.spt_pegawai.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends spt_pegawaiFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, spt_pegawaiFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__spt_pegawaiClient<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Spt_pegawais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spt_pegawaiFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Spt_pegawais
     * const spt_pegawais = await prisma.spt_pegawai.findMany()
     * 
     * // Get first 10 Spt_pegawais
     * const spt_pegawais = await prisma.spt_pegawai.findMany({ take: 10 })
     * 
     * // Only select the `sp_id`
     * const spt_pegawaiWithSp_idOnly = await prisma.spt_pegawai.findMany({ select: { sp_id: true } })
     * 
    **/
    findMany<T extends spt_pegawaiFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, spt_pegawaiFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Spt_pegawai.
     * @param {spt_pegawaiCreateArgs} args - Arguments to create a Spt_pegawai.
     * @example
     * // Create one Spt_pegawai
     * const Spt_pegawai = await prisma.spt_pegawai.create({
     *   data: {
     *     // ... data to create a Spt_pegawai
     *   }
     * })
     * 
    **/
    create<T extends spt_pegawaiCreateArgs<ExtArgs>>(
      args: SelectSubset<T, spt_pegawaiCreateArgs<ExtArgs>>
    ): Prisma__spt_pegawaiClient<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Spt_pegawais.
     *     @param {spt_pegawaiCreateManyArgs} args - Arguments to create many Spt_pegawais.
     *     @example
     *     // Create many Spt_pegawais
     *     const spt_pegawai = await prisma.spt_pegawai.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends spt_pegawaiCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, spt_pegawaiCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Spt_pegawai.
     * @param {spt_pegawaiDeleteArgs} args - Arguments to delete one Spt_pegawai.
     * @example
     * // Delete one Spt_pegawai
     * const Spt_pegawai = await prisma.spt_pegawai.delete({
     *   where: {
     *     // ... filter to delete one Spt_pegawai
     *   }
     * })
     * 
    **/
    delete<T extends spt_pegawaiDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, spt_pegawaiDeleteArgs<ExtArgs>>
    ): Prisma__spt_pegawaiClient<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Spt_pegawai.
     * @param {spt_pegawaiUpdateArgs} args - Arguments to update one Spt_pegawai.
     * @example
     * // Update one Spt_pegawai
     * const spt_pegawai = await prisma.spt_pegawai.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends spt_pegawaiUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, spt_pegawaiUpdateArgs<ExtArgs>>
    ): Prisma__spt_pegawaiClient<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Spt_pegawais.
     * @param {spt_pegawaiDeleteManyArgs} args - Arguments to filter Spt_pegawais to delete.
     * @example
     * // Delete a few Spt_pegawais
     * const { count } = await prisma.spt_pegawai.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends spt_pegawaiDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, spt_pegawaiDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Spt_pegawais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spt_pegawaiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Spt_pegawais
     * const spt_pegawai = await prisma.spt_pegawai.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends spt_pegawaiUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, spt_pegawaiUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Spt_pegawai.
     * @param {spt_pegawaiUpsertArgs} args - Arguments to update or create a Spt_pegawai.
     * @example
     * // Update or create a Spt_pegawai
     * const spt_pegawai = await prisma.spt_pegawai.upsert({
     *   create: {
     *     // ... data to create a Spt_pegawai
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Spt_pegawai we want to update
     *   }
     * })
    **/
    upsert<T extends spt_pegawaiUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, spt_pegawaiUpsertArgs<ExtArgs>>
    ): Prisma__spt_pegawaiClient<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Spt_pegawais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spt_pegawaiCountArgs} args - Arguments to filter Spt_pegawais to count.
     * @example
     * // Count the number of Spt_pegawais
     * const count = await prisma.spt_pegawai.count({
     *   where: {
     *     // ... the filter for the Spt_pegawais we want to count
     *   }
     * })
    **/
    count<T extends spt_pegawaiCountArgs>(
      args?: Subset<T, spt_pegawaiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Spt_pegawaiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Spt_pegawai.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Spt_pegawaiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Spt_pegawaiAggregateArgs>(args: Subset<T, Spt_pegawaiAggregateArgs>): Prisma.PrismaPromise<GetSpt_pegawaiAggregateType<T>>

    /**
     * Group by Spt_pegawai.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spt_pegawaiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends spt_pegawaiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: spt_pegawaiGroupByArgs['orderBy'] }
        : { orderBy?: spt_pegawaiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, spt_pegawaiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSpt_pegawaiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the spt_pegawai model
   */
  readonly fields: spt_pegawaiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for spt_pegawai.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__spt_pegawaiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    spt<T extends sptDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sptDefaultArgs<ExtArgs>>): Prisma__sptClient<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    biaya<T extends spt_pegawai$biayaArgs<ExtArgs> = {}>(args?: Subset<T, spt_pegawai$biayaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$biayaPayload<ExtArgs>, T, 'findMany'> | Null>;

    npd<T extends spt_pegawai$npdArgs<ExtArgs> = {}>(args?: Subset<T, spt_pegawai$npdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$npdPayload<ExtArgs>, T, 'findMany'> | Null>;

    laporan<T extends spt_pegawai$laporanArgs<ExtArgs> = {}>(args?: Subset<T, spt_pegawai$laporanArgs<ExtArgs>>): Prisma__laporanClient<$Result.GetResult<Prisma.$laporanPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    kwitansi<T extends spt_pegawai$kwitansiArgs<ExtArgs> = {}>(args?: Subset<T, spt_pegawai$kwitansiArgs<ExtArgs>>): Prisma__kwitansiClient<$Result.GetResult<Prisma.$kwitansiPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the spt_pegawai model
   */ 
  interface spt_pegawaiFieldRefs {
    readonly sp_id: FieldRef<"spt_pegawai", 'Int'>
    readonly sp_spt: FieldRef<"spt_pegawai", 'Int'>
    readonly sp_user: FieldRef<"spt_pegawai", 'Int'>
    readonly sp_nomor_sppd: FieldRef<"spt_pegawai", 'String'>
    readonly sp_seq: FieldRef<"spt_pegawai", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * spt_pegawai findUnique
   */
  export type spt_pegawaiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt_pegawai
     */
    select?: spt_pegawaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: spt_pegawaiInclude<ExtArgs> | null
    /**
     * Filter, which spt_pegawai to fetch.
     */
    where: spt_pegawaiWhereUniqueInput
  }


  /**
   * spt_pegawai findUniqueOrThrow
   */
  export type spt_pegawaiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt_pegawai
     */
    select?: spt_pegawaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: spt_pegawaiInclude<ExtArgs> | null
    /**
     * Filter, which spt_pegawai to fetch.
     */
    where: spt_pegawaiWhereUniqueInput
  }


  /**
   * spt_pegawai findFirst
   */
  export type spt_pegawaiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt_pegawai
     */
    select?: spt_pegawaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: spt_pegawaiInclude<ExtArgs> | null
    /**
     * Filter, which spt_pegawai to fetch.
     */
    where?: spt_pegawaiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spt_pegawais to fetch.
     */
    orderBy?: spt_pegawaiOrderByWithRelationInput | spt_pegawaiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for spt_pegawais.
     */
    cursor?: spt_pegawaiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spt_pegawais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spt_pegawais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of spt_pegawais.
     */
    distinct?: Spt_pegawaiScalarFieldEnum | Spt_pegawaiScalarFieldEnum[]
  }


  /**
   * spt_pegawai findFirstOrThrow
   */
  export type spt_pegawaiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt_pegawai
     */
    select?: spt_pegawaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: spt_pegawaiInclude<ExtArgs> | null
    /**
     * Filter, which spt_pegawai to fetch.
     */
    where?: spt_pegawaiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spt_pegawais to fetch.
     */
    orderBy?: spt_pegawaiOrderByWithRelationInput | spt_pegawaiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for spt_pegawais.
     */
    cursor?: spt_pegawaiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spt_pegawais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spt_pegawais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of spt_pegawais.
     */
    distinct?: Spt_pegawaiScalarFieldEnum | Spt_pegawaiScalarFieldEnum[]
  }


  /**
   * spt_pegawai findMany
   */
  export type spt_pegawaiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt_pegawai
     */
    select?: spt_pegawaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: spt_pegawaiInclude<ExtArgs> | null
    /**
     * Filter, which spt_pegawais to fetch.
     */
    where?: spt_pegawaiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spt_pegawais to fetch.
     */
    orderBy?: spt_pegawaiOrderByWithRelationInput | spt_pegawaiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing spt_pegawais.
     */
    cursor?: spt_pegawaiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spt_pegawais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spt_pegawais.
     */
    skip?: number
    distinct?: Spt_pegawaiScalarFieldEnum | Spt_pegawaiScalarFieldEnum[]
  }


  /**
   * spt_pegawai create
   */
  export type spt_pegawaiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt_pegawai
     */
    select?: spt_pegawaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: spt_pegawaiInclude<ExtArgs> | null
    /**
     * The data needed to create a spt_pegawai.
     */
    data: XOR<spt_pegawaiCreateInput, spt_pegawaiUncheckedCreateInput>
  }


  /**
   * spt_pegawai createMany
   */
  export type spt_pegawaiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many spt_pegawais.
     */
    data: spt_pegawaiCreateManyInput | spt_pegawaiCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * spt_pegawai update
   */
  export type spt_pegawaiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt_pegawai
     */
    select?: spt_pegawaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: spt_pegawaiInclude<ExtArgs> | null
    /**
     * The data needed to update a spt_pegawai.
     */
    data: XOR<spt_pegawaiUpdateInput, spt_pegawaiUncheckedUpdateInput>
    /**
     * Choose, which spt_pegawai to update.
     */
    where: spt_pegawaiWhereUniqueInput
  }


  /**
   * spt_pegawai updateMany
   */
  export type spt_pegawaiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update spt_pegawais.
     */
    data: XOR<spt_pegawaiUpdateManyMutationInput, spt_pegawaiUncheckedUpdateManyInput>
    /**
     * Filter which spt_pegawais to update
     */
    where?: spt_pegawaiWhereInput
  }


  /**
   * spt_pegawai upsert
   */
  export type spt_pegawaiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt_pegawai
     */
    select?: spt_pegawaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: spt_pegawaiInclude<ExtArgs> | null
    /**
     * The filter to search for the spt_pegawai to update in case it exists.
     */
    where: spt_pegawaiWhereUniqueInput
    /**
     * In case the spt_pegawai found by the `where` argument doesn't exist, create a new spt_pegawai with this data.
     */
    create: XOR<spt_pegawaiCreateInput, spt_pegawaiUncheckedCreateInput>
    /**
     * In case the spt_pegawai was found with the provided `where` argument, update it with this data.
     */
    update: XOR<spt_pegawaiUpdateInput, spt_pegawaiUncheckedUpdateInput>
  }


  /**
   * spt_pegawai delete
   */
  export type spt_pegawaiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt_pegawai
     */
    select?: spt_pegawaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: spt_pegawaiInclude<ExtArgs> | null
    /**
     * Filter which spt_pegawai to delete.
     */
    where: spt_pegawaiWhereUniqueInput
  }


  /**
   * spt_pegawai deleteMany
   */
  export type spt_pegawaiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which spt_pegawais to delete
     */
    where?: spt_pegawaiWhereInput
  }


  /**
   * spt_pegawai.biaya
   */
  export type spt_pegawai$biayaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the biaya
     */
    select?: biayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: biayaInclude<ExtArgs> | null
    where?: biayaWhereInput
    orderBy?: biayaOrderByWithRelationInput | biayaOrderByWithRelationInput[]
    cursor?: biayaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BiayaScalarFieldEnum | BiayaScalarFieldEnum[]
  }


  /**
   * spt_pegawai.npd
   */
  export type spt_pegawai$npdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the npd
     */
    select?: npdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: npdInclude<ExtArgs> | null
    where?: npdWhereInput
    orderBy?: npdOrderByWithRelationInput | npdOrderByWithRelationInput[]
    cursor?: npdWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NpdScalarFieldEnum | NpdScalarFieldEnum[]
  }


  /**
   * spt_pegawai.laporan
   */
  export type spt_pegawai$laporanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the laporan
     */
    select?: laporanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: laporanInclude<ExtArgs> | null
    where?: laporanWhereInput
  }


  /**
   * spt_pegawai.kwitansi
   */
  export type spt_pegawai$kwitansiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kwitansi
     */
    select?: kwitansiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kwitansiInclude<ExtArgs> | null
    where?: kwitansiWhereInput
  }


  /**
   * spt_pegawai without action
   */
  export type spt_pegawaiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt_pegawai
     */
    select?: spt_pegawaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: spt_pegawaiInclude<ExtArgs> | null
  }



  /**
   * Model npd
   */

  export type AggregateNpd = {
    _count: NpdCountAggregateOutputType | null
    _avg: NpdAvgAggregateOutputType | null
    _sum: NpdSumAggregateOutputType | null
    _min: NpdMinAggregateOutputType | null
    _max: NpdMaxAggregateOutputType | null
  }

  export type NpdAvgAggregateOutputType = {
    npd_spt_pegawai: number | null
    npd_nominal: number | null
  }

  export type NpdSumAggregateOutputType = {
    npd_spt_pegawai: number | null
    npd_nominal: bigint | null
  }

  export type NpdMinAggregateOutputType = {
    npd_spt_pegawai: number | null
    npd_tgl: Date | null
    npd_nominal: bigint | null
    npd_created: Date | null
    npd_updated: Date | null
  }

  export type NpdMaxAggregateOutputType = {
    npd_spt_pegawai: number | null
    npd_tgl: Date | null
    npd_nominal: bigint | null
    npd_created: Date | null
    npd_updated: Date | null
  }

  export type NpdCountAggregateOutputType = {
    npd_spt_pegawai: number
    npd_tgl: number
    npd_nominal: number
    npd_created: number
    npd_updated: number
    _all: number
  }


  export type NpdAvgAggregateInputType = {
    npd_spt_pegawai?: true
    npd_nominal?: true
  }

  export type NpdSumAggregateInputType = {
    npd_spt_pegawai?: true
    npd_nominal?: true
  }

  export type NpdMinAggregateInputType = {
    npd_spt_pegawai?: true
    npd_tgl?: true
    npd_nominal?: true
    npd_created?: true
    npd_updated?: true
  }

  export type NpdMaxAggregateInputType = {
    npd_spt_pegawai?: true
    npd_tgl?: true
    npd_nominal?: true
    npd_created?: true
    npd_updated?: true
  }

  export type NpdCountAggregateInputType = {
    npd_spt_pegawai?: true
    npd_tgl?: true
    npd_nominal?: true
    npd_created?: true
    npd_updated?: true
    _all?: true
  }

  export type NpdAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which npd to aggregate.
     */
    where?: npdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of npds to fetch.
     */
    orderBy?: npdOrderByWithRelationInput | npdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: npdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` npds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` npds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned npds
    **/
    _count?: true | NpdCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NpdAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NpdSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NpdMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NpdMaxAggregateInputType
  }

  export type GetNpdAggregateType<T extends NpdAggregateArgs> = {
        [P in keyof T & keyof AggregateNpd]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNpd[P]>
      : GetScalarType<T[P], AggregateNpd[P]>
  }




  export type npdGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: npdWhereInput
    orderBy?: npdOrderByWithAggregationInput | npdOrderByWithAggregationInput[]
    by: NpdScalarFieldEnum[] | NpdScalarFieldEnum
    having?: npdScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NpdCountAggregateInputType | true
    _avg?: NpdAvgAggregateInputType
    _sum?: NpdSumAggregateInputType
    _min?: NpdMinAggregateInputType
    _max?: NpdMaxAggregateInputType
  }

  export type NpdGroupByOutputType = {
    npd_spt_pegawai: number
    npd_tgl: Date
    npd_nominal: bigint
    npd_created: Date
    npd_updated: Date
    _count: NpdCountAggregateOutputType | null
    _avg: NpdAvgAggregateOutputType | null
    _sum: NpdSumAggregateOutputType | null
    _min: NpdMinAggregateOutputType | null
    _max: NpdMaxAggregateOutputType | null
  }

  type GetNpdGroupByPayload<T extends npdGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NpdGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NpdGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NpdGroupByOutputType[P]>
            : GetScalarType<T[P], NpdGroupByOutputType[P]>
        }
      >
    >


  export type npdSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    npd_spt_pegawai?: boolean
    npd_tgl?: boolean
    npd_nominal?: boolean
    npd_created?: boolean
    npd_updated?: boolean
    spt_pegawai?: boolean | spt_pegawaiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["npd"]>

  export type npdSelectScalar = {
    npd_spt_pegawai?: boolean
    npd_tgl?: boolean
    npd_nominal?: boolean
    npd_created?: boolean
    npd_updated?: boolean
  }

  export type npdInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spt_pegawai?: boolean | spt_pegawaiDefaultArgs<ExtArgs>
  }


  export type $npdPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "npd"
    objects: {
      spt_pegawai: Prisma.$spt_pegawaiPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      npd_spt_pegawai: number
      npd_tgl: Date
      npd_nominal: bigint
      npd_created: Date
      npd_updated: Date
    }, ExtArgs["result"]["npd"]>
    composites: {}
  }


  type npdGetPayload<S extends boolean | null | undefined | npdDefaultArgs> = $Result.GetResult<Prisma.$npdPayload, S>

  type npdCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<npdFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NpdCountAggregateInputType | true
    }

  export interface npdDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['npd'], meta: { name: 'npd' } }
    /**
     * Find zero or one Npd that matches the filter.
     * @param {npdFindUniqueArgs} args - Arguments to find a Npd
     * @example
     * // Get one Npd
     * const npd = await prisma.npd.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends npdFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, npdFindUniqueArgs<ExtArgs>>
    ): Prisma__npdClient<$Result.GetResult<Prisma.$npdPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Npd that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {npdFindUniqueOrThrowArgs} args - Arguments to find a Npd
     * @example
     * // Get one Npd
     * const npd = await prisma.npd.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends npdFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, npdFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__npdClient<$Result.GetResult<Prisma.$npdPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Npd that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {npdFindFirstArgs} args - Arguments to find a Npd
     * @example
     * // Get one Npd
     * const npd = await prisma.npd.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends npdFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, npdFindFirstArgs<ExtArgs>>
    ): Prisma__npdClient<$Result.GetResult<Prisma.$npdPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Npd that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {npdFindFirstOrThrowArgs} args - Arguments to find a Npd
     * @example
     * // Get one Npd
     * const npd = await prisma.npd.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends npdFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, npdFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__npdClient<$Result.GetResult<Prisma.$npdPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Npds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {npdFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Npds
     * const npds = await prisma.npd.findMany()
     * 
     * // Get first 10 Npds
     * const npds = await prisma.npd.findMany({ take: 10 })
     * 
     * // Only select the `npd_spt_pegawai`
     * const npdWithNpd_spt_pegawaiOnly = await prisma.npd.findMany({ select: { npd_spt_pegawai: true } })
     * 
    **/
    findMany<T extends npdFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, npdFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$npdPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Npd.
     * @param {npdCreateArgs} args - Arguments to create a Npd.
     * @example
     * // Create one Npd
     * const Npd = await prisma.npd.create({
     *   data: {
     *     // ... data to create a Npd
     *   }
     * })
     * 
    **/
    create<T extends npdCreateArgs<ExtArgs>>(
      args: SelectSubset<T, npdCreateArgs<ExtArgs>>
    ): Prisma__npdClient<$Result.GetResult<Prisma.$npdPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Npds.
     *     @param {npdCreateManyArgs} args - Arguments to create many Npds.
     *     @example
     *     // Create many Npds
     *     const npd = await prisma.npd.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends npdCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, npdCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Npd.
     * @param {npdDeleteArgs} args - Arguments to delete one Npd.
     * @example
     * // Delete one Npd
     * const Npd = await prisma.npd.delete({
     *   where: {
     *     // ... filter to delete one Npd
     *   }
     * })
     * 
    **/
    delete<T extends npdDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, npdDeleteArgs<ExtArgs>>
    ): Prisma__npdClient<$Result.GetResult<Prisma.$npdPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Npd.
     * @param {npdUpdateArgs} args - Arguments to update one Npd.
     * @example
     * // Update one Npd
     * const npd = await prisma.npd.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends npdUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, npdUpdateArgs<ExtArgs>>
    ): Prisma__npdClient<$Result.GetResult<Prisma.$npdPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Npds.
     * @param {npdDeleteManyArgs} args - Arguments to filter Npds to delete.
     * @example
     * // Delete a few Npds
     * const { count } = await prisma.npd.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends npdDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, npdDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Npds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {npdUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Npds
     * const npd = await prisma.npd.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends npdUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, npdUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Npd.
     * @param {npdUpsertArgs} args - Arguments to update or create a Npd.
     * @example
     * // Update or create a Npd
     * const npd = await prisma.npd.upsert({
     *   create: {
     *     // ... data to create a Npd
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Npd we want to update
     *   }
     * })
    **/
    upsert<T extends npdUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, npdUpsertArgs<ExtArgs>>
    ): Prisma__npdClient<$Result.GetResult<Prisma.$npdPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Npds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {npdCountArgs} args - Arguments to filter Npds to count.
     * @example
     * // Count the number of Npds
     * const count = await prisma.npd.count({
     *   where: {
     *     // ... the filter for the Npds we want to count
     *   }
     * })
    **/
    count<T extends npdCountArgs>(
      args?: Subset<T, npdCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NpdCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Npd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NpdAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NpdAggregateArgs>(args: Subset<T, NpdAggregateArgs>): Prisma.PrismaPromise<GetNpdAggregateType<T>>

    /**
     * Group by Npd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {npdGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends npdGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: npdGroupByArgs['orderBy'] }
        : { orderBy?: npdGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, npdGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNpdGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the npd model
   */
  readonly fields: npdFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for npd.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__npdClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    spt_pegawai<T extends spt_pegawaiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, spt_pegawaiDefaultArgs<ExtArgs>>): Prisma__spt_pegawaiClient<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the npd model
   */ 
  interface npdFieldRefs {
    readonly npd_spt_pegawai: FieldRef<"npd", 'Int'>
    readonly npd_tgl: FieldRef<"npd", 'DateTime'>
    readonly npd_nominal: FieldRef<"npd", 'BigInt'>
    readonly npd_created: FieldRef<"npd", 'DateTime'>
    readonly npd_updated: FieldRef<"npd", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * npd findUnique
   */
  export type npdFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the npd
     */
    select?: npdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: npdInclude<ExtArgs> | null
    /**
     * Filter, which npd to fetch.
     */
    where: npdWhereUniqueInput
  }


  /**
   * npd findUniqueOrThrow
   */
  export type npdFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the npd
     */
    select?: npdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: npdInclude<ExtArgs> | null
    /**
     * Filter, which npd to fetch.
     */
    where: npdWhereUniqueInput
  }


  /**
   * npd findFirst
   */
  export type npdFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the npd
     */
    select?: npdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: npdInclude<ExtArgs> | null
    /**
     * Filter, which npd to fetch.
     */
    where?: npdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of npds to fetch.
     */
    orderBy?: npdOrderByWithRelationInput | npdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for npds.
     */
    cursor?: npdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` npds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` npds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of npds.
     */
    distinct?: NpdScalarFieldEnum | NpdScalarFieldEnum[]
  }


  /**
   * npd findFirstOrThrow
   */
  export type npdFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the npd
     */
    select?: npdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: npdInclude<ExtArgs> | null
    /**
     * Filter, which npd to fetch.
     */
    where?: npdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of npds to fetch.
     */
    orderBy?: npdOrderByWithRelationInput | npdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for npds.
     */
    cursor?: npdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` npds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` npds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of npds.
     */
    distinct?: NpdScalarFieldEnum | NpdScalarFieldEnum[]
  }


  /**
   * npd findMany
   */
  export type npdFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the npd
     */
    select?: npdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: npdInclude<ExtArgs> | null
    /**
     * Filter, which npds to fetch.
     */
    where?: npdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of npds to fetch.
     */
    orderBy?: npdOrderByWithRelationInput | npdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing npds.
     */
    cursor?: npdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` npds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` npds.
     */
    skip?: number
    distinct?: NpdScalarFieldEnum | NpdScalarFieldEnum[]
  }


  /**
   * npd create
   */
  export type npdCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the npd
     */
    select?: npdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: npdInclude<ExtArgs> | null
    /**
     * The data needed to create a npd.
     */
    data: XOR<npdCreateInput, npdUncheckedCreateInput>
  }


  /**
   * npd createMany
   */
  export type npdCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many npds.
     */
    data: npdCreateManyInput | npdCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * npd update
   */
  export type npdUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the npd
     */
    select?: npdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: npdInclude<ExtArgs> | null
    /**
     * The data needed to update a npd.
     */
    data: XOR<npdUpdateInput, npdUncheckedUpdateInput>
    /**
     * Choose, which npd to update.
     */
    where: npdWhereUniqueInput
  }


  /**
   * npd updateMany
   */
  export type npdUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update npds.
     */
    data: XOR<npdUpdateManyMutationInput, npdUncheckedUpdateManyInput>
    /**
     * Filter which npds to update
     */
    where?: npdWhereInput
  }


  /**
   * npd upsert
   */
  export type npdUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the npd
     */
    select?: npdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: npdInclude<ExtArgs> | null
    /**
     * The filter to search for the npd to update in case it exists.
     */
    where: npdWhereUniqueInput
    /**
     * In case the npd found by the `where` argument doesn't exist, create a new npd with this data.
     */
    create: XOR<npdCreateInput, npdUncheckedCreateInput>
    /**
     * In case the npd was found with the provided `where` argument, update it with this data.
     */
    update: XOR<npdUpdateInput, npdUncheckedUpdateInput>
  }


  /**
   * npd delete
   */
  export type npdDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the npd
     */
    select?: npdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: npdInclude<ExtArgs> | null
    /**
     * Filter which npd to delete.
     */
    where: npdWhereUniqueInput
  }


  /**
   * npd deleteMany
   */
  export type npdDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which npds to delete
     */
    where?: npdWhereInput
  }


  /**
   * npd without action
   */
  export type npdDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the npd
     */
    select?: npdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: npdInclude<ExtArgs> | null
  }



  /**
   * Model biaya
   */

  export type AggregateBiaya = {
    _count: BiayaCountAggregateOutputType | null
    _avg: BiayaAvgAggregateOutputType | null
    _sum: BiayaSumAggregateOutputType | null
    _min: BiayaMinAggregateOutputType | null
    _max: BiayaMaxAggregateOutputType | null
  }

  export type BiayaAvgAggregateOutputType = {
    biaya_komponen: number | null
    biaya_standard: number | null
    biaya_nilai: number | null
    biaya_spt_pegawai: number | null
  }

  export type BiayaSumAggregateOutputType = {
    biaya_komponen: number | null
    biaya_standard: number | null
    biaya_nilai: number | null
    biaya_spt_pegawai: number | null
  }

  export type BiayaMinAggregateOutputType = {
    biaya_komponen: number | null
    biaya_standard: number | null
    biaya_nilai: number | null
    biaya_keterangan1: string | null
    biaya_keterangan2: string | null
    biaya_keterangan3: string | null
    biaya_keterangan4: string | null
    biaya_bukti: string | null
    biaya_created: Date | null
    biaya_updated: Date | null
    biaya_spt_pegawai: number | null
  }

  export type BiayaMaxAggregateOutputType = {
    biaya_komponen: number | null
    biaya_standard: number | null
    biaya_nilai: number | null
    biaya_keterangan1: string | null
    biaya_keterangan2: string | null
    biaya_keterangan3: string | null
    biaya_keterangan4: string | null
    biaya_bukti: string | null
    biaya_created: Date | null
    biaya_updated: Date | null
    biaya_spt_pegawai: number | null
  }

  export type BiayaCountAggregateOutputType = {
    biaya_komponen: number
    biaya_standard: number
    biaya_nilai: number
    biaya_keterangan1: number
    biaya_keterangan2: number
    biaya_keterangan3: number
    biaya_keterangan4: number
    biaya_bukti: number
    biaya_created: number
    biaya_updated: number
    biaya_spt_pegawai: number
    _all: number
  }


  export type BiayaAvgAggregateInputType = {
    biaya_komponen?: true
    biaya_standard?: true
    biaya_nilai?: true
    biaya_spt_pegawai?: true
  }

  export type BiayaSumAggregateInputType = {
    biaya_komponen?: true
    biaya_standard?: true
    biaya_nilai?: true
    biaya_spt_pegawai?: true
  }

  export type BiayaMinAggregateInputType = {
    biaya_komponen?: true
    biaya_standard?: true
    biaya_nilai?: true
    biaya_keterangan1?: true
    biaya_keterangan2?: true
    biaya_keterangan3?: true
    biaya_keterangan4?: true
    biaya_bukti?: true
    biaya_created?: true
    biaya_updated?: true
    biaya_spt_pegawai?: true
  }

  export type BiayaMaxAggregateInputType = {
    biaya_komponen?: true
    biaya_standard?: true
    biaya_nilai?: true
    biaya_keterangan1?: true
    biaya_keterangan2?: true
    biaya_keterangan3?: true
    biaya_keterangan4?: true
    biaya_bukti?: true
    biaya_created?: true
    biaya_updated?: true
    biaya_spt_pegawai?: true
  }

  export type BiayaCountAggregateInputType = {
    biaya_komponen?: true
    biaya_standard?: true
    biaya_nilai?: true
    biaya_keterangan1?: true
    biaya_keterangan2?: true
    biaya_keterangan3?: true
    biaya_keterangan4?: true
    biaya_bukti?: true
    biaya_created?: true
    biaya_updated?: true
    biaya_spt_pegawai?: true
    _all?: true
  }

  export type BiayaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which biaya to aggregate.
     */
    where?: biayaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of biayas to fetch.
     */
    orderBy?: biayaOrderByWithRelationInput | biayaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: biayaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` biayas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` biayas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned biayas
    **/
    _count?: true | BiayaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BiayaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BiayaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BiayaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BiayaMaxAggregateInputType
  }

  export type GetBiayaAggregateType<T extends BiayaAggregateArgs> = {
        [P in keyof T & keyof AggregateBiaya]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBiaya[P]>
      : GetScalarType<T[P], AggregateBiaya[P]>
  }




  export type biayaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: biayaWhereInput
    orderBy?: biayaOrderByWithAggregationInput | biayaOrderByWithAggregationInput[]
    by: BiayaScalarFieldEnum[] | BiayaScalarFieldEnum
    having?: biayaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BiayaCountAggregateInputType | true
    _avg?: BiayaAvgAggregateInputType
    _sum?: BiayaSumAggregateInputType
    _min?: BiayaMinAggregateInputType
    _max?: BiayaMaxAggregateInputType
  }

  export type BiayaGroupByOutputType = {
    biaya_komponen: number
    biaya_standard: number
    biaya_nilai: number
    biaya_keterangan1: string | null
    biaya_keterangan2: string | null
    biaya_keterangan3: string | null
    biaya_keterangan4: string | null
    biaya_bukti: string | null
    biaya_created: Date
    biaya_updated: Date | null
    biaya_spt_pegawai: number
    _count: BiayaCountAggregateOutputType | null
    _avg: BiayaAvgAggregateOutputType | null
    _sum: BiayaSumAggregateOutputType | null
    _min: BiayaMinAggregateOutputType | null
    _max: BiayaMaxAggregateOutputType | null
  }

  type GetBiayaGroupByPayload<T extends biayaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BiayaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BiayaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BiayaGroupByOutputType[P]>
            : GetScalarType<T[P], BiayaGroupByOutputType[P]>
        }
      >
    >


  export type biayaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    biaya_komponen?: boolean
    biaya_standard?: boolean
    biaya_nilai?: boolean
    biaya_keterangan1?: boolean
    biaya_keterangan2?: boolean
    biaya_keterangan3?: boolean
    biaya_keterangan4?: boolean
    biaya_bukti?: boolean
    biaya_created?: boolean
    biaya_updated?: boolean
    biaya_spt_pegawai?: boolean
    spt_pegawai?: boolean | spt_pegawaiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["biaya"]>

  export type biayaSelectScalar = {
    biaya_komponen?: boolean
    biaya_standard?: boolean
    biaya_nilai?: boolean
    biaya_keterangan1?: boolean
    biaya_keterangan2?: boolean
    biaya_keterangan3?: boolean
    biaya_keterangan4?: boolean
    biaya_bukti?: boolean
    biaya_created?: boolean
    biaya_updated?: boolean
    biaya_spt_pegawai?: boolean
  }

  export type biayaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spt_pegawai?: boolean | spt_pegawaiDefaultArgs<ExtArgs>
  }


  export type $biayaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "biaya"
    objects: {
      spt_pegawai: Prisma.$spt_pegawaiPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      biaya_komponen: number
      biaya_standard: number
      biaya_nilai: number
      biaya_keterangan1: string | null
      biaya_keterangan2: string | null
      biaya_keterangan3: string | null
      biaya_keterangan4: string | null
      biaya_bukti: string | null
      biaya_created: Date
      biaya_updated: Date | null
      biaya_spt_pegawai: number
    }, ExtArgs["result"]["biaya"]>
    composites: {}
  }


  type biayaGetPayload<S extends boolean | null | undefined | biayaDefaultArgs> = $Result.GetResult<Prisma.$biayaPayload, S>

  type biayaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<biayaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BiayaCountAggregateInputType | true
    }

  export interface biayaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['biaya'], meta: { name: 'biaya' } }
    /**
     * Find zero or one Biaya that matches the filter.
     * @param {biayaFindUniqueArgs} args - Arguments to find a Biaya
     * @example
     * // Get one Biaya
     * const biaya = await prisma.biaya.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends biayaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, biayaFindUniqueArgs<ExtArgs>>
    ): Prisma__biayaClient<$Result.GetResult<Prisma.$biayaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Biaya that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {biayaFindUniqueOrThrowArgs} args - Arguments to find a Biaya
     * @example
     * // Get one Biaya
     * const biaya = await prisma.biaya.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends biayaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, biayaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__biayaClient<$Result.GetResult<Prisma.$biayaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Biaya that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {biayaFindFirstArgs} args - Arguments to find a Biaya
     * @example
     * // Get one Biaya
     * const biaya = await prisma.biaya.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends biayaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, biayaFindFirstArgs<ExtArgs>>
    ): Prisma__biayaClient<$Result.GetResult<Prisma.$biayaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Biaya that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {biayaFindFirstOrThrowArgs} args - Arguments to find a Biaya
     * @example
     * // Get one Biaya
     * const biaya = await prisma.biaya.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends biayaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, biayaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__biayaClient<$Result.GetResult<Prisma.$biayaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Biayas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {biayaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Biayas
     * const biayas = await prisma.biaya.findMany()
     * 
     * // Get first 10 Biayas
     * const biayas = await prisma.biaya.findMany({ take: 10 })
     * 
     * // Only select the `biaya_komponen`
     * const biayaWithBiaya_komponenOnly = await prisma.biaya.findMany({ select: { biaya_komponen: true } })
     * 
    **/
    findMany<T extends biayaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, biayaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$biayaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Biaya.
     * @param {biayaCreateArgs} args - Arguments to create a Biaya.
     * @example
     * // Create one Biaya
     * const Biaya = await prisma.biaya.create({
     *   data: {
     *     // ... data to create a Biaya
     *   }
     * })
     * 
    **/
    create<T extends biayaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, biayaCreateArgs<ExtArgs>>
    ): Prisma__biayaClient<$Result.GetResult<Prisma.$biayaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Biayas.
     *     @param {biayaCreateManyArgs} args - Arguments to create many Biayas.
     *     @example
     *     // Create many Biayas
     *     const biaya = await prisma.biaya.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends biayaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, biayaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Biaya.
     * @param {biayaDeleteArgs} args - Arguments to delete one Biaya.
     * @example
     * // Delete one Biaya
     * const Biaya = await prisma.biaya.delete({
     *   where: {
     *     // ... filter to delete one Biaya
     *   }
     * })
     * 
    **/
    delete<T extends biayaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, biayaDeleteArgs<ExtArgs>>
    ): Prisma__biayaClient<$Result.GetResult<Prisma.$biayaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Biaya.
     * @param {biayaUpdateArgs} args - Arguments to update one Biaya.
     * @example
     * // Update one Biaya
     * const biaya = await prisma.biaya.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends biayaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, biayaUpdateArgs<ExtArgs>>
    ): Prisma__biayaClient<$Result.GetResult<Prisma.$biayaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Biayas.
     * @param {biayaDeleteManyArgs} args - Arguments to filter Biayas to delete.
     * @example
     * // Delete a few Biayas
     * const { count } = await prisma.biaya.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends biayaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, biayaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Biayas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {biayaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Biayas
     * const biaya = await prisma.biaya.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends biayaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, biayaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Biaya.
     * @param {biayaUpsertArgs} args - Arguments to update or create a Biaya.
     * @example
     * // Update or create a Biaya
     * const biaya = await prisma.biaya.upsert({
     *   create: {
     *     // ... data to create a Biaya
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Biaya we want to update
     *   }
     * })
    **/
    upsert<T extends biayaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, biayaUpsertArgs<ExtArgs>>
    ): Prisma__biayaClient<$Result.GetResult<Prisma.$biayaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Biayas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {biayaCountArgs} args - Arguments to filter Biayas to count.
     * @example
     * // Count the number of Biayas
     * const count = await prisma.biaya.count({
     *   where: {
     *     // ... the filter for the Biayas we want to count
     *   }
     * })
    **/
    count<T extends biayaCountArgs>(
      args?: Subset<T, biayaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BiayaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Biaya.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BiayaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BiayaAggregateArgs>(args: Subset<T, BiayaAggregateArgs>): Prisma.PrismaPromise<GetBiayaAggregateType<T>>

    /**
     * Group by Biaya.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {biayaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends biayaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: biayaGroupByArgs['orderBy'] }
        : { orderBy?: biayaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, biayaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBiayaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the biaya model
   */
  readonly fields: biayaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for biaya.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__biayaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    spt_pegawai<T extends spt_pegawaiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, spt_pegawaiDefaultArgs<ExtArgs>>): Prisma__spt_pegawaiClient<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the biaya model
   */ 
  interface biayaFieldRefs {
    readonly biaya_komponen: FieldRef<"biaya", 'Int'>
    readonly biaya_standard: FieldRef<"biaya", 'Int'>
    readonly biaya_nilai: FieldRef<"biaya", 'Int'>
    readonly biaya_keterangan1: FieldRef<"biaya", 'String'>
    readonly biaya_keterangan2: FieldRef<"biaya", 'String'>
    readonly biaya_keterangan3: FieldRef<"biaya", 'String'>
    readonly biaya_keterangan4: FieldRef<"biaya", 'String'>
    readonly biaya_bukti: FieldRef<"biaya", 'String'>
    readonly biaya_created: FieldRef<"biaya", 'DateTime'>
    readonly biaya_updated: FieldRef<"biaya", 'DateTime'>
    readonly biaya_spt_pegawai: FieldRef<"biaya", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * biaya findUnique
   */
  export type biayaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the biaya
     */
    select?: biayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: biayaInclude<ExtArgs> | null
    /**
     * Filter, which biaya to fetch.
     */
    where: biayaWhereUniqueInput
  }


  /**
   * biaya findUniqueOrThrow
   */
  export type biayaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the biaya
     */
    select?: biayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: biayaInclude<ExtArgs> | null
    /**
     * Filter, which biaya to fetch.
     */
    where: biayaWhereUniqueInput
  }


  /**
   * biaya findFirst
   */
  export type biayaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the biaya
     */
    select?: biayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: biayaInclude<ExtArgs> | null
    /**
     * Filter, which biaya to fetch.
     */
    where?: biayaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of biayas to fetch.
     */
    orderBy?: biayaOrderByWithRelationInput | biayaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for biayas.
     */
    cursor?: biayaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` biayas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` biayas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of biayas.
     */
    distinct?: BiayaScalarFieldEnum | BiayaScalarFieldEnum[]
  }


  /**
   * biaya findFirstOrThrow
   */
  export type biayaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the biaya
     */
    select?: biayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: biayaInclude<ExtArgs> | null
    /**
     * Filter, which biaya to fetch.
     */
    where?: biayaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of biayas to fetch.
     */
    orderBy?: biayaOrderByWithRelationInput | biayaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for biayas.
     */
    cursor?: biayaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` biayas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` biayas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of biayas.
     */
    distinct?: BiayaScalarFieldEnum | BiayaScalarFieldEnum[]
  }


  /**
   * biaya findMany
   */
  export type biayaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the biaya
     */
    select?: biayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: biayaInclude<ExtArgs> | null
    /**
     * Filter, which biayas to fetch.
     */
    where?: biayaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of biayas to fetch.
     */
    orderBy?: biayaOrderByWithRelationInput | biayaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing biayas.
     */
    cursor?: biayaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` biayas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` biayas.
     */
    skip?: number
    distinct?: BiayaScalarFieldEnum | BiayaScalarFieldEnum[]
  }


  /**
   * biaya create
   */
  export type biayaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the biaya
     */
    select?: biayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: biayaInclude<ExtArgs> | null
    /**
     * The data needed to create a biaya.
     */
    data: XOR<biayaCreateInput, biayaUncheckedCreateInput>
  }


  /**
   * biaya createMany
   */
  export type biayaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many biayas.
     */
    data: biayaCreateManyInput | biayaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * biaya update
   */
  export type biayaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the biaya
     */
    select?: biayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: biayaInclude<ExtArgs> | null
    /**
     * The data needed to update a biaya.
     */
    data: XOR<biayaUpdateInput, biayaUncheckedUpdateInput>
    /**
     * Choose, which biaya to update.
     */
    where: biayaWhereUniqueInput
  }


  /**
   * biaya updateMany
   */
  export type biayaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update biayas.
     */
    data: XOR<biayaUpdateManyMutationInput, biayaUncheckedUpdateManyInput>
    /**
     * Filter which biayas to update
     */
    where?: biayaWhereInput
  }


  /**
   * biaya upsert
   */
  export type biayaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the biaya
     */
    select?: biayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: biayaInclude<ExtArgs> | null
    /**
     * The filter to search for the biaya to update in case it exists.
     */
    where: biayaWhereUniqueInput
    /**
     * In case the biaya found by the `where` argument doesn't exist, create a new biaya with this data.
     */
    create: XOR<biayaCreateInput, biayaUncheckedCreateInput>
    /**
     * In case the biaya was found with the provided `where` argument, update it with this data.
     */
    update: XOR<biayaUpdateInput, biayaUncheckedUpdateInput>
  }


  /**
   * biaya delete
   */
  export type biayaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the biaya
     */
    select?: biayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: biayaInclude<ExtArgs> | null
    /**
     * Filter which biaya to delete.
     */
    where: biayaWhereUniqueInput
  }


  /**
   * biaya deleteMany
   */
  export type biayaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which biayas to delete
     */
    where?: biayaWhereInput
  }


  /**
   * biaya without action
   */
  export type biayaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the biaya
     */
    select?: biayaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: biayaInclude<ExtArgs> | null
  }



  /**
   * Model provinsi
   */

  export type AggregateProvinsi = {
    _count: ProvinsiCountAggregateOutputType | null
    _avg: ProvinsiAvgAggregateOutputType | null
    _sum: ProvinsiSumAggregateOutputType | null
    _min: ProvinsiMinAggregateOutputType | null
    _max: ProvinsiMaxAggregateOutputType | null
  }

  export type ProvinsiAvgAggregateOutputType = {
    provinsi_id: number | null
  }

  export type ProvinsiSumAggregateOutputType = {
    provinsi_id: number | null
  }

  export type ProvinsiMinAggregateOutputType = {
    provinsi_id: number | null
    provinsi_nama: string | null
  }

  export type ProvinsiMaxAggregateOutputType = {
    provinsi_id: number | null
    provinsi_nama: string | null
  }

  export type ProvinsiCountAggregateOutputType = {
    provinsi_id: number
    provinsi_nama: number
    _all: number
  }


  export type ProvinsiAvgAggregateInputType = {
    provinsi_id?: true
  }

  export type ProvinsiSumAggregateInputType = {
    provinsi_id?: true
  }

  export type ProvinsiMinAggregateInputType = {
    provinsi_id?: true
    provinsi_nama?: true
  }

  export type ProvinsiMaxAggregateInputType = {
    provinsi_id?: true
    provinsi_nama?: true
  }

  export type ProvinsiCountAggregateInputType = {
    provinsi_id?: true
    provinsi_nama?: true
    _all?: true
  }

  export type ProvinsiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which provinsi to aggregate.
     */
    where?: provinsiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provinsis to fetch.
     */
    orderBy?: provinsiOrderByWithRelationInput | provinsiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: provinsiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provinsis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provinsis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned provinsis
    **/
    _count?: true | ProvinsiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProvinsiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProvinsiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProvinsiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProvinsiMaxAggregateInputType
  }

  export type GetProvinsiAggregateType<T extends ProvinsiAggregateArgs> = {
        [P in keyof T & keyof AggregateProvinsi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProvinsi[P]>
      : GetScalarType<T[P], AggregateProvinsi[P]>
  }




  export type provinsiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: provinsiWhereInput
    orderBy?: provinsiOrderByWithAggregationInput | provinsiOrderByWithAggregationInput[]
    by: ProvinsiScalarFieldEnum[] | ProvinsiScalarFieldEnum
    having?: provinsiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProvinsiCountAggregateInputType | true
    _avg?: ProvinsiAvgAggregateInputType
    _sum?: ProvinsiSumAggregateInputType
    _min?: ProvinsiMinAggregateInputType
    _max?: ProvinsiMaxAggregateInputType
  }

  export type ProvinsiGroupByOutputType = {
    provinsi_id: number
    provinsi_nama: string
    _count: ProvinsiCountAggregateOutputType | null
    _avg: ProvinsiAvgAggregateOutputType | null
    _sum: ProvinsiSumAggregateOutputType | null
    _min: ProvinsiMinAggregateOutputType | null
    _max: ProvinsiMaxAggregateOutputType | null
  }

  type GetProvinsiGroupByPayload<T extends provinsiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProvinsiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProvinsiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProvinsiGroupByOutputType[P]>
            : GetScalarType<T[P], ProvinsiGroupByOutputType[P]>
        }
      >
    >


  export type provinsiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    provinsi_id?: boolean
    provinsi_nama?: boolean
    kota?: boolean | provinsi$kotaArgs<ExtArgs>
    _count?: boolean | ProvinsiCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provinsi"]>

  export type provinsiSelectScalar = {
    provinsi_id?: boolean
    provinsi_nama?: boolean
  }

  export type provinsiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kota?: boolean | provinsi$kotaArgs<ExtArgs>
    _count?: boolean | ProvinsiCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $provinsiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "provinsi"
    objects: {
      kota: Prisma.$kotaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      provinsi_id: number
      provinsi_nama: string
    }, ExtArgs["result"]["provinsi"]>
    composites: {}
  }


  type provinsiGetPayload<S extends boolean | null | undefined | provinsiDefaultArgs> = $Result.GetResult<Prisma.$provinsiPayload, S>

  type provinsiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<provinsiFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProvinsiCountAggregateInputType | true
    }

  export interface provinsiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['provinsi'], meta: { name: 'provinsi' } }
    /**
     * Find zero or one Provinsi that matches the filter.
     * @param {provinsiFindUniqueArgs} args - Arguments to find a Provinsi
     * @example
     * // Get one Provinsi
     * const provinsi = await prisma.provinsi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends provinsiFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, provinsiFindUniqueArgs<ExtArgs>>
    ): Prisma__provinsiClient<$Result.GetResult<Prisma.$provinsiPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Provinsi that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {provinsiFindUniqueOrThrowArgs} args - Arguments to find a Provinsi
     * @example
     * // Get one Provinsi
     * const provinsi = await prisma.provinsi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends provinsiFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, provinsiFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__provinsiClient<$Result.GetResult<Prisma.$provinsiPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Provinsi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provinsiFindFirstArgs} args - Arguments to find a Provinsi
     * @example
     * // Get one Provinsi
     * const provinsi = await prisma.provinsi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends provinsiFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, provinsiFindFirstArgs<ExtArgs>>
    ): Prisma__provinsiClient<$Result.GetResult<Prisma.$provinsiPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Provinsi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provinsiFindFirstOrThrowArgs} args - Arguments to find a Provinsi
     * @example
     * // Get one Provinsi
     * const provinsi = await prisma.provinsi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends provinsiFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, provinsiFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__provinsiClient<$Result.GetResult<Prisma.$provinsiPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Provinsis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provinsiFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Provinsis
     * const provinsis = await prisma.provinsi.findMany()
     * 
     * // Get first 10 Provinsis
     * const provinsis = await prisma.provinsi.findMany({ take: 10 })
     * 
     * // Only select the `provinsi_id`
     * const provinsiWithProvinsi_idOnly = await prisma.provinsi.findMany({ select: { provinsi_id: true } })
     * 
    **/
    findMany<T extends provinsiFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, provinsiFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provinsiPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Provinsi.
     * @param {provinsiCreateArgs} args - Arguments to create a Provinsi.
     * @example
     * // Create one Provinsi
     * const Provinsi = await prisma.provinsi.create({
     *   data: {
     *     // ... data to create a Provinsi
     *   }
     * })
     * 
    **/
    create<T extends provinsiCreateArgs<ExtArgs>>(
      args: SelectSubset<T, provinsiCreateArgs<ExtArgs>>
    ): Prisma__provinsiClient<$Result.GetResult<Prisma.$provinsiPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Provinsis.
     *     @param {provinsiCreateManyArgs} args - Arguments to create many Provinsis.
     *     @example
     *     // Create many Provinsis
     *     const provinsi = await prisma.provinsi.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends provinsiCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, provinsiCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Provinsi.
     * @param {provinsiDeleteArgs} args - Arguments to delete one Provinsi.
     * @example
     * // Delete one Provinsi
     * const Provinsi = await prisma.provinsi.delete({
     *   where: {
     *     // ... filter to delete one Provinsi
     *   }
     * })
     * 
    **/
    delete<T extends provinsiDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, provinsiDeleteArgs<ExtArgs>>
    ): Prisma__provinsiClient<$Result.GetResult<Prisma.$provinsiPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Provinsi.
     * @param {provinsiUpdateArgs} args - Arguments to update one Provinsi.
     * @example
     * // Update one Provinsi
     * const provinsi = await prisma.provinsi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends provinsiUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, provinsiUpdateArgs<ExtArgs>>
    ): Prisma__provinsiClient<$Result.GetResult<Prisma.$provinsiPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Provinsis.
     * @param {provinsiDeleteManyArgs} args - Arguments to filter Provinsis to delete.
     * @example
     * // Delete a few Provinsis
     * const { count } = await prisma.provinsi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends provinsiDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, provinsiDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provinsis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provinsiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Provinsis
     * const provinsi = await prisma.provinsi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends provinsiUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, provinsiUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Provinsi.
     * @param {provinsiUpsertArgs} args - Arguments to update or create a Provinsi.
     * @example
     * // Update or create a Provinsi
     * const provinsi = await prisma.provinsi.upsert({
     *   create: {
     *     // ... data to create a Provinsi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Provinsi we want to update
     *   }
     * })
    **/
    upsert<T extends provinsiUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, provinsiUpsertArgs<ExtArgs>>
    ): Prisma__provinsiClient<$Result.GetResult<Prisma.$provinsiPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Provinsis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provinsiCountArgs} args - Arguments to filter Provinsis to count.
     * @example
     * // Count the number of Provinsis
     * const count = await prisma.provinsi.count({
     *   where: {
     *     // ... the filter for the Provinsis we want to count
     *   }
     * })
    **/
    count<T extends provinsiCountArgs>(
      args?: Subset<T, provinsiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProvinsiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Provinsi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProvinsiAggregateArgs>(args: Subset<T, ProvinsiAggregateArgs>): Prisma.PrismaPromise<GetProvinsiAggregateType<T>>

    /**
     * Group by Provinsi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provinsiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends provinsiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: provinsiGroupByArgs['orderBy'] }
        : { orderBy?: provinsiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, provinsiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProvinsiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the provinsi model
   */
  readonly fields: provinsiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for provinsi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__provinsiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    kota<T extends provinsi$kotaArgs<ExtArgs> = {}>(args?: Subset<T, provinsi$kotaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the provinsi model
   */ 
  interface provinsiFieldRefs {
    readonly provinsi_id: FieldRef<"provinsi", 'Int'>
    readonly provinsi_nama: FieldRef<"provinsi", 'String'>
  }
    

  // Custom InputTypes

  /**
   * provinsi findUnique
   */
  export type provinsiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provinsi
     */
    select?: provinsiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: provinsiInclude<ExtArgs> | null
    /**
     * Filter, which provinsi to fetch.
     */
    where: provinsiWhereUniqueInput
  }


  /**
   * provinsi findUniqueOrThrow
   */
  export type provinsiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provinsi
     */
    select?: provinsiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: provinsiInclude<ExtArgs> | null
    /**
     * Filter, which provinsi to fetch.
     */
    where: provinsiWhereUniqueInput
  }


  /**
   * provinsi findFirst
   */
  export type provinsiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provinsi
     */
    select?: provinsiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: provinsiInclude<ExtArgs> | null
    /**
     * Filter, which provinsi to fetch.
     */
    where?: provinsiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provinsis to fetch.
     */
    orderBy?: provinsiOrderByWithRelationInput | provinsiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for provinsis.
     */
    cursor?: provinsiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provinsis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provinsis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of provinsis.
     */
    distinct?: ProvinsiScalarFieldEnum | ProvinsiScalarFieldEnum[]
  }


  /**
   * provinsi findFirstOrThrow
   */
  export type provinsiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provinsi
     */
    select?: provinsiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: provinsiInclude<ExtArgs> | null
    /**
     * Filter, which provinsi to fetch.
     */
    where?: provinsiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provinsis to fetch.
     */
    orderBy?: provinsiOrderByWithRelationInput | provinsiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for provinsis.
     */
    cursor?: provinsiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provinsis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provinsis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of provinsis.
     */
    distinct?: ProvinsiScalarFieldEnum | ProvinsiScalarFieldEnum[]
  }


  /**
   * provinsi findMany
   */
  export type provinsiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provinsi
     */
    select?: provinsiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: provinsiInclude<ExtArgs> | null
    /**
     * Filter, which provinsis to fetch.
     */
    where?: provinsiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provinsis to fetch.
     */
    orderBy?: provinsiOrderByWithRelationInput | provinsiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing provinsis.
     */
    cursor?: provinsiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provinsis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provinsis.
     */
    skip?: number
    distinct?: ProvinsiScalarFieldEnum | ProvinsiScalarFieldEnum[]
  }


  /**
   * provinsi create
   */
  export type provinsiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provinsi
     */
    select?: provinsiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: provinsiInclude<ExtArgs> | null
    /**
     * The data needed to create a provinsi.
     */
    data: XOR<provinsiCreateInput, provinsiUncheckedCreateInput>
  }


  /**
   * provinsi createMany
   */
  export type provinsiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many provinsis.
     */
    data: provinsiCreateManyInput | provinsiCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * provinsi update
   */
  export type provinsiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provinsi
     */
    select?: provinsiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: provinsiInclude<ExtArgs> | null
    /**
     * The data needed to update a provinsi.
     */
    data: XOR<provinsiUpdateInput, provinsiUncheckedUpdateInput>
    /**
     * Choose, which provinsi to update.
     */
    where: provinsiWhereUniqueInput
  }


  /**
   * provinsi updateMany
   */
  export type provinsiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update provinsis.
     */
    data: XOR<provinsiUpdateManyMutationInput, provinsiUncheckedUpdateManyInput>
    /**
     * Filter which provinsis to update
     */
    where?: provinsiWhereInput
  }


  /**
   * provinsi upsert
   */
  export type provinsiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provinsi
     */
    select?: provinsiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: provinsiInclude<ExtArgs> | null
    /**
     * The filter to search for the provinsi to update in case it exists.
     */
    where: provinsiWhereUniqueInput
    /**
     * In case the provinsi found by the `where` argument doesn't exist, create a new provinsi with this data.
     */
    create: XOR<provinsiCreateInput, provinsiUncheckedCreateInput>
    /**
     * In case the provinsi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<provinsiUpdateInput, provinsiUncheckedUpdateInput>
  }


  /**
   * provinsi delete
   */
  export type provinsiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provinsi
     */
    select?: provinsiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: provinsiInclude<ExtArgs> | null
    /**
     * Filter which provinsi to delete.
     */
    where: provinsiWhereUniqueInput
  }


  /**
   * provinsi deleteMany
   */
  export type provinsiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which provinsis to delete
     */
    where?: provinsiWhereInput
  }


  /**
   * provinsi.kota
   */
  export type provinsi$kotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
    where?: kotaWhereInput
    orderBy?: kotaOrderByWithRelationInput | kotaOrderByWithRelationInput[]
    cursor?: kotaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KotaScalarFieldEnum | KotaScalarFieldEnum[]
  }


  /**
   * provinsi without action
   */
  export type provinsiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provinsi
     */
    select?: provinsiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: provinsiInclude<ExtArgs> | null
  }



  /**
   * Model kota
   */

  export type AggregateKota = {
    _count: KotaCountAggregateOutputType | null
    _avg: KotaAvgAggregateOutputType | null
    _sum: KotaSumAggregateOutputType | null
    _min: KotaMinAggregateOutputType | null
    _max: KotaMaxAggregateOutputType | null
  }

  export type KotaAvgAggregateOutputType = {
    kota_id: number | null
    kota_provinsi: number | null
  }

  export type KotaSumAggregateOutputType = {
    kota_id: number | null
    kota_provinsi: number | null
  }

  export type KotaMinAggregateOutputType = {
    kota_id: number | null
    kota_provinsi: number | null
    kota_nama: string | null
    kota_dalam_daerah: boolean | null
    kota_created: Date | null
    kota_updated: Date | null
    kota_deleted: Date | null
  }

  export type KotaMaxAggregateOutputType = {
    kota_id: number | null
    kota_provinsi: number | null
    kota_nama: string | null
    kota_dalam_daerah: boolean | null
    kota_created: Date | null
    kota_updated: Date | null
    kota_deleted: Date | null
  }

  export type KotaCountAggregateOutputType = {
    kota_id: number
    kota_provinsi: number
    kota_nama: number
    kota_dalam_daerah: number
    kota_created: number
    kota_updated: number
    kota_deleted: number
    _all: number
  }


  export type KotaAvgAggregateInputType = {
    kota_id?: true
    kota_provinsi?: true
  }

  export type KotaSumAggregateInputType = {
    kota_id?: true
    kota_provinsi?: true
  }

  export type KotaMinAggregateInputType = {
    kota_id?: true
    kota_provinsi?: true
    kota_nama?: true
    kota_dalam_daerah?: true
    kota_created?: true
    kota_updated?: true
    kota_deleted?: true
  }

  export type KotaMaxAggregateInputType = {
    kota_id?: true
    kota_provinsi?: true
    kota_nama?: true
    kota_dalam_daerah?: true
    kota_created?: true
    kota_updated?: true
    kota_deleted?: true
  }

  export type KotaCountAggregateInputType = {
    kota_id?: true
    kota_provinsi?: true
    kota_nama?: true
    kota_dalam_daerah?: true
    kota_created?: true
    kota_updated?: true
    kota_deleted?: true
    _all?: true
  }

  export type KotaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which kota to aggregate.
     */
    where?: kotaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kotas to fetch.
     */
    orderBy?: kotaOrderByWithRelationInput | kotaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: kotaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kotas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kotas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned kotas
    **/
    _count?: true | KotaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: KotaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: KotaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: KotaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: KotaMaxAggregateInputType
  }

  export type GetKotaAggregateType<T extends KotaAggregateArgs> = {
        [P in keyof T & keyof AggregateKota]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKota[P]>
      : GetScalarType<T[P], AggregateKota[P]>
  }




  export type kotaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: kotaWhereInput
    orderBy?: kotaOrderByWithAggregationInput | kotaOrderByWithAggregationInput[]
    by: KotaScalarFieldEnum[] | KotaScalarFieldEnum
    having?: kotaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: KotaCountAggregateInputType | true
    _avg?: KotaAvgAggregateInputType
    _sum?: KotaSumAggregateInputType
    _min?: KotaMinAggregateInputType
    _max?: KotaMaxAggregateInputType
  }

  export type KotaGroupByOutputType = {
    kota_id: number
    kota_provinsi: number
    kota_nama: string
    kota_dalam_daerah: boolean
    kota_created: Date
    kota_updated: Date
    kota_deleted: Date | null
    _count: KotaCountAggregateOutputType | null
    _avg: KotaAvgAggregateOutputType | null
    _sum: KotaSumAggregateOutputType | null
    _min: KotaMinAggregateOutputType | null
    _max: KotaMaxAggregateOutputType | null
  }

  type GetKotaGroupByPayload<T extends kotaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<KotaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof KotaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], KotaGroupByOutputType[P]>
            : GetScalarType<T[P], KotaGroupByOutputType[P]>
        }
      >
    >


  export type kotaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kota_id?: boolean
    kota_provinsi?: boolean
    kota_nama?: boolean
    kota_dalam_daerah?: boolean
    kota_created?: boolean
    kota_updated?: boolean
    kota_deleted?: boolean
    kota_asal?: boolean | kota$kota_asalArgs<ExtArgs>
    kota_tujuan?: boolean | kota$kota_tujuanArgs<ExtArgs>
    kota_tujuan2?: boolean | kota$kota_tujuan2Args<ExtArgs>
    spt?: boolean | kota$sptArgs<ExtArgs>
    provinsi?: boolean | kota$provinsiArgs<ExtArgs>
    standard_asal?: boolean | kota$standard_asalArgs<ExtArgs>
    standard_tujuan?: boolean | kota$standard_tujuanArgs<ExtArgs>
    _count?: boolean | KotaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kota"]>

  export type kotaSelectScalar = {
    kota_id?: boolean
    kota_provinsi?: boolean
    kota_nama?: boolean
    kota_dalam_daerah?: boolean
    kota_created?: boolean
    kota_updated?: boolean
    kota_deleted?: boolean
  }

  export type kotaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kota_asal?: boolean | kota$kota_asalArgs<ExtArgs>
    kota_tujuan?: boolean | kota$kota_tujuanArgs<ExtArgs>
    kota_tujuan2?: boolean | kota$kota_tujuan2Args<ExtArgs>
    spt?: boolean | kota$sptArgs<ExtArgs>
    provinsi?: boolean | kota$provinsiArgs<ExtArgs>
    standard_asal?: boolean | kota$standard_asalArgs<ExtArgs>
    standard_tujuan?: boolean | kota$standard_tujuanArgs<ExtArgs>
    _count?: boolean | KotaCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $kotaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "kota"
    objects: {
      kota_asal: Prisma.$sptPayload<ExtArgs>[]
      kota_tujuan: Prisma.$sptPayload<ExtArgs>[]
      kota_tujuan2: Prisma.$sptPayload<ExtArgs>[]
      spt: Prisma.$sptPayload<ExtArgs>[]
      provinsi: Prisma.$provinsiPayload<ExtArgs> | null
      standard_asal: Prisma.$standardPayload<ExtArgs>[]
      standard_tujuan: Prisma.$standardPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      kota_id: number
      kota_provinsi: number
      kota_nama: string
      kota_dalam_daerah: boolean
      kota_created: Date
      kota_updated: Date
      kota_deleted: Date | null
    }, ExtArgs["result"]["kota"]>
    composites: {}
  }


  type kotaGetPayload<S extends boolean | null | undefined | kotaDefaultArgs> = $Result.GetResult<Prisma.$kotaPayload, S>

  type kotaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<kotaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: KotaCountAggregateInputType | true
    }

  export interface kotaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['kota'], meta: { name: 'kota' } }
    /**
     * Find zero or one Kota that matches the filter.
     * @param {kotaFindUniqueArgs} args - Arguments to find a Kota
     * @example
     * // Get one Kota
     * const kota = await prisma.kota.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends kotaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, kotaFindUniqueArgs<ExtArgs>>
    ): Prisma__kotaClient<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Kota that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {kotaFindUniqueOrThrowArgs} args - Arguments to find a Kota
     * @example
     * // Get one Kota
     * const kota = await prisma.kota.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends kotaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, kotaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__kotaClient<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Kota that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kotaFindFirstArgs} args - Arguments to find a Kota
     * @example
     * // Get one Kota
     * const kota = await prisma.kota.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends kotaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, kotaFindFirstArgs<ExtArgs>>
    ): Prisma__kotaClient<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Kota that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kotaFindFirstOrThrowArgs} args - Arguments to find a Kota
     * @example
     * // Get one Kota
     * const kota = await prisma.kota.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends kotaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, kotaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__kotaClient<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Kotas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kotaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kotas
     * const kotas = await prisma.kota.findMany()
     * 
     * // Get first 10 Kotas
     * const kotas = await prisma.kota.findMany({ take: 10 })
     * 
     * // Only select the `kota_id`
     * const kotaWithKota_idOnly = await prisma.kota.findMany({ select: { kota_id: true } })
     * 
    **/
    findMany<T extends kotaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kotaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Kota.
     * @param {kotaCreateArgs} args - Arguments to create a Kota.
     * @example
     * // Create one Kota
     * const Kota = await prisma.kota.create({
     *   data: {
     *     // ... data to create a Kota
     *   }
     * })
     * 
    **/
    create<T extends kotaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, kotaCreateArgs<ExtArgs>>
    ): Prisma__kotaClient<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Kotas.
     *     @param {kotaCreateManyArgs} args - Arguments to create many Kotas.
     *     @example
     *     // Create many Kotas
     *     const kota = await prisma.kota.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends kotaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kotaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Kota.
     * @param {kotaDeleteArgs} args - Arguments to delete one Kota.
     * @example
     * // Delete one Kota
     * const Kota = await prisma.kota.delete({
     *   where: {
     *     // ... filter to delete one Kota
     *   }
     * })
     * 
    **/
    delete<T extends kotaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, kotaDeleteArgs<ExtArgs>>
    ): Prisma__kotaClient<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Kota.
     * @param {kotaUpdateArgs} args - Arguments to update one Kota.
     * @example
     * // Update one Kota
     * const kota = await prisma.kota.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends kotaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, kotaUpdateArgs<ExtArgs>>
    ): Prisma__kotaClient<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Kotas.
     * @param {kotaDeleteManyArgs} args - Arguments to filter Kotas to delete.
     * @example
     * // Delete a few Kotas
     * const { count } = await prisma.kota.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends kotaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kotaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kotas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kotaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kotas
     * const kota = await prisma.kota.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends kotaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, kotaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Kota.
     * @param {kotaUpsertArgs} args - Arguments to update or create a Kota.
     * @example
     * // Update or create a Kota
     * const kota = await prisma.kota.upsert({
     *   create: {
     *     // ... data to create a Kota
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kota we want to update
     *   }
     * })
    **/
    upsert<T extends kotaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, kotaUpsertArgs<ExtArgs>>
    ): Prisma__kotaClient<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Kotas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kotaCountArgs} args - Arguments to filter Kotas to count.
     * @example
     * // Count the number of Kotas
     * const count = await prisma.kota.count({
     *   where: {
     *     // ... the filter for the Kotas we want to count
     *   }
     * })
    **/
    count<T extends kotaCountArgs>(
      args?: Subset<T, kotaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], KotaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kota.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KotaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends KotaAggregateArgs>(args: Subset<T, KotaAggregateArgs>): Prisma.PrismaPromise<GetKotaAggregateType<T>>

    /**
     * Group by Kota.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kotaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends kotaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: kotaGroupByArgs['orderBy'] }
        : { orderBy?: kotaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, kotaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKotaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the kota model
   */
  readonly fields: kotaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for kota.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__kotaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    kota_asal<T extends kota$kota_asalArgs<ExtArgs> = {}>(args?: Subset<T, kota$kota_asalArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findMany'> | Null>;

    kota_tujuan<T extends kota$kota_tujuanArgs<ExtArgs> = {}>(args?: Subset<T, kota$kota_tujuanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findMany'> | Null>;

    kota_tujuan2<T extends kota$kota_tujuan2Args<ExtArgs> = {}>(args?: Subset<T, kota$kota_tujuan2Args<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findMany'> | Null>;

    spt<T extends kota$sptArgs<ExtArgs> = {}>(args?: Subset<T, kota$sptArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findMany'> | Null>;

    provinsi<T extends kota$provinsiArgs<ExtArgs> = {}>(args?: Subset<T, kota$provinsiArgs<ExtArgs>>): Prisma__provinsiClient<$Result.GetResult<Prisma.$provinsiPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    standard_asal<T extends kota$standard_asalArgs<ExtArgs> = {}>(args?: Subset<T, kota$standard_asalArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$standardPayload<ExtArgs>, T, 'findMany'> | Null>;

    standard_tujuan<T extends kota$standard_tujuanArgs<ExtArgs> = {}>(args?: Subset<T, kota$standard_tujuanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$standardPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the kota model
   */ 
  interface kotaFieldRefs {
    readonly kota_id: FieldRef<"kota", 'Int'>
    readonly kota_provinsi: FieldRef<"kota", 'Int'>
    readonly kota_nama: FieldRef<"kota", 'String'>
    readonly kota_dalam_daerah: FieldRef<"kota", 'Boolean'>
    readonly kota_created: FieldRef<"kota", 'DateTime'>
    readonly kota_updated: FieldRef<"kota", 'DateTime'>
    readonly kota_deleted: FieldRef<"kota", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * kota findUnique
   */
  export type kotaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
    /**
     * Filter, which kota to fetch.
     */
    where: kotaWhereUniqueInput
  }


  /**
   * kota findUniqueOrThrow
   */
  export type kotaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
    /**
     * Filter, which kota to fetch.
     */
    where: kotaWhereUniqueInput
  }


  /**
   * kota findFirst
   */
  export type kotaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
    /**
     * Filter, which kota to fetch.
     */
    where?: kotaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kotas to fetch.
     */
    orderBy?: kotaOrderByWithRelationInput | kotaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for kotas.
     */
    cursor?: kotaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kotas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kotas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of kotas.
     */
    distinct?: KotaScalarFieldEnum | KotaScalarFieldEnum[]
  }


  /**
   * kota findFirstOrThrow
   */
  export type kotaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
    /**
     * Filter, which kota to fetch.
     */
    where?: kotaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kotas to fetch.
     */
    orderBy?: kotaOrderByWithRelationInput | kotaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for kotas.
     */
    cursor?: kotaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kotas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kotas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of kotas.
     */
    distinct?: KotaScalarFieldEnum | KotaScalarFieldEnum[]
  }


  /**
   * kota findMany
   */
  export type kotaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
    /**
     * Filter, which kotas to fetch.
     */
    where?: kotaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kotas to fetch.
     */
    orderBy?: kotaOrderByWithRelationInput | kotaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing kotas.
     */
    cursor?: kotaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kotas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kotas.
     */
    skip?: number
    distinct?: KotaScalarFieldEnum | KotaScalarFieldEnum[]
  }


  /**
   * kota create
   */
  export type kotaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
    /**
     * The data needed to create a kota.
     */
    data: XOR<kotaCreateInput, kotaUncheckedCreateInput>
  }


  /**
   * kota createMany
   */
  export type kotaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many kotas.
     */
    data: kotaCreateManyInput | kotaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * kota update
   */
  export type kotaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
    /**
     * The data needed to update a kota.
     */
    data: XOR<kotaUpdateInput, kotaUncheckedUpdateInput>
    /**
     * Choose, which kota to update.
     */
    where: kotaWhereUniqueInput
  }


  /**
   * kota updateMany
   */
  export type kotaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update kotas.
     */
    data: XOR<kotaUpdateManyMutationInput, kotaUncheckedUpdateManyInput>
    /**
     * Filter which kotas to update
     */
    where?: kotaWhereInput
  }


  /**
   * kota upsert
   */
  export type kotaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
    /**
     * The filter to search for the kota to update in case it exists.
     */
    where: kotaWhereUniqueInput
    /**
     * In case the kota found by the `where` argument doesn't exist, create a new kota with this data.
     */
    create: XOR<kotaCreateInput, kotaUncheckedCreateInput>
    /**
     * In case the kota was found with the provided `where` argument, update it with this data.
     */
    update: XOR<kotaUpdateInput, kotaUncheckedUpdateInput>
  }


  /**
   * kota delete
   */
  export type kotaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
    /**
     * Filter which kota to delete.
     */
    where: kotaWhereUniqueInput
  }


  /**
   * kota deleteMany
   */
  export type kotaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which kotas to delete
     */
    where?: kotaWhereInput
  }


  /**
   * kota.kota_asal
   */
  export type kota$kota_asalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    where?: sptWhereInput
    orderBy?: sptOrderByWithRelationInput | sptOrderByWithRelationInput[]
    cursor?: sptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SptScalarFieldEnum | SptScalarFieldEnum[]
  }


  /**
   * kota.kota_tujuan
   */
  export type kota$kota_tujuanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    where?: sptWhereInput
    orderBy?: sptOrderByWithRelationInput | sptOrderByWithRelationInput[]
    cursor?: sptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SptScalarFieldEnum | SptScalarFieldEnum[]
  }


  /**
   * kota.kota_tujuan2
   */
  export type kota$kota_tujuan2Args<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    where?: sptWhereInput
    orderBy?: sptOrderByWithRelationInput | sptOrderByWithRelationInput[]
    cursor?: sptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SptScalarFieldEnum | SptScalarFieldEnum[]
  }


  /**
   * kota.spt
   */
  export type kota$sptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    where?: sptWhereInput
    orderBy?: sptOrderByWithRelationInput | sptOrderByWithRelationInput[]
    cursor?: sptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SptScalarFieldEnum | SptScalarFieldEnum[]
  }


  /**
   * kota.provinsi
   */
  export type kota$provinsiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provinsi
     */
    select?: provinsiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: provinsiInclude<ExtArgs> | null
    where?: provinsiWhereInput
  }


  /**
   * kota.standard_asal
   */
  export type kota$standard_asalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the standard
     */
    select?: standardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: standardInclude<ExtArgs> | null
    where?: standardWhereInput
    orderBy?: standardOrderByWithRelationInput | standardOrderByWithRelationInput[]
    cursor?: standardWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StandardScalarFieldEnum | StandardScalarFieldEnum[]
  }


  /**
   * kota.standard_tujuan
   */
  export type kota$standard_tujuanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the standard
     */
    select?: standardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: standardInclude<ExtArgs> | null
    where?: standardWhereInput
    orderBy?: standardOrderByWithRelationInput | standardOrderByWithRelationInput[]
    cursor?: standardWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StandardScalarFieldEnum | StandardScalarFieldEnum[]
  }


  /**
   * kota without action
   */
  export type kotaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
  }



  /**
   * Model laporan
   */

  export type AggregateLaporan = {
    _count: LaporanCountAggregateOutputType | null
    _avg: LaporanAvgAggregateOutputType | null
    _sum: LaporanSumAggregateOutputType | null
    _min: LaporanMinAggregateOutputType | null
    _max: LaporanMaxAggregateOutputType | null
  }

  export type LaporanAvgAggregateOutputType = {
    laporan_id: number | null
    laporan_spt_pegawai: number | null
  }

  export type LaporanSumAggregateOutputType = {
    laporan_id: number | null
    laporan_spt_pegawai: number | null
  }

  export type LaporanMinAggregateOutputType = {
    laporan_id: number | null
    laporan_spt_pegawai: number | null
    laporan_isi: string | null
    laporan_created: Date | null
    laporan_updated: Date | null
  }

  export type LaporanMaxAggregateOutputType = {
    laporan_id: number | null
    laporan_spt_pegawai: number | null
    laporan_isi: string | null
    laporan_created: Date | null
    laporan_updated: Date | null
  }

  export type LaporanCountAggregateOutputType = {
    laporan_id: number
    laporan_spt_pegawai: number
    laporan_isi: number
    laporan_created: number
    laporan_updated: number
    _all: number
  }


  export type LaporanAvgAggregateInputType = {
    laporan_id?: true
    laporan_spt_pegawai?: true
  }

  export type LaporanSumAggregateInputType = {
    laporan_id?: true
    laporan_spt_pegawai?: true
  }

  export type LaporanMinAggregateInputType = {
    laporan_id?: true
    laporan_spt_pegawai?: true
    laporan_isi?: true
    laporan_created?: true
    laporan_updated?: true
  }

  export type LaporanMaxAggregateInputType = {
    laporan_id?: true
    laporan_spt_pegawai?: true
    laporan_isi?: true
    laporan_created?: true
    laporan_updated?: true
  }

  export type LaporanCountAggregateInputType = {
    laporan_id?: true
    laporan_spt_pegawai?: true
    laporan_isi?: true
    laporan_created?: true
    laporan_updated?: true
    _all?: true
  }

  export type LaporanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which laporan to aggregate.
     */
    where?: laporanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of laporans to fetch.
     */
    orderBy?: laporanOrderByWithRelationInput | laporanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: laporanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` laporans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` laporans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned laporans
    **/
    _count?: true | LaporanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LaporanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LaporanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LaporanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LaporanMaxAggregateInputType
  }

  export type GetLaporanAggregateType<T extends LaporanAggregateArgs> = {
        [P in keyof T & keyof AggregateLaporan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLaporan[P]>
      : GetScalarType<T[P], AggregateLaporan[P]>
  }




  export type laporanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: laporanWhereInput
    orderBy?: laporanOrderByWithAggregationInput | laporanOrderByWithAggregationInput[]
    by: LaporanScalarFieldEnum[] | LaporanScalarFieldEnum
    having?: laporanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LaporanCountAggregateInputType | true
    _avg?: LaporanAvgAggregateInputType
    _sum?: LaporanSumAggregateInputType
    _min?: LaporanMinAggregateInputType
    _max?: LaporanMaxAggregateInputType
  }

  export type LaporanGroupByOutputType = {
    laporan_id: number
    laporan_spt_pegawai: number
    laporan_isi: string
    laporan_created: Date
    laporan_updated: Date
    _count: LaporanCountAggregateOutputType | null
    _avg: LaporanAvgAggregateOutputType | null
    _sum: LaporanSumAggregateOutputType | null
    _min: LaporanMinAggregateOutputType | null
    _max: LaporanMaxAggregateOutputType | null
  }

  type GetLaporanGroupByPayload<T extends laporanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LaporanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LaporanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LaporanGroupByOutputType[P]>
            : GetScalarType<T[P], LaporanGroupByOutputType[P]>
        }
      >
    >


  export type laporanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    laporan_id?: boolean
    laporan_spt_pegawai?: boolean
    laporan_isi?: boolean
    laporan_created?: boolean
    laporan_updated?: boolean
    spt_pegawai?: boolean | spt_pegawaiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["laporan"]>

  export type laporanSelectScalar = {
    laporan_id?: boolean
    laporan_spt_pegawai?: boolean
    laporan_isi?: boolean
    laporan_created?: boolean
    laporan_updated?: boolean
  }

  export type laporanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spt_pegawai?: boolean | spt_pegawaiDefaultArgs<ExtArgs>
  }


  export type $laporanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "laporan"
    objects: {
      spt_pegawai: Prisma.$spt_pegawaiPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      laporan_id: number
      laporan_spt_pegawai: number
      laporan_isi: string
      laporan_created: Date
      laporan_updated: Date
    }, ExtArgs["result"]["laporan"]>
    composites: {}
  }


  type laporanGetPayload<S extends boolean | null | undefined | laporanDefaultArgs> = $Result.GetResult<Prisma.$laporanPayload, S>

  type laporanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<laporanFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LaporanCountAggregateInputType | true
    }

  export interface laporanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['laporan'], meta: { name: 'laporan' } }
    /**
     * Find zero or one Laporan that matches the filter.
     * @param {laporanFindUniqueArgs} args - Arguments to find a Laporan
     * @example
     * // Get one Laporan
     * const laporan = await prisma.laporan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends laporanFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, laporanFindUniqueArgs<ExtArgs>>
    ): Prisma__laporanClient<$Result.GetResult<Prisma.$laporanPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Laporan that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {laporanFindUniqueOrThrowArgs} args - Arguments to find a Laporan
     * @example
     * // Get one Laporan
     * const laporan = await prisma.laporan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends laporanFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, laporanFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__laporanClient<$Result.GetResult<Prisma.$laporanPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Laporan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {laporanFindFirstArgs} args - Arguments to find a Laporan
     * @example
     * // Get one Laporan
     * const laporan = await prisma.laporan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends laporanFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, laporanFindFirstArgs<ExtArgs>>
    ): Prisma__laporanClient<$Result.GetResult<Prisma.$laporanPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Laporan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {laporanFindFirstOrThrowArgs} args - Arguments to find a Laporan
     * @example
     * // Get one Laporan
     * const laporan = await prisma.laporan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends laporanFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, laporanFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__laporanClient<$Result.GetResult<Prisma.$laporanPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Laporans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {laporanFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Laporans
     * const laporans = await prisma.laporan.findMany()
     * 
     * // Get first 10 Laporans
     * const laporans = await prisma.laporan.findMany({ take: 10 })
     * 
     * // Only select the `laporan_id`
     * const laporanWithLaporan_idOnly = await prisma.laporan.findMany({ select: { laporan_id: true } })
     * 
    **/
    findMany<T extends laporanFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, laporanFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$laporanPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Laporan.
     * @param {laporanCreateArgs} args - Arguments to create a Laporan.
     * @example
     * // Create one Laporan
     * const Laporan = await prisma.laporan.create({
     *   data: {
     *     // ... data to create a Laporan
     *   }
     * })
     * 
    **/
    create<T extends laporanCreateArgs<ExtArgs>>(
      args: SelectSubset<T, laporanCreateArgs<ExtArgs>>
    ): Prisma__laporanClient<$Result.GetResult<Prisma.$laporanPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Laporans.
     *     @param {laporanCreateManyArgs} args - Arguments to create many Laporans.
     *     @example
     *     // Create many Laporans
     *     const laporan = await prisma.laporan.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends laporanCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, laporanCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Laporan.
     * @param {laporanDeleteArgs} args - Arguments to delete one Laporan.
     * @example
     * // Delete one Laporan
     * const Laporan = await prisma.laporan.delete({
     *   where: {
     *     // ... filter to delete one Laporan
     *   }
     * })
     * 
    **/
    delete<T extends laporanDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, laporanDeleteArgs<ExtArgs>>
    ): Prisma__laporanClient<$Result.GetResult<Prisma.$laporanPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Laporan.
     * @param {laporanUpdateArgs} args - Arguments to update one Laporan.
     * @example
     * // Update one Laporan
     * const laporan = await prisma.laporan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends laporanUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, laporanUpdateArgs<ExtArgs>>
    ): Prisma__laporanClient<$Result.GetResult<Prisma.$laporanPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Laporans.
     * @param {laporanDeleteManyArgs} args - Arguments to filter Laporans to delete.
     * @example
     * // Delete a few Laporans
     * const { count } = await prisma.laporan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends laporanDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, laporanDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Laporans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {laporanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Laporans
     * const laporan = await prisma.laporan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends laporanUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, laporanUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Laporan.
     * @param {laporanUpsertArgs} args - Arguments to update or create a Laporan.
     * @example
     * // Update or create a Laporan
     * const laporan = await prisma.laporan.upsert({
     *   create: {
     *     // ... data to create a Laporan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Laporan we want to update
     *   }
     * })
    **/
    upsert<T extends laporanUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, laporanUpsertArgs<ExtArgs>>
    ): Prisma__laporanClient<$Result.GetResult<Prisma.$laporanPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Laporans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {laporanCountArgs} args - Arguments to filter Laporans to count.
     * @example
     * // Count the number of Laporans
     * const count = await prisma.laporan.count({
     *   where: {
     *     // ... the filter for the Laporans we want to count
     *   }
     * })
    **/
    count<T extends laporanCountArgs>(
      args?: Subset<T, laporanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LaporanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Laporan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaporanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LaporanAggregateArgs>(args: Subset<T, LaporanAggregateArgs>): Prisma.PrismaPromise<GetLaporanAggregateType<T>>

    /**
     * Group by Laporan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {laporanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends laporanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: laporanGroupByArgs['orderBy'] }
        : { orderBy?: laporanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, laporanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLaporanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the laporan model
   */
  readonly fields: laporanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for laporan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__laporanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    spt_pegawai<T extends spt_pegawaiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, spt_pegawaiDefaultArgs<ExtArgs>>): Prisma__spt_pegawaiClient<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the laporan model
   */ 
  interface laporanFieldRefs {
    readonly laporan_id: FieldRef<"laporan", 'Int'>
    readonly laporan_spt_pegawai: FieldRef<"laporan", 'Int'>
    readonly laporan_isi: FieldRef<"laporan", 'String'>
    readonly laporan_created: FieldRef<"laporan", 'DateTime'>
    readonly laporan_updated: FieldRef<"laporan", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * laporan findUnique
   */
  export type laporanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the laporan
     */
    select?: laporanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: laporanInclude<ExtArgs> | null
    /**
     * Filter, which laporan to fetch.
     */
    where: laporanWhereUniqueInput
  }


  /**
   * laporan findUniqueOrThrow
   */
  export type laporanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the laporan
     */
    select?: laporanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: laporanInclude<ExtArgs> | null
    /**
     * Filter, which laporan to fetch.
     */
    where: laporanWhereUniqueInput
  }


  /**
   * laporan findFirst
   */
  export type laporanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the laporan
     */
    select?: laporanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: laporanInclude<ExtArgs> | null
    /**
     * Filter, which laporan to fetch.
     */
    where?: laporanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of laporans to fetch.
     */
    orderBy?: laporanOrderByWithRelationInput | laporanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for laporans.
     */
    cursor?: laporanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` laporans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` laporans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of laporans.
     */
    distinct?: LaporanScalarFieldEnum | LaporanScalarFieldEnum[]
  }


  /**
   * laporan findFirstOrThrow
   */
  export type laporanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the laporan
     */
    select?: laporanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: laporanInclude<ExtArgs> | null
    /**
     * Filter, which laporan to fetch.
     */
    where?: laporanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of laporans to fetch.
     */
    orderBy?: laporanOrderByWithRelationInput | laporanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for laporans.
     */
    cursor?: laporanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` laporans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` laporans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of laporans.
     */
    distinct?: LaporanScalarFieldEnum | LaporanScalarFieldEnum[]
  }


  /**
   * laporan findMany
   */
  export type laporanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the laporan
     */
    select?: laporanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: laporanInclude<ExtArgs> | null
    /**
     * Filter, which laporans to fetch.
     */
    where?: laporanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of laporans to fetch.
     */
    orderBy?: laporanOrderByWithRelationInput | laporanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing laporans.
     */
    cursor?: laporanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` laporans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` laporans.
     */
    skip?: number
    distinct?: LaporanScalarFieldEnum | LaporanScalarFieldEnum[]
  }


  /**
   * laporan create
   */
  export type laporanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the laporan
     */
    select?: laporanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: laporanInclude<ExtArgs> | null
    /**
     * The data needed to create a laporan.
     */
    data: XOR<laporanCreateInput, laporanUncheckedCreateInput>
  }


  /**
   * laporan createMany
   */
  export type laporanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many laporans.
     */
    data: laporanCreateManyInput | laporanCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * laporan update
   */
  export type laporanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the laporan
     */
    select?: laporanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: laporanInclude<ExtArgs> | null
    /**
     * The data needed to update a laporan.
     */
    data: XOR<laporanUpdateInput, laporanUncheckedUpdateInput>
    /**
     * Choose, which laporan to update.
     */
    where: laporanWhereUniqueInput
  }


  /**
   * laporan updateMany
   */
  export type laporanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update laporans.
     */
    data: XOR<laporanUpdateManyMutationInput, laporanUncheckedUpdateManyInput>
    /**
     * Filter which laporans to update
     */
    where?: laporanWhereInput
  }


  /**
   * laporan upsert
   */
  export type laporanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the laporan
     */
    select?: laporanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: laporanInclude<ExtArgs> | null
    /**
     * The filter to search for the laporan to update in case it exists.
     */
    where: laporanWhereUniqueInput
    /**
     * In case the laporan found by the `where` argument doesn't exist, create a new laporan with this data.
     */
    create: XOR<laporanCreateInput, laporanUncheckedCreateInput>
    /**
     * In case the laporan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<laporanUpdateInput, laporanUncheckedUpdateInput>
  }


  /**
   * laporan delete
   */
  export type laporanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the laporan
     */
    select?: laporanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: laporanInclude<ExtArgs> | null
    /**
     * Filter which laporan to delete.
     */
    where: laporanWhereUniqueInput
  }


  /**
   * laporan deleteMany
   */
  export type laporanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which laporans to delete
     */
    where?: laporanWhereInput
  }


  /**
   * laporan without action
   */
  export type laporanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the laporan
     */
    select?: laporanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: laporanInclude<ExtArgs> | null
  }



  /**
   * Model setting
   */

  export type AggregateSetting = {
    _count: SettingCountAggregateOutputType | null
    _avg: SettingAvgAggregateOutputType | null
    _sum: SettingSumAggregateOutputType | null
    _min: SettingMinAggregateOutputType | null
    _max: SettingMaxAggregateOutputType | null
  }

  export type SettingAvgAggregateOutputType = {
    setting_opd: number | null
  }

  export type SettingSumAggregateOutputType = {
    setting_opd: number | null
  }

  export type SettingMinAggregateOutputType = {
    setting_id: string | null
    setting_opd: number | null
    setting_value: string | null
    setting_lastupdate: Date | null
  }

  export type SettingMaxAggregateOutputType = {
    setting_id: string | null
    setting_opd: number | null
    setting_value: string | null
    setting_lastupdate: Date | null
  }

  export type SettingCountAggregateOutputType = {
    setting_id: number
    setting_opd: number
    setting_value: number
    setting_lastupdate: number
    _all: number
  }


  export type SettingAvgAggregateInputType = {
    setting_opd?: true
  }

  export type SettingSumAggregateInputType = {
    setting_opd?: true
  }

  export type SettingMinAggregateInputType = {
    setting_id?: true
    setting_opd?: true
    setting_value?: true
    setting_lastupdate?: true
  }

  export type SettingMaxAggregateInputType = {
    setting_id?: true
    setting_opd?: true
    setting_value?: true
    setting_lastupdate?: true
  }

  export type SettingCountAggregateInputType = {
    setting_id?: true
    setting_opd?: true
    setting_value?: true
    setting_lastupdate?: true
    _all?: true
  }

  export type SettingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which setting to aggregate.
     */
    where?: settingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of settings to fetch.
     */
    orderBy?: settingOrderByWithRelationInput | settingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: settingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned settings
    **/
    _count?: true | SettingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SettingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SettingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SettingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SettingMaxAggregateInputType
  }

  export type GetSettingAggregateType<T extends SettingAggregateArgs> = {
        [P in keyof T & keyof AggregateSetting]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSetting[P]>
      : GetScalarType<T[P], AggregateSetting[P]>
  }




  export type settingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: settingWhereInput
    orderBy?: settingOrderByWithAggregationInput | settingOrderByWithAggregationInput[]
    by: SettingScalarFieldEnum[] | SettingScalarFieldEnum
    having?: settingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SettingCountAggregateInputType | true
    _avg?: SettingAvgAggregateInputType
    _sum?: SettingSumAggregateInputType
    _min?: SettingMinAggregateInputType
    _max?: SettingMaxAggregateInputType
  }

  export type SettingGroupByOutputType = {
    setting_id: string
    setting_opd: number
    setting_value: string
    setting_lastupdate: Date
    _count: SettingCountAggregateOutputType | null
    _avg: SettingAvgAggregateOutputType | null
    _sum: SettingSumAggregateOutputType | null
    _min: SettingMinAggregateOutputType | null
    _max: SettingMaxAggregateOutputType | null
  }

  type GetSettingGroupByPayload<T extends settingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SettingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SettingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SettingGroupByOutputType[P]>
            : GetScalarType<T[P], SettingGroupByOutputType[P]>
        }
      >
    >


  export type settingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    setting_id?: boolean
    setting_opd?: boolean
    setting_value?: boolean
    setting_lastupdate?: boolean
    opd?: boolean | opdDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["setting"]>

  export type settingSelectScalar = {
    setting_id?: boolean
    setting_opd?: boolean
    setting_value?: boolean
    setting_lastupdate?: boolean
  }

  export type settingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    opd?: boolean | opdDefaultArgs<ExtArgs>
  }


  export type $settingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "setting"
    objects: {
      opd: Prisma.$opdPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      setting_id: string
      setting_opd: number
      setting_value: string
      setting_lastupdate: Date
    }, ExtArgs["result"]["setting"]>
    composites: {}
  }


  type settingGetPayload<S extends boolean | null | undefined | settingDefaultArgs> = $Result.GetResult<Prisma.$settingPayload, S>

  type settingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<settingFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SettingCountAggregateInputType | true
    }

  export interface settingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['setting'], meta: { name: 'setting' } }
    /**
     * Find zero or one Setting that matches the filter.
     * @param {settingFindUniqueArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends settingFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, settingFindUniqueArgs<ExtArgs>>
    ): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Setting that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {settingFindUniqueOrThrowArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends settingFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, settingFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Setting that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingFindFirstArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends settingFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, settingFindFirstArgs<ExtArgs>>
    ): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Setting that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingFindFirstOrThrowArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends settingFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, settingFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Settings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Settings
     * const settings = await prisma.setting.findMany()
     * 
     * // Get first 10 Settings
     * const settings = await prisma.setting.findMany({ take: 10 })
     * 
     * // Only select the `setting_id`
     * const settingWithSetting_idOnly = await prisma.setting.findMany({ select: { setting_id: true } })
     * 
    **/
    findMany<T extends settingFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, settingFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Setting.
     * @param {settingCreateArgs} args - Arguments to create a Setting.
     * @example
     * // Create one Setting
     * const Setting = await prisma.setting.create({
     *   data: {
     *     // ... data to create a Setting
     *   }
     * })
     * 
    **/
    create<T extends settingCreateArgs<ExtArgs>>(
      args: SelectSubset<T, settingCreateArgs<ExtArgs>>
    ): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Settings.
     *     @param {settingCreateManyArgs} args - Arguments to create many Settings.
     *     @example
     *     // Create many Settings
     *     const setting = await prisma.setting.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends settingCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, settingCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Setting.
     * @param {settingDeleteArgs} args - Arguments to delete one Setting.
     * @example
     * // Delete one Setting
     * const Setting = await prisma.setting.delete({
     *   where: {
     *     // ... filter to delete one Setting
     *   }
     * })
     * 
    **/
    delete<T extends settingDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, settingDeleteArgs<ExtArgs>>
    ): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Setting.
     * @param {settingUpdateArgs} args - Arguments to update one Setting.
     * @example
     * // Update one Setting
     * const setting = await prisma.setting.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends settingUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, settingUpdateArgs<ExtArgs>>
    ): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Settings.
     * @param {settingDeleteManyArgs} args - Arguments to filter Settings to delete.
     * @example
     * // Delete a few Settings
     * const { count } = await prisma.setting.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends settingDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, settingDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Settings
     * const setting = await prisma.setting.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends settingUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, settingUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Setting.
     * @param {settingUpsertArgs} args - Arguments to update or create a Setting.
     * @example
     * // Update or create a Setting
     * const setting = await prisma.setting.upsert({
     *   create: {
     *     // ... data to create a Setting
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Setting we want to update
     *   }
     * })
    **/
    upsert<T extends settingUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, settingUpsertArgs<ExtArgs>>
    ): Prisma__settingClient<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingCountArgs} args - Arguments to filter Settings to count.
     * @example
     * // Count the number of Settings
     * const count = await prisma.setting.count({
     *   where: {
     *     // ... the filter for the Settings we want to count
     *   }
     * })
    **/
    count<T extends settingCountArgs>(
      args?: Subset<T, settingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SettingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Setting.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SettingAggregateArgs>(args: Subset<T, SettingAggregateArgs>): Prisma.PrismaPromise<GetSettingAggregateType<T>>

    /**
     * Group by Setting.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends settingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: settingGroupByArgs['orderBy'] }
        : { orderBy?: settingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, settingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSettingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the setting model
   */
  readonly fields: settingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for setting.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__settingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    opd<T extends opdDefaultArgs<ExtArgs> = {}>(args?: Subset<T, opdDefaultArgs<ExtArgs>>): Prisma__opdClient<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the setting model
   */ 
  interface settingFieldRefs {
    readonly setting_id: FieldRef<"setting", 'String'>
    readonly setting_opd: FieldRef<"setting", 'Int'>
    readonly setting_value: FieldRef<"setting", 'String'>
    readonly setting_lastupdate: FieldRef<"setting", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * setting findUnique
   */
  export type settingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: settingInclude<ExtArgs> | null
    /**
     * Filter, which setting to fetch.
     */
    where: settingWhereUniqueInput
  }


  /**
   * setting findUniqueOrThrow
   */
  export type settingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: settingInclude<ExtArgs> | null
    /**
     * Filter, which setting to fetch.
     */
    where: settingWhereUniqueInput
  }


  /**
   * setting findFirst
   */
  export type settingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: settingInclude<ExtArgs> | null
    /**
     * Filter, which setting to fetch.
     */
    where?: settingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of settings to fetch.
     */
    orderBy?: settingOrderByWithRelationInput | settingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for settings.
     */
    cursor?: settingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of settings.
     */
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }


  /**
   * setting findFirstOrThrow
   */
  export type settingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: settingInclude<ExtArgs> | null
    /**
     * Filter, which setting to fetch.
     */
    where?: settingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of settings to fetch.
     */
    orderBy?: settingOrderByWithRelationInput | settingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for settings.
     */
    cursor?: settingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of settings.
     */
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }


  /**
   * setting findMany
   */
  export type settingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: settingInclude<ExtArgs> | null
    /**
     * Filter, which settings to fetch.
     */
    where?: settingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of settings to fetch.
     */
    orderBy?: settingOrderByWithRelationInput | settingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing settings.
     */
    cursor?: settingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` settings.
     */
    skip?: number
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }


  /**
   * setting create
   */
  export type settingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: settingInclude<ExtArgs> | null
    /**
     * The data needed to create a setting.
     */
    data: XOR<settingCreateInput, settingUncheckedCreateInput>
  }


  /**
   * setting createMany
   */
  export type settingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many settings.
     */
    data: settingCreateManyInput | settingCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * setting update
   */
  export type settingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: settingInclude<ExtArgs> | null
    /**
     * The data needed to update a setting.
     */
    data: XOR<settingUpdateInput, settingUncheckedUpdateInput>
    /**
     * Choose, which setting to update.
     */
    where: settingWhereUniqueInput
  }


  /**
   * setting updateMany
   */
  export type settingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update settings.
     */
    data: XOR<settingUpdateManyMutationInput, settingUncheckedUpdateManyInput>
    /**
     * Filter which settings to update
     */
    where?: settingWhereInput
  }


  /**
   * setting upsert
   */
  export type settingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: settingInclude<ExtArgs> | null
    /**
     * The filter to search for the setting to update in case it exists.
     */
    where: settingWhereUniqueInput
    /**
     * In case the setting found by the `where` argument doesn't exist, create a new setting with this data.
     */
    create: XOR<settingCreateInput, settingUncheckedCreateInput>
    /**
     * In case the setting was found with the provided `where` argument, update it with this data.
     */
    update: XOR<settingUpdateInput, settingUncheckedUpdateInput>
  }


  /**
   * setting delete
   */
  export type settingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: settingInclude<ExtArgs> | null
    /**
     * Filter which setting to delete.
     */
    where: settingWhereUniqueInput
  }


  /**
   * setting deleteMany
   */
  export type settingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which settings to delete
     */
    where?: settingWhereInput
  }


  /**
   * setting without action
   */
  export type settingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: settingInclude<ExtArgs> | null
  }



  /**
   * Model kegiatan
   */

  export type AggregateKegiatan = {
    _count: KegiatanCountAggregateOutputType | null
    _avg: KegiatanAvgAggregateOutputType | null
    _sum: KegiatanSumAggregateOutputType | null
    _min: KegiatanMinAggregateOutputType | null
    _max: KegiatanMaxAggregateOutputType | null
  }

  export type KegiatanAvgAggregateOutputType = {
    kegiatan_id: number | null
    kegiatan_opd: number | null
  }

  export type KegiatanSumAggregateOutputType = {
    kegiatan_id: number | null
    kegiatan_opd: number | null
  }

  export type KegiatanMinAggregateOutputType = {
    kegiatan_id: number | null
    kegiatan_opd: number | null
    kegiatan_kode: string | null
    kegiatan_program: string | null
    kegiatan_nama: string | null
    kegiatan_subkegiatan: string | null
    kegiatan_created: Date | null
    kegiatan_updated: Date | null
    kegiatan_deleted: Date | null
  }

  export type KegiatanMaxAggregateOutputType = {
    kegiatan_id: number | null
    kegiatan_opd: number | null
    kegiatan_kode: string | null
    kegiatan_program: string | null
    kegiatan_nama: string | null
    kegiatan_subkegiatan: string | null
    kegiatan_created: Date | null
    kegiatan_updated: Date | null
    kegiatan_deleted: Date | null
  }

  export type KegiatanCountAggregateOutputType = {
    kegiatan_id: number
    kegiatan_opd: number
    kegiatan_kode: number
    kegiatan_program: number
    kegiatan_nama: number
    kegiatan_subkegiatan: number
    kegiatan_created: number
    kegiatan_updated: number
    kegiatan_deleted: number
    _all: number
  }


  export type KegiatanAvgAggregateInputType = {
    kegiatan_id?: true
    kegiatan_opd?: true
  }

  export type KegiatanSumAggregateInputType = {
    kegiatan_id?: true
    kegiatan_opd?: true
  }

  export type KegiatanMinAggregateInputType = {
    kegiatan_id?: true
    kegiatan_opd?: true
    kegiatan_kode?: true
    kegiatan_program?: true
    kegiatan_nama?: true
    kegiatan_subkegiatan?: true
    kegiatan_created?: true
    kegiatan_updated?: true
    kegiatan_deleted?: true
  }

  export type KegiatanMaxAggregateInputType = {
    kegiatan_id?: true
    kegiatan_opd?: true
    kegiatan_kode?: true
    kegiatan_program?: true
    kegiatan_nama?: true
    kegiatan_subkegiatan?: true
    kegiatan_created?: true
    kegiatan_updated?: true
    kegiatan_deleted?: true
  }

  export type KegiatanCountAggregateInputType = {
    kegiatan_id?: true
    kegiatan_opd?: true
    kegiatan_kode?: true
    kegiatan_program?: true
    kegiatan_nama?: true
    kegiatan_subkegiatan?: true
    kegiatan_created?: true
    kegiatan_updated?: true
    kegiatan_deleted?: true
    _all?: true
  }

  export type KegiatanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which kegiatan to aggregate.
     */
    where?: kegiatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kegiatans to fetch.
     */
    orderBy?: kegiatanOrderByWithRelationInput | kegiatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: kegiatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kegiatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kegiatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned kegiatans
    **/
    _count?: true | KegiatanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: KegiatanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: KegiatanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: KegiatanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: KegiatanMaxAggregateInputType
  }

  export type GetKegiatanAggregateType<T extends KegiatanAggregateArgs> = {
        [P in keyof T & keyof AggregateKegiatan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKegiatan[P]>
      : GetScalarType<T[P], AggregateKegiatan[P]>
  }




  export type kegiatanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: kegiatanWhereInput
    orderBy?: kegiatanOrderByWithAggregationInput | kegiatanOrderByWithAggregationInput[]
    by: KegiatanScalarFieldEnum[] | KegiatanScalarFieldEnum
    having?: kegiatanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: KegiatanCountAggregateInputType | true
    _avg?: KegiatanAvgAggregateInputType
    _sum?: KegiatanSumAggregateInputType
    _min?: KegiatanMinAggregateInputType
    _max?: KegiatanMaxAggregateInputType
  }

  export type KegiatanGroupByOutputType = {
    kegiatan_id: number
    kegiatan_opd: number
    kegiatan_kode: string
    kegiatan_program: string
    kegiatan_nama: string
    kegiatan_subkegiatan: string
    kegiatan_created: Date
    kegiatan_updated: Date
    kegiatan_deleted: Date | null
    _count: KegiatanCountAggregateOutputType | null
    _avg: KegiatanAvgAggregateOutputType | null
    _sum: KegiatanSumAggregateOutputType | null
    _min: KegiatanMinAggregateOutputType | null
    _max: KegiatanMaxAggregateOutputType | null
  }

  type GetKegiatanGroupByPayload<T extends kegiatanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<KegiatanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof KegiatanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], KegiatanGroupByOutputType[P]>
            : GetScalarType<T[P], KegiatanGroupByOutputType[P]>
        }
      >
    >


  export type kegiatanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kegiatan_id?: boolean
    kegiatan_opd?: boolean
    kegiatan_kode?: boolean
    kegiatan_program?: boolean
    kegiatan_nama?: boolean
    kegiatan_subkegiatan?: boolean
    kegiatan_created?: boolean
    kegiatan_updated?: boolean
    kegiatan_deleted?: boolean
    sumberdana?: boolean | kegiatan$sumberdanaArgs<ExtArgs>
    spt?: boolean | kegiatan$sptArgs<ExtArgs>
    opd?: boolean | opdDefaultArgs<ExtArgs>
    _count?: boolean | KegiatanCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kegiatan"]>

  export type kegiatanSelectScalar = {
    kegiatan_id?: boolean
    kegiatan_opd?: boolean
    kegiatan_kode?: boolean
    kegiatan_program?: boolean
    kegiatan_nama?: boolean
    kegiatan_subkegiatan?: boolean
    kegiatan_created?: boolean
    kegiatan_updated?: boolean
    kegiatan_deleted?: boolean
  }

  export type kegiatanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sumberdana?: boolean | kegiatan$sumberdanaArgs<ExtArgs>
    spt?: boolean | kegiatan$sptArgs<ExtArgs>
    opd?: boolean | opdDefaultArgs<ExtArgs>
    _count?: boolean | KegiatanCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $kegiatanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "kegiatan"
    objects: {
      sumberdana: Prisma.$sumberdanaPayload<ExtArgs>[]
      spt: Prisma.$sptPayload<ExtArgs>[]
      opd: Prisma.$opdPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      kegiatan_id: number
      kegiatan_opd: number
      kegiatan_kode: string
      kegiatan_program: string
      kegiatan_nama: string
      kegiatan_subkegiatan: string
      kegiatan_created: Date
      kegiatan_updated: Date
      kegiatan_deleted: Date | null
    }, ExtArgs["result"]["kegiatan"]>
    composites: {}
  }


  type kegiatanGetPayload<S extends boolean | null | undefined | kegiatanDefaultArgs> = $Result.GetResult<Prisma.$kegiatanPayload, S>

  type kegiatanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<kegiatanFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: KegiatanCountAggregateInputType | true
    }

  export interface kegiatanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['kegiatan'], meta: { name: 'kegiatan' } }
    /**
     * Find zero or one Kegiatan that matches the filter.
     * @param {kegiatanFindUniqueArgs} args - Arguments to find a Kegiatan
     * @example
     * // Get one Kegiatan
     * const kegiatan = await prisma.kegiatan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends kegiatanFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, kegiatanFindUniqueArgs<ExtArgs>>
    ): Prisma__kegiatanClient<$Result.GetResult<Prisma.$kegiatanPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Kegiatan that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {kegiatanFindUniqueOrThrowArgs} args - Arguments to find a Kegiatan
     * @example
     * // Get one Kegiatan
     * const kegiatan = await prisma.kegiatan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends kegiatanFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, kegiatanFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__kegiatanClient<$Result.GetResult<Prisma.$kegiatanPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Kegiatan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kegiatanFindFirstArgs} args - Arguments to find a Kegiatan
     * @example
     * // Get one Kegiatan
     * const kegiatan = await prisma.kegiatan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends kegiatanFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, kegiatanFindFirstArgs<ExtArgs>>
    ): Prisma__kegiatanClient<$Result.GetResult<Prisma.$kegiatanPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Kegiatan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kegiatanFindFirstOrThrowArgs} args - Arguments to find a Kegiatan
     * @example
     * // Get one Kegiatan
     * const kegiatan = await prisma.kegiatan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends kegiatanFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, kegiatanFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__kegiatanClient<$Result.GetResult<Prisma.$kegiatanPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Kegiatans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kegiatanFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kegiatans
     * const kegiatans = await prisma.kegiatan.findMany()
     * 
     * // Get first 10 Kegiatans
     * const kegiatans = await prisma.kegiatan.findMany({ take: 10 })
     * 
     * // Only select the `kegiatan_id`
     * const kegiatanWithKegiatan_idOnly = await prisma.kegiatan.findMany({ select: { kegiatan_id: true } })
     * 
    **/
    findMany<T extends kegiatanFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kegiatanFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$kegiatanPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Kegiatan.
     * @param {kegiatanCreateArgs} args - Arguments to create a Kegiatan.
     * @example
     * // Create one Kegiatan
     * const Kegiatan = await prisma.kegiatan.create({
     *   data: {
     *     // ... data to create a Kegiatan
     *   }
     * })
     * 
    **/
    create<T extends kegiatanCreateArgs<ExtArgs>>(
      args: SelectSubset<T, kegiatanCreateArgs<ExtArgs>>
    ): Prisma__kegiatanClient<$Result.GetResult<Prisma.$kegiatanPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Kegiatans.
     *     @param {kegiatanCreateManyArgs} args - Arguments to create many Kegiatans.
     *     @example
     *     // Create many Kegiatans
     *     const kegiatan = await prisma.kegiatan.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends kegiatanCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kegiatanCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Kegiatan.
     * @param {kegiatanDeleteArgs} args - Arguments to delete one Kegiatan.
     * @example
     * // Delete one Kegiatan
     * const Kegiatan = await prisma.kegiatan.delete({
     *   where: {
     *     // ... filter to delete one Kegiatan
     *   }
     * })
     * 
    **/
    delete<T extends kegiatanDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, kegiatanDeleteArgs<ExtArgs>>
    ): Prisma__kegiatanClient<$Result.GetResult<Prisma.$kegiatanPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Kegiatan.
     * @param {kegiatanUpdateArgs} args - Arguments to update one Kegiatan.
     * @example
     * // Update one Kegiatan
     * const kegiatan = await prisma.kegiatan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends kegiatanUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, kegiatanUpdateArgs<ExtArgs>>
    ): Prisma__kegiatanClient<$Result.GetResult<Prisma.$kegiatanPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Kegiatans.
     * @param {kegiatanDeleteManyArgs} args - Arguments to filter Kegiatans to delete.
     * @example
     * // Delete a few Kegiatans
     * const { count } = await prisma.kegiatan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends kegiatanDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kegiatanDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kegiatans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kegiatanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kegiatans
     * const kegiatan = await prisma.kegiatan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends kegiatanUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, kegiatanUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Kegiatan.
     * @param {kegiatanUpsertArgs} args - Arguments to update or create a Kegiatan.
     * @example
     * // Update or create a Kegiatan
     * const kegiatan = await prisma.kegiatan.upsert({
     *   create: {
     *     // ... data to create a Kegiatan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kegiatan we want to update
     *   }
     * })
    **/
    upsert<T extends kegiatanUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, kegiatanUpsertArgs<ExtArgs>>
    ): Prisma__kegiatanClient<$Result.GetResult<Prisma.$kegiatanPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Kegiatans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kegiatanCountArgs} args - Arguments to filter Kegiatans to count.
     * @example
     * // Count the number of Kegiatans
     * const count = await prisma.kegiatan.count({
     *   where: {
     *     // ... the filter for the Kegiatans we want to count
     *   }
     * })
    **/
    count<T extends kegiatanCountArgs>(
      args?: Subset<T, kegiatanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], KegiatanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kegiatan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KegiatanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends KegiatanAggregateArgs>(args: Subset<T, KegiatanAggregateArgs>): Prisma.PrismaPromise<GetKegiatanAggregateType<T>>

    /**
     * Group by Kegiatan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kegiatanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends kegiatanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: kegiatanGroupByArgs['orderBy'] }
        : { orderBy?: kegiatanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, kegiatanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKegiatanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the kegiatan model
   */
  readonly fields: kegiatanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for kegiatan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__kegiatanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    sumberdana<T extends kegiatan$sumberdanaArgs<ExtArgs> = {}>(args?: Subset<T, kegiatan$sumberdanaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'findMany'> | Null>;

    spt<T extends kegiatan$sptArgs<ExtArgs> = {}>(args?: Subset<T, kegiatan$sptArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findMany'> | Null>;

    opd<T extends opdDefaultArgs<ExtArgs> = {}>(args?: Subset<T, opdDefaultArgs<ExtArgs>>): Prisma__opdClient<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the kegiatan model
   */ 
  interface kegiatanFieldRefs {
    readonly kegiatan_id: FieldRef<"kegiatan", 'Int'>
    readonly kegiatan_opd: FieldRef<"kegiatan", 'Int'>
    readonly kegiatan_kode: FieldRef<"kegiatan", 'String'>
    readonly kegiatan_program: FieldRef<"kegiatan", 'String'>
    readonly kegiatan_nama: FieldRef<"kegiatan", 'String'>
    readonly kegiatan_subkegiatan: FieldRef<"kegiatan", 'String'>
    readonly kegiatan_created: FieldRef<"kegiatan", 'DateTime'>
    readonly kegiatan_updated: FieldRef<"kegiatan", 'DateTime'>
    readonly kegiatan_deleted: FieldRef<"kegiatan", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * kegiatan findUnique
   */
  export type kegiatanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kegiatan
     */
    select?: kegiatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kegiatanInclude<ExtArgs> | null
    /**
     * Filter, which kegiatan to fetch.
     */
    where: kegiatanWhereUniqueInput
  }


  /**
   * kegiatan findUniqueOrThrow
   */
  export type kegiatanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kegiatan
     */
    select?: kegiatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kegiatanInclude<ExtArgs> | null
    /**
     * Filter, which kegiatan to fetch.
     */
    where: kegiatanWhereUniqueInput
  }


  /**
   * kegiatan findFirst
   */
  export type kegiatanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kegiatan
     */
    select?: kegiatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kegiatanInclude<ExtArgs> | null
    /**
     * Filter, which kegiatan to fetch.
     */
    where?: kegiatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kegiatans to fetch.
     */
    orderBy?: kegiatanOrderByWithRelationInput | kegiatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for kegiatans.
     */
    cursor?: kegiatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kegiatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kegiatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of kegiatans.
     */
    distinct?: KegiatanScalarFieldEnum | KegiatanScalarFieldEnum[]
  }


  /**
   * kegiatan findFirstOrThrow
   */
  export type kegiatanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kegiatan
     */
    select?: kegiatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kegiatanInclude<ExtArgs> | null
    /**
     * Filter, which kegiatan to fetch.
     */
    where?: kegiatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kegiatans to fetch.
     */
    orderBy?: kegiatanOrderByWithRelationInput | kegiatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for kegiatans.
     */
    cursor?: kegiatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kegiatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kegiatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of kegiatans.
     */
    distinct?: KegiatanScalarFieldEnum | KegiatanScalarFieldEnum[]
  }


  /**
   * kegiatan findMany
   */
  export type kegiatanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kegiatan
     */
    select?: kegiatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kegiatanInclude<ExtArgs> | null
    /**
     * Filter, which kegiatans to fetch.
     */
    where?: kegiatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kegiatans to fetch.
     */
    orderBy?: kegiatanOrderByWithRelationInput | kegiatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing kegiatans.
     */
    cursor?: kegiatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kegiatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kegiatans.
     */
    skip?: number
    distinct?: KegiatanScalarFieldEnum | KegiatanScalarFieldEnum[]
  }


  /**
   * kegiatan create
   */
  export type kegiatanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kegiatan
     */
    select?: kegiatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kegiatanInclude<ExtArgs> | null
    /**
     * The data needed to create a kegiatan.
     */
    data: XOR<kegiatanCreateInput, kegiatanUncheckedCreateInput>
  }


  /**
   * kegiatan createMany
   */
  export type kegiatanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many kegiatans.
     */
    data: kegiatanCreateManyInput | kegiatanCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * kegiatan update
   */
  export type kegiatanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kegiatan
     */
    select?: kegiatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kegiatanInclude<ExtArgs> | null
    /**
     * The data needed to update a kegiatan.
     */
    data: XOR<kegiatanUpdateInput, kegiatanUncheckedUpdateInput>
    /**
     * Choose, which kegiatan to update.
     */
    where: kegiatanWhereUniqueInput
  }


  /**
   * kegiatan updateMany
   */
  export type kegiatanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update kegiatans.
     */
    data: XOR<kegiatanUpdateManyMutationInput, kegiatanUncheckedUpdateManyInput>
    /**
     * Filter which kegiatans to update
     */
    where?: kegiatanWhereInput
  }


  /**
   * kegiatan upsert
   */
  export type kegiatanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kegiatan
     */
    select?: kegiatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kegiatanInclude<ExtArgs> | null
    /**
     * The filter to search for the kegiatan to update in case it exists.
     */
    where: kegiatanWhereUniqueInput
    /**
     * In case the kegiatan found by the `where` argument doesn't exist, create a new kegiatan with this data.
     */
    create: XOR<kegiatanCreateInput, kegiatanUncheckedCreateInput>
    /**
     * In case the kegiatan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<kegiatanUpdateInput, kegiatanUncheckedUpdateInput>
  }


  /**
   * kegiatan delete
   */
  export type kegiatanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kegiatan
     */
    select?: kegiatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kegiatanInclude<ExtArgs> | null
    /**
     * Filter which kegiatan to delete.
     */
    where: kegiatanWhereUniqueInput
  }


  /**
   * kegiatan deleteMany
   */
  export type kegiatanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which kegiatans to delete
     */
    where?: kegiatanWhereInput
  }


  /**
   * kegiatan.sumberdana
   */
  export type kegiatan$sumberdanaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
    where?: sumberdanaWhereInput
    orderBy?: sumberdanaOrderByWithRelationInput | sumberdanaOrderByWithRelationInput[]
    cursor?: sumberdanaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SumberdanaScalarFieldEnum | SumberdanaScalarFieldEnum[]
  }


  /**
   * kegiatan.spt
   */
  export type kegiatan$sptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    where?: sptWhereInput
    orderBy?: sptOrderByWithRelationInput | sptOrderByWithRelationInput[]
    cursor?: sptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SptScalarFieldEnum | SptScalarFieldEnum[]
  }


  /**
   * kegiatan without action
   */
  export type kegiatanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kegiatan
     */
    select?: kegiatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kegiatanInclude<ExtArgs> | null
  }



  /**
   * Model sumberdana
   */

  export type AggregateSumberdana = {
    _count: SumberdanaCountAggregateOutputType | null
    _avg: SumberdanaAvgAggregateOutputType | null
    _sum: SumberdanaSumAggregateOutputType | null
    _min: SumberdanaMinAggregateOutputType | null
    _max: SumberdanaMaxAggregateOutputType | null
  }

  export type SumberdanaAvgAggregateOutputType = {
    sd_id: number | null
    sd_opd: number | null
    sd_kegiatan: number | null
    sd_jumlah: number | null
    sd_pptk: number | null
    sd_pa: number | null
    sd_bendahara: number | null
  }

  export type SumberdanaSumAggregateOutputType = {
    sd_id: number | null
    sd_opd: number | null
    sd_kegiatan: number | null
    sd_jumlah: bigint | null
    sd_pptk: number | null
    sd_pa: number | null
    sd_bendahara: number | null
  }

  export type SumberdanaMinAggregateOutputType = {
    sd_id: number | null
    sd_tahun: string | null
    sd_opd: number | null
    sd_kode_rekening: string | null
    sd_nama: string | null
    sd_kegiatan: number | null
    sd_jumlah: bigint | null
    sd_pptk: number | null
    sd_pa: number | null
    sd_bendahara: number | null
    sd_active: boolean | null
    sd_app: string | null
    sd_created: Date | null
    sd_updated: Date | null
    sd_deleted: Date | null
  }

  export type SumberdanaMaxAggregateOutputType = {
    sd_id: number | null
    sd_tahun: string | null
    sd_opd: number | null
    sd_kode_rekening: string | null
    sd_nama: string | null
    sd_kegiatan: number | null
    sd_jumlah: bigint | null
    sd_pptk: number | null
    sd_pa: number | null
    sd_bendahara: number | null
    sd_active: boolean | null
    sd_app: string | null
    sd_created: Date | null
    sd_updated: Date | null
    sd_deleted: Date | null
  }

  export type SumberdanaCountAggregateOutputType = {
    sd_id: number
    sd_tahun: number
    sd_opd: number
    sd_kode_rekening: number
    sd_nama: number
    sd_kegiatan: number
    sd_jumlah: number
    sd_pptk: number
    sd_pa: number
    sd_bendahara: number
    sd_active: number
    sd_app: number
    sd_created: number
    sd_updated: number
    sd_deleted: number
    _all: number
  }


  export type SumberdanaAvgAggregateInputType = {
    sd_id?: true
    sd_opd?: true
    sd_kegiatan?: true
    sd_jumlah?: true
    sd_pptk?: true
    sd_pa?: true
    sd_bendahara?: true
  }

  export type SumberdanaSumAggregateInputType = {
    sd_id?: true
    sd_opd?: true
    sd_kegiatan?: true
    sd_jumlah?: true
    sd_pptk?: true
    sd_pa?: true
    sd_bendahara?: true
  }

  export type SumberdanaMinAggregateInputType = {
    sd_id?: true
    sd_tahun?: true
    sd_opd?: true
    sd_kode_rekening?: true
    sd_nama?: true
    sd_kegiatan?: true
    sd_jumlah?: true
    sd_pptk?: true
    sd_pa?: true
    sd_bendahara?: true
    sd_active?: true
    sd_app?: true
    sd_created?: true
    sd_updated?: true
    sd_deleted?: true
  }

  export type SumberdanaMaxAggregateInputType = {
    sd_id?: true
    sd_tahun?: true
    sd_opd?: true
    sd_kode_rekening?: true
    sd_nama?: true
    sd_kegiatan?: true
    sd_jumlah?: true
    sd_pptk?: true
    sd_pa?: true
    sd_bendahara?: true
    sd_active?: true
    sd_app?: true
    sd_created?: true
    sd_updated?: true
    sd_deleted?: true
  }

  export type SumberdanaCountAggregateInputType = {
    sd_id?: true
    sd_tahun?: true
    sd_opd?: true
    sd_kode_rekening?: true
    sd_nama?: true
    sd_kegiatan?: true
    sd_jumlah?: true
    sd_pptk?: true
    sd_pa?: true
    sd_bendahara?: true
    sd_active?: true
    sd_app?: true
    sd_created?: true
    sd_updated?: true
    sd_deleted?: true
    _all?: true
  }

  export type SumberdanaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sumberdana to aggregate.
     */
    where?: sumberdanaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sumberdanas to fetch.
     */
    orderBy?: sumberdanaOrderByWithRelationInput | sumberdanaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sumberdanaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sumberdanas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sumberdanas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sumberdanas
    **/
    _count?: true | SumberdanaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SumberdanaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SumberdanaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SumberdanaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SumberdanaMaxAggregateInputType
  }

  export type GetSumberdanaAggregateType<T extends SumberdanaAggregateArgs> = {
        [P in keyof T & keyof AggregateSumberdana]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSumberdana[P]>
      : GetScalarType<T[P], AggregateSumberdana[P]>
  }




  export type sumberdanaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sumberdanaWhereInput
    orderBy?: sumberdanaOrderByWithAggregationInput | sumberdanaOrderByWithAggregationInput[]
    by: SumberdanaScalarFieldEnum[] | SumberdanaScalarFieldEnum
    having?: sumberdanaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SumberdanaCountAggregateInputType | true
    _avg?: SumberdanaAvgAggregateInputType
    _sum?: SumberdanaSumAggregateInputType
    _min?: SumberdanaMinAggregateInputType
    _max?: SumberdanaMaxAggregateInputType
  }

  export type SumberdanaGroupByOutputType = {
    sd_id: number
    sd_tahun: string
    sd_opd: number
    sd_kode_rekening: string
    sd_nama: string
    sd_kegiatan: number
    sd_jumlah: bigint
    sd_pptk: number
    sd_pa: number
    sd_bendahara: number
    sd_active: boolean
    sd_app: string
    sd_created: Date
    sd_updated: Date
    sd_deleted: Date | null
    _count: SumberdanaCountAggregateOutputType | null
    _avg: SumberdanaAvgAggregateOutputType | null
    _sum: SumberdanaSumAggregateOutputType | null
    _min: SumberdanaMinAggregateOutputType | null
    _max: SumberdanaMaxAggregateOutputType | null
  }

  type GetSumberdanaGroupByPayload<T extends sumberdanaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SumberdanaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SumberdanaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SumberdanaGroupByOutputType[P]>
            : GetScalarType<T[P], SumberdanaGroupByOutputType[P]>
        }
      >
    >


  export type sumberdanaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sd_id?: boolean
    sd_tahun?: boolean
    sd_opd?: boolean
    sd_kode_rekening?: boolean
    sd_nama?: boolean
    sd_kegiatan?: boolean
    sd_jumlah?: boolean
    sd_pptk?: boolean
    sd_pa?: boolean
    sd_bendahara?: boolean
    sd_active?: boolean
    sd_app?: boolean
    sd_created?: boolean
    sd_updated?: boolean
    sd_deleted?: boolean
    opd?: boolean | opdDefaultArgs<ExtArgs>
    kegiatan?: boolean | kegiatanDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    spt?: boolean | sumberdana$sptArgs<ExtArgs>
    bendahara?: boolean | usersDefaultArgs<ExtArgs>
    pengguna_anggaran?: boolean | usersDefaultArgs<ExtArgs>
    ttd_gajian?: boolean | sumberdana$ttd_gajianArgs<ExtArgs>
    _count?: boolean | SumberdanaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sumberdana"]>

  export type sumberdanaSelectScalar = {
    sd_id?: boolean
    sd_tahun?: boolean
    sd_opd?: boolean
    sd_kode_rekening?: boolean
    sd_nama?: boolean
    sd_kegiatan?: boolean
    sd_jumlah?: boolean
    sd_pptk?: boolean
    sd_pa?: boolean
    sd_bendahara?: boolean
    sd_active?: boolean
    sd_app?: boolean
    sd_created?: boolean
    sd_updated?: boolean
    sd_deleted?: boolean
  }

  export type sumberdanaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    opd?: boolean | opdDefaultArgs<ExtArgs>
    kegiatan?: boolean | kegiatanDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    spt?: boolean | sumberdana$sptArgs<ExtArgs>
    bendahara?: boolean | usersDefaultArgs<ExtArgs>
    pengguna_anggaran?: boolean | usersDefaultArgs<ExtArgs>
    ttd_gajian?: boolean | sumberdana$ttd_gajianArgs<ExtArgs>
    _count?: boolean | SumberdanaCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $sumberdanaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sumberdana"
    objects: {
      opd: Prisma.$opdPayload<ExtArgs>
      kegiatan: Prisma.$kegiatanPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
      spt: Prisma.$sptPayload<ExtArgs>[]
      bendahara: Prisma.$usersPayload<ExtArgs>
      pengguna_anggaran: Prisma.$usersPayload<ExtArgs>
      ttd_gajian: Prisma.$ttd_gajianPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      sd_id: number
      sd_tahun: string
      sd_opd: number
      sd_kode_rekening: string
      sd_nama: string
      sd_kegiatan: number
      sd_jumlah: bigint
      sd_pptk: number
      sd_pa: number
      sd_bendahara: number
      sd_active: boolean
      sd_app: string
      sd_created: Date
      sd_updated: Date
      sd_deleted: Date | null
    }, ExtArgs["result"]["sumberdana"]>
    composites: {}
  }


  type sumberdanaGetPayload<S extends boolean | null | undefined | sumberdanaDefaultArgs> = $Result.GetResult<Prisma.$sumberdanaPayload, S>

  type sumberdanaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sumberdanaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SumberdanaCountAggregateInputType | true
    }

  export interface sumberdanaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sumberdana'], meta: { name: 'sumberdana' } }
    /**
     * Find zero or one Sumberdana that matches the filter.
     * @param {sumberdanaFindUniqueArgs} args - Arguments to find a Sumberdana
     * @example
     * // Get one Sumberdana
     * const sumberdana = await prisma.sumberdana.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sumberdanaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, sumberdanaFindUniqueArgs<ExtArgs>>
    ): Prisma__sumberdanaClient<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Sumberdana that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {sumberdanaFindUniqueOrThrowArgs} args - Arguments to find a Sumberdana
     * @example
     * // Get one Sumberdana
     * const sumberdana = await prisma.sumberdana.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sumberdanaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, sumberdanaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__sumberdanaClient<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Sumberdana that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sumberdanaFindFirstArgs} args - Arguments to find a Sumberdana
     * @example
     * // Get one Sumberdana
     * const sumberdana = await prisma.sumberdana.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sumberdanaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, sumberdanaFindFirstArgs<ExtArgs>>
    ): Prisma__sumberdanaClient<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Sumberdana that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sumberdanaFindFirstOrThrowArgs} args - Arguments to find a Sumberdana
     * @example
     * // Get one Sumberdana
     * const sumberdana = await prisma.sumberdana.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sumberdanaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, sumberdanaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__sumberdanaClient<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Sumberdanas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sumberdanaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sumberdanas
     * const sumberdanas = await prisma.sumberdana.findMany()
     * 
     * // Get first 10 Sumberdanas
     * const sumberdanas = await prisma.sumberdana.findMany({ take: 10 })
     * 
     * // Only select the `sd_id`
     * const sumberdanaWithSd_idOnly = await prisma.sumberdana.findMany({ select: { sd_id: true } })
     * 
    **/
    findMany<T extends sumberdanaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sumberdanaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Sumberdana.
     * @param {sumberdanaCreateArgs} args - Arguments to create a Sumberdana.
     * @example
     * // Create one Sumberdana
     * const Sumberdana = await prisma.sumberdana.create({
     *   data: {
     *     // ... data to create a Sumberdana
     *   }
     * })
     * 
    **/
    create<T extends sumberdanaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, sumberdanaCreateArgs<ExtArgs>>
    ): Prisma__sumberdanaClient<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Sumberdanas.
     *     @param {sumberdanaCreateManyArgs} args - Arguments to create many Sumberdanas.
     *     @example
     *     // Create many Sumberdanas
     *     const sumberdana = await prisma.sumberdana.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sumberdanaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sumberdanaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sumberdana.
     * @param {sumberdanaDeleteArgs} args - Arguments to delete one Sumberdana.
     * @example
     * // Delete one Sumberdana
     * const Sumberdana = await prisma.sumberdana.delete({
     *   where: {
     *     // ... filter to delete one Sumberdana
     *   }
     * })
     * 
    **/
    delete<T extends sumberdanaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, sumberdanaDeleteArgs<ExtArgs>>
    ): Prisma__sumberdanaClient<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Sumberdana.
     * @param {sumberdanaUpdateArgs} args - Arguments to update one Sumberdana.
     * @example
     * // Update one Sumberdana
     * const sumberdana = await prisma.sumberdana.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sumberdanaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, sumberdanaUpdateArgs<ExtArgs>>
    ): Prisma__sumberdanaClient<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Sumberdanas.
     * @param {sumberdanaDeleteManyArgs} args - Arguments to filter Sumberdanas to delete.
     * @example
     * // Delete a few Sumberdanas
     * const { count } = await prisma.sumberdana.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sumberdanaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sumberdanaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sumberdanas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sumberdanaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sumberdanas
     * const sumberdana = await prisma.sumberdana.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sumberdanaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, sumberdanaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sumberdana.
     * @param {sumberdanaUpsertArgs} args - Arguments to update or create a Sumberdana.
     * @example
     * // Update or create a Sumberdana
     * const sumberdana = await prisma.sumberdana.upsert({
     *   create: {
     *     // ... data to create a Sumberdana
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sumberdana we want to update
     *   }
     * })
    **/
    upsert<T extends sumberdanaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, sumberdanaUpsertArgs<ExtArgs>>
    ): Prisma__sumberdanaClient<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Sumberdanas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sumberdanaCountArgs} args - Arguments to filter Sumberdanas to count.
     * @example
     * // Count the number of Sumberdanas
     * const count = await prisma.sumberdana.count({
     *   where: {
     *     // ... the filter for the Sumberdanas we want to count
     *   }
     * })
    **/
    count<T extends sumberdanaCountArgs>(
      args?: Subset<T, sumberdanaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SumberdanaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sumberdana.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SumberdanaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SumberdanaAggregateArgs>(args: Subset<T, SumberdanaAggregateArgs>): Prisma.PrismaPromise<GetSumberdanaAggregateType<T>>

    /**
     * Group by Sumberdana.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sumberdanaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sumberdanaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sumberdanaGroupByArgs['orderBy'] }
        : { orderBy?: sumberdanaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sumberdanaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSumberdanaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sumberdana model
   */
  readonly fields: sumberdanaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sumberdana.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sumberdanaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    opd<T extends opdDefaultArgs<ExtArgs> = {}>(args?: Subset<T, opdDefaultArgs<ExtArgs>>): Prisma__opdClient<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    kegiatan<T extends kegiatanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, kegiatanDefaultArgs<ExtArgs>>): Prisma__kegiatanClient<$Result.GetResult<Prisma.$kegiatanPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    spt<T extends sumberdana$sptArgs<ExtArgs> = {}>(args?: Subset<T, sumberdana$sptArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findMany'> | Null>;

    bendahara<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    pengguna_anggaran<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    ttd_gajian<T extends sumberdana$ttd_gajianArgs<ExtArgs> = {}>(args?: Subset<T, sumberdana$ttd_gajianArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ttd_gajianPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the sumberdana model
   */ 
  interface sumberdanaFieldRefs {
    readonly sd_id: FieldRef<"sumberdana", 'Int'>
    readonly sd_tahun: FieldRef<"sumberdana", 'String'>
    readonly sd_opd: FieldRef<"sumberdana", 'Int'>
    readonly sd_kode_rekening: FieldRef<"sumberdana", 'String'>
    readonly sd_nama: FieldRef<"sumberdana", 'String'>
    readonly sd_kegiatan: FieldRef<"sumberdana", 'Int'>
    readonly sd_jumlah: FieldRef<"sumberdana", 'BigInt'>
    readonly sd_pptk: FieldRef<"sumberdana", 'Int'>
    readonly sd_pa: FieldRef<"sumberdana", 'Int'>
    readonly sd_bendahara: FieldRef<"sumberdana", 'Int'>
    readonly sd_active: FieldRef<"sumberdana", 'Boolean'>
    readonly sd_app: FieldRef<"sumberdana", 'String'>
    readonly sd_created: FieldRef<"sumberdana", 'DateTime'>
    readonly sd_updated: FieldRef<"sumberdana", 'DateTime'>
    readonly sd_deleted: FieldRef<"sumberdana", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * sumberdana findUnique
   */
  export type sumberdanaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
    /**
     * Filter, which sumberdana to fetch.
     */
    where: sumberdanaWhereUniqueInput
  }


  /**
   * sumberdana findUniqueOrThrow
   */
  export type sumberdanaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
    /**
     * Filter, which sumberdana to fetch.
     */
    where: sumberdanaWhereUniqueInput
  }


  /**
   * sumberdana findFirst
   */
  export type sumberdanaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
    /**
     * Filter, which sumberdana to fetch.
     */
    where?: sumberdanaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sumberdanas to fetch.
     */
    orderBy?: sumberdanaOrderByWithRelationInput | sumberdanaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sumberdanas.
     */
    cursor?: sumberdanaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sumberdanas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sumberdanas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sumberdanas.
     */
    distinct?: SumberdanaScalarFieldEnum | SumberdanaScalarFieldEnum[]
  }


  /**
   * sumberdana findFirstOrThrow
   */
  export type sumberdanaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
    /**
     * Filter, which sumberdana to fetch.
     */
    where?: sumberdanaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sumberdanas to fetch.
     */
    orderBy?: sumberdanaOrderByWithRelationInput | sumberdanaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sumberdanas.
     */
    cursor?: sumberdanaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sumberdanas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sumberdanas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sumberdanas.
     */
    distinct?: SumberdanaScalarFieldEnum | SumberdanaScalarFieldEnum[]
  }


  /**
   * sumberdana findMany
   */
  export type sumberdanaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
    /**
     * Filter, which sumberdanas to fetch.
     */
    where?: sumberdanaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sumberdanas to fetch.
     */
    orderBy?: sumberdanaOrderByWithRelationInput | sumberdanaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sumberdanas.
     */
    cursor?: sumberdanaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sumberdanas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sumberdanas.
     */
    skip?: number
    distinct?: SumberdanaScalarFieldEnum | SumberdanaScalarFieldEnum[]
  }


  /**
   * sumberdana create
   */
  export type sumberdanaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
    /**
     * The data needed to create a sumberdana.
     */
    data: XOR<sumberdanaCreateInput, sumberdanaUncheckedCreateInput>
  }


  /**
   * sumberdana createMany
   */
  export type sumberdanaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sumberdanas.
     */
    data: sumberdanaCreateManyInput | sumberdanaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * sumberdana update
   */
  export type sumberdanaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
    /**
     * The data needed to update a sumberdana.
     */
    data: XOR<sumberdanaUpdateInput, sumberdanaUncheckedUpdateInput>
    /**
     * Choose, which sumberdana to update.
     */
    where: sumberdanaWhereUniqueInput
  }


  /**
   * sumberdana updateMany
   */
  export type sumberdanaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sumberdanas.
     */
    data: XOR<sumberdanaUpdateManyMutationInput, sumberdanaUncheckedUpdateManyInput>
    /**
     * Filter which sumberdanas to update
     */
    where?: sumberdanaWhereInput
  }


  /**
   * sumberdana upsert
   */
  export type sumberdanaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
    /**
     * The filter to search for the sumberdana to update in case it exists.
     */
    where: sumberdanaWhereUniqueInput
    /**
     * In case the sumberdana found by the `where` argument doesn't exist, create a new sumberdana with this data.
     */
    create: XOR<sumberdanaCreateInput, sumberdanaUncheckedCreateInput>
    /**
     * In case the sumberdana was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sumberdanaUpdateInput, sumberdanaUncheckedUpdateInput>
  }


  /**
   * sumberdana delete
   */
  export type sumberdanaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
    /**
     * Filter which sumberdana to delete.
     */
    where: sumberdanaWhereUniqueInput
  }


  /**
   * sumberdana deleteMany
   */
  export type sumberdanaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sumberdanas to delete
     */
    where?: sumberdanaWhereInput
  }


  /**
   * sumberdana.spt
   */
  export type sumberdana$sptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    where?: sptWhereInput
    orderBy?: sptOrderByWithRelationInput | sptOrderByWithRelationInput[]
    cursor?: sptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SptScalarFieldEnum | SptScalarFieldEnum[]
  }


  /**
   * sumberdana.ttd_gajian
   */
  export type sumberdana$ttd_gajianArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ttd_gajian
     */
    select?: ttd_gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ttd_gajianInclude<ExtArgs> | null
    where?: ttd_gajianWhereInput
    orderBy?: ttd_gajianOrderByWithRelationInput | ttd_gajianOrderByWithRelationInput[]
    cursor?: ttd_gajianWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ttd_gajianScalarFieldEnum | Ttd_gajianScalarFieldEnum[]
  }


  /**
   * sumberdana without action
   */
  export type sumberdanaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
  }



  /**
   * Model opd
   */

  export type AggregateOpd = {
    _count: OpdCountAggregateOutputType | null
    _avg: OpdAvgAggregateOutputType | null
    _sum: OpdSumAggregateOutputType | null
    _min: OpdMinAggregateOutputType | null
    _max: OpdMaxAggregateOutputType | null
  }

  export type OpdAvgAggregateOutputType = {
    opd_id: number | null
  }

  export type OpdSumAggregateOutputType = {
    opd_id: number | null
  }

  export type OpdMinAggregateOutputType = {
    opd_id: number | null
    opd_nama: string | null
    opd_alamat: string | null
    opd_email: string | null
    opd_telp: string | null
    opd_kota: string | null
    opd_created: Date | null
    opd_updated: Date | null
    opd_deleted: Date | null
  }

  export type OpdMaxAggregateOutputType = {
    opd_id: number | null
    opd_nama: string | null
    opd_alamat: string | null
    opd_email: string | null
    opd_telp: string | null
    opd_kota: string | null
    opd_created: Date | null
    opd_updated: Date | null
    opd_deleted: Date | null
  }

  export type OpdCountAggregateOutputType = {
    opd_id: number
    opd_nama: number
    opd_alamat: number
    opd_email: number
    opd_telp: number
    opd_kota: number
    opd_created: number
    opd_updated: number
    opd_deleted: number
    _all: number
  }


  export type OpdAvgAggregateInputType = {
    opd_id?: true
  }

  export type OpdSumAggregateInputType = {
    opd_id?: true
  }

  export type OpdMinAggregateInputType = {
    opd_id?: true
    opd_nama?: true
    opd_alamat?: true
    opd_email?: true
    opd_telp?: true
    opd_kota?: true
    opd_created?: true
    opd_updated?: true
    opd_deleted?: true
  }

  export type OpdMaxAggregateInputType = {
    opd_id?: true
    opd_nama?: true
    opd_alamat?: true
    opd_email?: true
    opd_telp?: true
    opd_kota?: true
    opd_created?: true
    opd_updated?: true
    opd_deleted?: true
  }

  export type OpdCountAggregateInputType = {
    opd_id?: true
    opd_nama?: true
    opd_alamat?: true
    opd_email?: true
    opd_telp?: true
    opd_kota?: true
    opd_created?: true
    opd_updated?: true
    opd_deleted?: true
    _all?: true
  }

  export type OpdAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which opd to aggregate.
     */
    where?: opdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of opds to fetch.
     */
    orderBy?: opdOrderByWithRelationInput | opdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: opdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` opds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` opds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned opds
    **/
    _count?: true | OpdCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OpdAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OpdSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OpdMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OpdMaxAggregateInputType
  }

  export type GetOpdAggregateType<T extends OpdAggregateArgs> = {
        [P in keyof T & keyof AggregateOpd]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOpd[P]>
      : GetScalarType<T[P], AggregateOpd[P]>
  }




  export type opdGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: opdWhereInput
    orderBy?: opdOrderByWithAggregationInput | opdOrderByWithAggregationInput[]
    by: OpdScalarFieldEnum[] | OpdScalarFieldEnum
    having?: opdScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OpdCountAggregateInputType | true
    _avg?: OpdAvgAggregateInputType
    _sum?: OpdSumAggregateInputType
    _min?: OpdMinAggregateInputType
    _max?: OpdMaxAggregateInputType
  }

  export type OpdGroupByOutputType = {
    opd_id: number
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created: Date
    opd_updated: Date
    opd_deleted: Date | null
    _count: OpdCountAggregateOutputType | null
    _avg: OpdAvgAggregateOutputType | null
    _sum: OpdSumAggregateOutputType | null
    _min: OpdMinAggregateOutputType | null
    _max: OpdMaxAggregateOutputType | null
  }

  type GetOpdGroupByPayload<T extends opdGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OpdGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OpdGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OpdGroupByOutputType[P]>
            : GetScalarType<T[P], OpdGroupByOutputType[P]>
        }
      >
    >


  export type opdSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    opd_id?: boolean
    opd_nama?: boolean
    opd_alamat?: boolean
    opd_email?: boolean
    opd_telp?: boolean
    opd_kota?: boolean
    opd_created?: boolean
    opd_updated?: boolean
    opd_deleted?: boolean
    users?: boolean | opd$usersArgs<ExtArgs>
    spt?: boolean | opd$sptArgs<ExtArgs>
    setting?: boolean | opd$settingArgs<ExtArgs>
    sumberdana?: boolean | opd$sumberdanaArgs<ExtArgs>
    standard?: boolean | opd$standardArgs<ExtArgs>
    kegiatan?: boolean | opd$kegiatanArgs<ExtArgs>
    _count?: boolean | OpdCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["opd"]>

  export type opdSelectScalar = {
    opd_id?: boolean
    opd_nama?: boolean
    opd_alamat?: boolean
    opd_email?: boolean
    opd_telp?: boolean
    opd_kota?: boolean
    opd_created?: boolean
    opd_updated?: boolean
    opd_deleted?: boolean
  }

  export type opdInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | opd$usersArgs<ExtArgs>
    spt?: boolean | opd$sptArgs<ExtArgs>
    setting?: boolean | opd$settingArgs<ExtArgs>
    sumberdana?: boolean | opd$sumberdanaArgs<ExtArgs>
    standard?: boolean | opd$standardArgs<ExtArgs>
    kegiatan?: boolean | opd$kegiatanArgs<ExtArgs>
    _count?: boolean | OpdCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $opdPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "opd"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>[]
      spt: Prisma.$sptPayload<ExtArgs>[]
      setting: Prisma.$settingPayload<ExtArgs>[]
      sumberdana: Prisma.$sumberdanaPayload<ExtArgs>[]
      standard: Prisma.$standardPayload<ExtArgs>[]
      kegiatan: Prisma.$kegiatanPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      opd_id: number
      opd_nama: string
      opd_alamat: string
      opd_email: string
      opd_telp: string
      opd_kota: string
      opd_created: Date
      opd_updated: Date
      opd_deleted: Date | null
    }, ExtArgs["result"]["opd"]>
    composites: {}
  }


  type opdGetPayload<S extends boolean | null | undefined | opdDefaultArgs> = $Result.GetResult<Prisma.$opdPayload, S>

  type opdCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<opdFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OpdCountAggregateInputType | true
    }

  export interface opdDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['opd'], meta: { name: 'opd' } }
    /**
     * Find zero or one Opd that matches the filter.
     * @param {opdFindUniqueArgs} args - Arguments to find a Opd
     * @example
     * // Get one Opd
     * const opd = await prisma.opd.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends opdFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, opdFindUniqueArgs<ExtArgs>>
    ): Prisma__opdClient<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Opd that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {opdFindUniqueOrThrowArgs} args - Arguments to find a Opd
     * @example
     * // Get one Opd
     * const opd = await prisma.opd.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends opdFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, opdFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__opdClient<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Opd that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opdFindFirstArgs} args - Arguments to find a Opd
     * @example
     * // Get one Opd
     * const opd = await prisma.opd.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends opdFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, opdFindFirstArgs<ExtArgs>>
    ): Prisma__opdClient<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Opd that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opdFindFirstOrThrowArgs} args - Arguments to find a Opd
     * @example
     * // Get one Opd
     * const opd = await prisma.opd.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends opdFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, opdFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__opdClient<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Opds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opdFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Opds
     * const opds = await prisma.opd.findMany()
     * 
     * // Get first 10 Opds
     * const opds = await prisma.opd.findMany({ take: 10 })
     * 
     * // Only select the `opd_id`
     * const opdWithOpd_idOnly = await prisma.opd.findMany({ select: { opd_id: true } })
     * 
    **/
    findMany<T extends opdFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, opdFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Opd.
     * @param {opdCreateArgs} args - Arguments to create a Opd.
     * @example
     * // Create one Opd
     * const Opd = await prisma.opd.create({
     *   data: {
     *     // ... data to create a Opd
     *   }
     * })
     * 
    **/
    create<T extends opdCreateArgs<ExtArgs>>(
      args: SelectSubset<T, opdCreateArgs<ExtArgs>>
    ): Prisma__opdClient<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Opds.
     *     @param {opdCreateManyArgs} args - Arguments to create many Opds.
     *     @example
     *     // Create many Opds
     *     const opd = await prisma.opd.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends opdCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, opdCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Opd.
     * @param {opdDeleteArgs} args - Arguments to delete one Opd.
     * @example
     * // Delete one Opd
     * const Opd = await prisma.opd.delete({
     *   where: {
     *     // ... filter to delete one Opd
     *   }
     * })
     * 
    **/
    delete<T extends opdDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, opdDeleteArgs<ExtArgs>>
    ): Prisma__opdClient<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Opd.
     * @param {opdUpdateArgs} args - Arguments to update one Opd.
     * @example
     * // Update one Opd
     * const opd = await prisma.opd.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends opdUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, opdUpdateArgs<ExtArgs>>
    ): Prisma__opdClient<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Opds.
     * @param {opdDeleteManyArgs} args - Arguments to filter Opds to delete.
     * @example
     * // Delete a few Opds
     * const { count } = await prisma.opd.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends opdDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, opdDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Opds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opdUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Opds
     * const opd = await prisma.opd.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends opdUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, opdUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Opd.
     * @param {opdUpsertArgs} args - Arguments to update or create a Opd.
     * @example
     * // Update or create a Opd
     * const opd = await prisma.opd.upsert({
     *   create: {
     *     // ... data to create a Opd
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Opd we want to update
     *   }
     * })
    **/
    upsert<T extends opdUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, opdUpsertArgs<ExtArgs>>
    ): Prisma__opdClient<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Opds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opdCountArgs} args - Arguments to filter Opds to count.
     * @example
     * // Count the number of Opds
     * const count = await prisma.opd.count({
     *   where: {
     *     // ... the filter for the Opds we want to count
     *   }
     * })
    **/
    count<T extends opdCountArgs>(
      args?: Subset<T, opdCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OpdCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Opd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpdAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OpdAggregateArgs>(args: Subset<T, OpdAggregateArgs>): Prisma.PrismaPromise<GetOpdAggregateType<T>>

    /**
     * Group by Opd.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opdGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends opdGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: opdGroupByArgs['orderBy'] }
        : { orderBy?: opdGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, opdGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOpdGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the opd model
   */
  readonly fields: opdFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for opd.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__opdClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    users<T extends opd$usersArgs<ExtArgs> = {}>(args?: Subset<T, opd$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findMany'> | Null>;

    spt<T extends opd$sptArgs<ExtArgs> = {}>(args?: Subset<T, opd$sptArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findMany'> | Null>;

    setting<T extends opd$settingArgs<ExtArgs> = {}>(args?: Subset<T, opd$settingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$settingPayload<ExtArgs>, T, 'findMany'> | Null>;

    sumberdana<T extends opd$sumberdanaArgs<ExtArgs> = {}>(args?: Subset<T, opd$sumberdanaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'findMany'> | Null>;

    standard<T extends opd$standardArgs<ExtArgs> = {}>(args?: Subset<T, opd$standardArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$standardPayload<ExtArgs>, T, 'findMany'> | Null>;

    kegiatan<T extends opd$kegiatanArgs<ExtArgs> = {}>(args?: Subset<T, opd$kegiatanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$kegiatanPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the opd model
   */ 
  interface opdFieldRefs {
    readonly opd_id: FieldRef<"opd", 'Int'>
    readonly opd_nama: FieldRef<"opd", 'String'>
    readonly opd_alamat: FieldRef<"opd", 'String'>
    readonly opd_email: FieldRef<"opd", 'String'>
    readonly opd_telp: FieldRef<"opd", 'String'>
    readonly opd_kota: FieldRef<"opd", 'String'>
    readonly opd_created: FieldRef<"opd", 'DateTime'>
    readonly opd_updated: FieldRef<"opd", 'DateTime'>
    readonly opd_deleted: FieldRef<"opd", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * opd findUnique
   */
  export type opdFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opd
     */
    select?: opdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opdInclude<ExtArgs> | null
    /**
     * Filter, which opd to fetch.
     */
    where: opdWhereUniqueInput
  }


  /**
   * opd findUniqueOrThrow
   */
  export type opdFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opd
     */
    select?: opdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opdInclude<ExtArgs> | null
    /**
     * Filter, which opd to fetch.
     */
    where: opdWhereUniqueInput
  }


  /**
   * opd findFirst
   */
  export type opdFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opd
     */
    select?: opdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opdInclude<ExtArgs> | null
    /**
     * Filter, which opd to fetch.
     */
    where?: opdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of opds to fetch.
     */
    orderBy?: opdOrderByWithRelationInput | opdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for opds.
     */
    cursor?: opdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` opds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` opds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of opds.
     */
    distinct?: OpdScalarFieldEnum | OpdScalarFieldEnum[]
  }


  /**
   * opd findFirstOrThrow
   */
  export type opdFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opd
     */
    select?: opdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opdInclude<ExtArgs> | null
    /**
     * Filter, which opd to fetch.
     */
    where?: opdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of opds to fetch.
     */
    orderBy?: opdOrderByWithRelationInput | opdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for opds.
     */
    cursor?: opdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` opds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` opds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of opds.
     */
    distinct?: OpdScalarFieldEnum | OpdScalarFieldEnum[]
  }


  /**
   * opd findMany
   */
  export type opdFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opd
     */
    select?: opdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opdInclude<ExtArgs> | null
    /**
     * Filter, which opds to fetch.
     */
    where?: opdWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of opds to fetch.
     */
    orderBy?: opdOrderByWithRelationInput | opdOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing opds.
     */
    cursor?: opdWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` opds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` opds.
     */
    skip?: number
    distinct?: OpdScalarFieldEnum | OpdScalarFieldEnum[]
  }


  /**
   * opd create
   */
  export type opdCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opd
     */
    select?: opdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opdInclude<ExtArgs> | null
    /**
     * The data needed to create a opd.
     */
    data: XOR<opdCreateInput, opdUncheckedCreateInput>
  }


  /**
   * opd createMany
   */
  export type opdCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many opds.
     */
    data: opdCreateManyInput | opdCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * opd update
   */
  export type opdUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opd
     */
    select?: opdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opdInclude<ExtArgs> | null
    /**
     * The data needed to update a opd.
     */
    data: XOR<opdUpdateInput, opdUncheckedUpdateInput>
    /**
     * Choose, which opd to update.
     */
    where: opdWhereUniqueInput
  }


  /**
   * opd updateMany
   */
  export type opdUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update opds.
     */
    data: XOR<opdUpdateManyMutationInput, opdUncheckedUpdateManyInput>
    /**
     * Filter which opds to update
     */
    where?: opdWhereInput
  }


  /**
   * opd upsert
   */
  export type opdUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opd
     */
    select?: opdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opdInclude<ExtArgs> | null
    /**
     * The filter to search for the opd to update in case it exists.
     */
    where: opdWhereUniqueInput
    /**
     * In case the opd found by the `where` argument doesn't exist, create a new opd with this data.
     */
    create: XOR<opdCreateInput, opdUncheckedCreateInput>
    /**
     * In case the opd was found with the provided `where` argument, update it with this data.
     */
    update: XOR<opdUpdateInput, opdUncheckedUpdateInput>
  }


  /**
   * opd delete
   */
  export type opdDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opd
     */
    select?: opdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opdInclude<ExtArgs> | null
    /**
     * Filter which opd to delete.
     */
    where: opdWhereUniqueInput
  }


  /**
   * opd deleteMany
   */
  export type opdDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which opds to delete
     */
    where?: opdWhereInput
  }


  /**
   * opd.users
   */
  export type opd$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    cursor?: usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * opd.spt
   */
  export type opd$sptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    where?: sptWhereInput
    orderBy?: sptOrderByWithRelationInput | sptOrderByWithRelationInput[]
    cursor?: sptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SptScalarFieldEnum | SptScalarFieldEnum[]
  }


  /**
   * opd.setting
   */
  export type opd$settingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the setting
     */
    select?: settingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: settingInclude<ExtArgs> | null
    where?: settingWhereInput
    orderBy?: settingOrderByWithRelationInput | settingOrderByWithRelationInput[]
    cursor?: settingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }


  /**
   * opd.sumberdana
   */
  export type opd$sumberdanaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sumberdana
     */
    select?: sumberdanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sumberdanaInclude<ExtArgs> | null
    where?: sumberdanaWhereInput
    orderBy?: sumberdanaOrderByWithRelationInput | sumberdanaOrderByWithRelationInput[]
    cursor?: sumberdanaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SumberdanaScalarFieldEnum | SumberdanaScalarFieldEnum[]
  }


  /**
   * opd.standard
   */
  export type opd$standardArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the standard
     */
    select?: standardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: standardInclude<ExtArgs> | null
    where?: standardWhereInput
    orderBy?: standardOrderByWithRelationInput | standardOrderByWithRelationInput[]
    cursor?: standardWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StandardScalarFieldEnum | StandardScalarFieldEnum[]
  }


  /**
   * opd.kegiatan
   */
  export type opd$kegiatanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kegiatan
     */
    select?: kegiatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kegiatanInclude<ExtArgs> | null
    where?: kegiatanWhereInput
    orderBy?: kegiatanOrderByWithRelationInput | kegiatanOrderByWithRelationInput[]
    cursor?: kegiatanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KegiatanScalarFieldEnum | KegiatanScalarFieldEnum[]
  }


  /**
   * opd without action
   */
  export type opdDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opd
     */
    select?: opdSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: opdInclude<ExtArgs> | null
  }



  /**
   * Model jabatan
   */

  export type AggregateJabatan = {
    _count: JabatanCountAggregateOutputType | null
    _avg: JabatanAvgAggregateOutputType | null
    _sum: JabatanSumAggregateOutputType | null
    _min: JabatanMinAggregateOutputType | null
    _max: JabatanMaxAggregateOutputType | null
  }

  export type JabatanAvgAggregateOutputType = {
    jabatan_id: number | null
    jabatan_opd: number | null
    jabatan_kop_surat: number | null
    jabatan_kelas_biaya: number | null
    jabatan_kwitansi: number | null
    jabatan_kelompok: number | null
  }

  export type JabatanSumAggregateOutputType = {
    jabatan_id: number | null
    jabatan_opd: number | null
    jabatan_kop_surat: number | null
    jabatan_kelas_biaya: number | null
    jabatan_kwitansi: number | null
    jabatan_kelompok: number | null
  }

  export type JabatanMinAggregateOutputType = {
    jabatan_id: number | null
    jabatan_opd: number | null
    jabatan_nama: string | null
    jabatan_kop_surat: number | null
    jabatan_kelas_biaya: number | null
    jabatan_kwitansi: number | null
    jabatan_kelompok: number | null
    jabatan_created: Date | null
    jabatan_updated: Date | null
    jabatan_deleted: Date | null
  }

  export type JabatanMaxAggregateOutputType = {
    jabatan_id: number | null
    jabatan_opd: number | null
    jabatan_nama: string | null
    jabatan_kop_surat: number | null
    jabatan_kelas_biaya: number | null
    jabatan_kwitansi: number | null
    jabatan_kelompok: number | null
    jabatan_created: Date | null
    jabatan_updated: Date | null
    jabatan_deleted: Date | null
  }

  export type JabatanCountAggregateOutputType = {
    jabatan_id: number
    jabatan_opd: number
    jabatan_nama: number
    jabatan_kop_surat: number
    jabatan_kelas_biaya: number
    jabatan_kwitansi: number
    jabatan_kelompok: number
    jabatan_created: number
    jabatan_updated: number
    jabatan_deleted: number
    _all: number
  }


  export type JabatanAvgAggregateInputType = {
    jabatan_id?: true
    jabatan_opd?: true
    jabatan_kop_surat?: true
    jabatan_kelas_biaya?: true
    jabatan_kwitansi?: true
    jabatan_kelompok?: true
  }

  export type JabatanSumAggregateInputType = {
    jabatan_id?: true
    jabatan_opd?: true
    jabatan_kop_surat?: true
    jabatan_kelas_biaya?: true
    jabatan_kwitansi?: true
    jabatan_kelompok?: true
  }

  export type JabatanMinAggregateInputType = {
    jabatan_id?: true
    jabatan_opd?: true
    jabatan_nama?: true
    jabatan_kop_surat?: true
    jabatan_kelas_biaya?: true
    jabatan_kwitansi?: true
    jabatan_kelompok?: true
    jabatan_created?: true
    jabatan_updated?: true
    jabatan_deleted?: true
  }

  export type JabatanMaxAggregateInputType = {
    jabatan_id?: true
    jabatan_opd?: true
    jabatan_nama?: true
    jabatan_kop_surat?: true
    jabatan_kelas_biaya?: true
    jabatan_kwitansi?: true
    jabatan_kelompok?: true
    jabatan_created?: true
    jabatan_updated?: true
    jabatan_deleted?: true
  }

  export type JabatanCountAggregateInputType = {
    jabatan_id?: true
    jabatan_opd?: true
    jabatan_nama?: true
    jabatan_kop_surat?: true
    jabatan_kelas_biaya?: true
    jabatan_kwitansi?: true
    jabatan_kelompok?: true
    jabatan_created?: true
    jabatan_updated?: true
    jabatan_deleted?: true
    _all?: true
  }

  export type JabatanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which jabatan to aggregate.
     */
    where?: jabatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of jabatans to fetch.
     */
    orderBy?: jabatanOrderByWithRelationInput | jabatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: jabatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` jabatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` jabatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned jabatans
    **/
    _count?: true | JabatanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JabatanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JabatanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JabatanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JabatanMaxAggregateInputType
  }

  export type GetJabatanAggregateType<T extends JabatanAggregateArgs> = {
        [P in keyof T & keyof AggregateJabatan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJabatan[P]>
      : GetScalarType<T[P], AggregateJabatan[P]>
  }




  export type jabatanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: jabatanWhereInput
    orderBy?: jabatanOrderByWithAggregationInput | jabatanOrderByWithAggregationInput[]
    by: JabatanScalarFieldEnum[] | JabatanScalarFieldEnum
    having?: jabatanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JabatanCountAggregateInputType | true
    _avg?: JabatanAvgAggregateInputType
    _sum?: JabatanSumAggregateInputType
    _min?: JabatanMinAggregateInputType
    _max?: JabatanMaxAggregateInputType
  }

  export type JabatanGroupByOutputType = {
    jabatan_id: number
    jabatan_opd: number
    jabatan_nama: string
    jabatan_kop_surat: number | null
    jabatan_kelas_biaya: number
    jabatan_kwitansi: number | null
    jabatan_kelompok: number | null
    jabatan_created: Date
    jabatan_updated: Date
    jabatan_deleted: Date | null
    _count: JabatanCountAggregateOutputType | null
    _avg: JabatanAvgAggregateOutputType | null
    _sum: JabatanSumAggregateOutputType | null
    _min: JabatanMinAggregateOutputType | null
    _max: JabatanMaxAggregateOutputType | null
  }

  type GetJabatanGroupByPayload<T extends jabatanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JabatanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JabatanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JabatanGroupByOutputType[P]>
            : GetScalarType<T[P], JabatanGroupByOutputType[P]>
        }
      >
    >


  export type jabatanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    jabatan_id?: boolean
    jabatan_opd?: boolean
    jabatan_nama?: boolean
    jabatan_kop_surat?: boolean
    jabatan_kelas_biaya?: boolean
    jabatan_kwitansi?: boolean
    jabatan_kelompok?: boolean
    jabatan_created?: boolean
    jabatan_updated?: boolean
    jabatan_deleted?: boolean
    users?: boolean | jabatan$usersArgs<ExtArgs>
    _count?: boolean | JabatanCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jabatan"]>

  export type jabatanSelectScalar = {
    jabatan_id?: boolean
    jabatan_opd?: boolean
    jabatan_nama?: boolean
    jabatan_kop_surat?: boolean
    jabatan_kelas_biaya?: boolean
    jabatan_kwitansi?: boolean
    jabatan_kelompok?: boolean
    jabatan_created?: boolean
    jabatan_updated?: boolean
    jabatan_deleted?: boolean
  }

  export type jabatanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | jabatan$usersArgs<ExtArgs>
    _count?: boolean | JabatanCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $jabatanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "jabatan"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      jabatan_id: number
      jabatan_opd: number
      jabatan_nama: string
      jabatan_kop_surat: number | null
      jabatan_kelas_biaya: number
      jabatan_kwitansi: number | null
      jabatan_kelompok: number | null
      jabatan_created: Date
      jabatan_updated: Date
      jabatan_deleted: Date | null
    }, ExtArgs["result"]["jabatan"]>
    composites: {}
  }


  type jabatanGetPayload<S extends boolean | null | undefined | jabatanDefaultArgs> = $Result.GetResult<Prisma.$jabatanPayload, S>

  type jabatanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<jabatanFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: JabatanCountAggregateInputType | true
    }

  export interface jabatanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['jabatan'], meta: { name: 'jabatan' } }
    /**
     * Find zero or one Jabatan that matches the filter.
     * @param {jabatanFindUniqueArgs} args - Arguments to find a Jabatan
     * @example
     * // Get one Jabatan
     * const jabatan = await prisma.jabatan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends jabatanFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, jabatanFindUniqueArgs<ExtArgs>>
    ): Prisma__jabatanClient<$Result.GetResult<Prisma.$jabatanPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Jabatan that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {jabatanFindUniqueOrThrowArgs} args - Arguments to find a Jabatan
     * @example
     * // Get one Jabatan
     * const jabatan = await prisma.jabatan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends jabatanFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, jabatanFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__jabatanClient<$Result.GetResult<Prisma.$jabatanPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Jabatan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jabatanFindFirstArgs} args - Arguments to find a Jabatan
     * @example
     * // Get one Jabatan
     * const jabatan = await prisma.jabatan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends jabatanFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, jabatanFindFirstArgs<ExtArgs>>
    ): Prisma__jabatanClient<$Result.GetResult<Prisma.$jabatanPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Jabatan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jabatanFindFirstOrThrowArgs} args - Arguments to find a Jabatan
     * @example
     * // Get one Jabatan
     * const jabatan = await prisma.jabatan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends jabatanFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, jabatanFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__jabatanClient<$Result.GetResult<Prisma.$jabatanPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Jabatans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jabatanFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Jabatans
     * const jabatans = await prisma.jabatan.findMany()
     * 
     * // Get first 10 Jabatans
     * const jabatans = await prisma.jabatan.findMany({ take: 10 })
     * 
     * // Only select the `jabatan_id`
     * const jabatanWithJabatan_idOnly = await prisma.jabatan.findMany({ select: { jabatan_id: true } })
     * 
    **/
    findMany<T extends jabatanFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, jabatanFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$jabatanPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Jabatan.
     * @param {jabatanCreateArgs} args - Arguments to create a Jabatan.
     * @example
     * // Create one Jabatan
     * const Jabatan = await prisma.jabatan.create({
     *   data: {
     *     // ... data to create a Jabatan
     *   }
     * })
     * 
    **/
    create<T extends jabatanCreateArgs<ExtArgs>>(
      args: SelectSubset<T, jabatanCreateArgs<ExtArgs>>
    ): Prisma__jabatanClient<$Result.GetResult<Prisma.$jabatanPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Jabatans.
     *     @param {jabatanCreateManyArgs} args - Arguments to create many Jabatans.
     *     @example
     *     // Create many Jabatans
     *     const jabatan = await prisma.jabatan.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends jabatanCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, jabatanCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Jabatan.
     * @param {jabatanDeleteArgs} args - Arguments to delete one Jabatan.
     * @example
     * // Delete one Jabatan
     * const Jabatan = await prisma.jabatan.delete({
     *   where: {
     *     // ... filter to delete one Jabatan
     *   }
     * })
     * 
    **/
    delete<T extends jabatanDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, jabatanDeleteArgs<ExtArgs>>
    ): Prisma__jabatanClient<$Result.GetResult<Prisma.$jabatanPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Jabatan.
     * @param {jabatanUpdateArgs} args - Arguments to update one Jabatan.
     * @example
     * // Update one Jabatan
     * const jabatan = await prisma.jabatan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends jabatanUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, jabatanUpdateArgs<ExtArgs>>
    ): Prisma__jabatanClient<$Result.GetResult<Prisma.$jabatanPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Jabatans.
     * @param {jabatanDeleteManyArgs} args - Arguments to filter Jabatans to delete.
     * @example
     * // Delete a few Jabatans
     * const { count } = await prisma.jabatan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends jabatanDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, jabatanDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Jabatans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jabatanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Jabatans
     * const jabatan = await prisma.jabatan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends jabatanUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, jabatanUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Jabatan.
     * @param {jabatanUpsertArgs} args - Arguments to update or create a Jabatan.
     * @example
     * // Update or create a Jabatan
     * const jabatan = await prisma.jabatan.upsert({
     *   create: {
     *     // ... data to create a Jabatan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Jabatan we want to update
     *   }
     * })
    **/
    upsert<T extends jabatanUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, jabatanUpsertArgs<ExtArgs>>
    ): Prisma__jabatanClient<$Result.GetResult<Prisma.$jabatanPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Jabatans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jabatanCountArgs} args - Arguments to filter Jabatans to count.
     * @example
     * // Count the number of Jabatans
     * const count = await prisma.jabatan.count({
     *   where: {
     *     // ... the filter for the Jabatans we want to count
     *   }
     * })
    **/
    count<T extends jabatanCountArgs>(
      args?: Subset<T, jabatanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JabatanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Jabatan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JabatanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JabatanAggregateArgs>(args: Subset<T, JabatanAggregateArgs>): Prisma.PrismaPromise<GetJabatanAggregateType<T>>

    /**
     * Group by Jabatan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jabatanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends jabatanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: jabatanGroupByArgs['orderBy'] }
        : { orderBy?: jabatanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, jabatanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJabatanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the jabatan model
   */
  readonly fields: jabatanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for jabatan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__jabatanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    users<T extends jabatan$usersArgs<ExtArgs> = {}>(args?: Subset<T, jabatan$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the jabatan model
   */ 
  interface jabatanFieldRefs {
    readonly jabatan_id: FieldRef<"jabatan", 'Int'>
    readonly jabatan_opd: FieldRef<"jabatan", 'Int'>
    readonly jabatan_nama: FieldRef<"jabatan", 'String'>
    readonly jabatan_kop_surat: FieldRef<"jabatan", 'Int'>
    readonly jabatan_kelas_biaya: FieldRef<"jabatan", 'Int'>
    readonly jabatan_kwitansi: FieldRef<"jabatan", 'Int'>
    readonly jabatan_kelompok: FieldRef<"jabatan", 'Int'>
    readonly jabatan_created: FieldRef<"jabatan", 'DateTime'>
    readonly jabatan_updated: FieldRef<"jabatan", 'DateTime'>
    readonly jabatan_deleted: FieldRef<"jabatan", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * jabatan findUnique
   */
  export type jabatanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jabatan
     */
    select?: jabatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: jabatanInclude<ExtArgs> | null
    /**
     * Filter, which jabatan to fetch.
     */
    where: jabatanWhereUniqueInput
  }


  /**
   * jabatan findUniqueOrThrow
   */
  export type jabatanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jabatan
     */
    select?: jabatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: jabatanInclude<ExtArgs> | null
    /**
     * Filter, which jabatan to fetch.
     */
    where: jabatanWhereUniqueInput
  }


  /**
   * jabatan findFirst
   */
  export type jabatanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jabatan
     */
    select?: jabatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: jabatanInclude<ExtArgs> | null
    /**
     * Filter, which jabatan to fetch.
     */
    where?: jabatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of jabatans to fetch.
     */
    orderBy?: jabatanOrderByWithRelationInput | jabatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for jabatans.
     */
    cursor?: jabatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` jabatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` jabatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of jabatans.
     */
    distinct?: JabatanScalarFieldEnum | JabatanScalarFieldEnum[]
  }


  /**
   * jabatan findFirstOrThrow
   */
  export type jabatanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jabatan
     */
    select?: jabatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: jabatanInclude<ExtArgs> | null
    /**
     * Filter, which jabatan to fetch.
     */
    where?: jabatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of jabatans to fetch.
     */
    orderBy?: jabatanOrderByWithRelationInput | jabatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for jabatans.
     */
    cursor?: jabatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` jabatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` jabatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of jabatans.
     */
    distinct?: JabatanScalarFieldEnum | JabatanScalarFieldEnum[]
  }


  /**
   * jabatan findMany
   */
  export type jabatanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jabatan
     */
    select?: jabatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: jabatanInclude<ExtArgs> | null
    /**
     * Filter, which jabatans to fetch.
     */
    where?: jabatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of jabatans to fetch.
     */
    orderBy?: jabatanOrderByWithRelationInput | jabatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing jabatans.
     */
    cursor?: jabatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` jabatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` jabatans.
     */
    skip?: number
    distinct?: JabatanScalarFieldEnum | JabatanScalarFieldEnum[]
  }


  /**
   * jabatan create
   */
  export type jabatanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jabatan
     */
    select?: jabatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: jabatanInclude<ExtArgs> | null
    /**
     * The data needed to create a jabatan.
     */
    data: XOR<jabatanCreateInput, jabatanUncheckedCreateInput>
  }


  /**
   * jabatan createMany
   */
  export type jabatanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many jabatans.
     */
    data: jabatanCreateManyInput | jabatanCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * jabatan update
   */
  export type jabatanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jabatan
     */
    select?: jabatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: jabatanInclude<ExtArgs> | null
    /**
     * The data needed to update a jabatan.
     */
    data: XOR<jabatanUpdateInput, jabatanUncheckedUpdateInput>
    /**
     * Choose, which jabatan to update.
     */
    where: jabatanWhereUniqueInput
  }


  /**
   * jabatan updateMany
   */
  export type jabatanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update jabatans.
     */
    data: XOR<jabatanUpdateManyMutationInput, jabatanUncheckedUpdateManyInput>
    /**
     * Filter which jabatans to update
     */
    where?: jabatanWhereInput
  }


  /**
   * jabatan upsert
   */
  export type jabatanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jabatan
     */
    select?: jabatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: jabatanInclude<ExtArgs> | null
    /**
     * The filter to search for the jabatan to update in case it exists.
     */
    where: jabatanWhereUniqueInput
    /**
     * In case the jabatan found by the `where` argument doesn't exist, create a new jabatan with this data.
     */
    create: XOR<jabatanCreateInput, jabatanUncheckedCreateInput>
    /**
     * In case the jabatan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<jabatanUpdateInput, jabatanUncheckedUpdateInput>
  }


  /**
   * jabatan delete
   */
  export type jabatanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jabatan
     */
    select?: jabatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: jabatanInclude<ExtArgs> | null
    /**
     * Filter which jabatan to delete.
     */
    where: jabatanWhereUniqueInput
  }


  /**
   * jabatan deleteMany
   */
  export type jabatanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which jabatans to delete
     */
    where?: jabatanWhereInput
  }


  /**
   * jabatan.users
   */
  export type jabatan$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    cursor?: usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * jabatan without action
   */
  export type jabatanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jabatan
     */
    select?: jabatanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: jabatanInclude<ExtArgs> | null
  }



  /**
   * Model kwitansi
   */

  export type AggregateKwitansi = {
    _count: KwitansiCountAggregateOutputType | null
    _avg: KwitansiAvgAggregateOutputType | null
    _sum: KwitansiSumAggregateOutputType | null
    _min: KwitansiMinAggregateOutputType | null
    _max: KwitansiMaxAggregateOutputType | null
  }

  export type KwitansiAvgAggregateOutputType = {
    kwitansi_spt_pegawai: number | null
    kwitansi_opd: number | null
  }

  export type KwitansiSumAggregateOutputType = {
    kwitansi_spt_pegawai: number | null
    kwitansi_opd: number | null
  }

  export type KwitansiMinAggregateOutputType = {
    kwitansi_spt_pegawai: number | null
    kwitansi_nomor: string | null
    kwitansi_opd: number | null
    kwitansi_created: Date | null
    kwitansi_updated: Date | null
  }

  export type KwitansiMaxAggregateOutputType = {
    kwitansi_spt_pegawai: number | null
    kwitansi_nomor: string | null
    kwitansi_opd: number | null
    kwitansi_created: Date | null
    kwitansi_updated: Date | null
  }

  export type KwitansiCountAggregateOutputType = {
    kwitansi_spt_pegawai: number
    kwitansi_nomor: number
    kwitansi_opd: number
    kwitansi_created: number
    kwitansi_updated: number
    _all: number
  }


  export type KwitansiAvgAggregateInputType = {
    kwitansi_spt_pegawai?: true
    kwitansi_opd?: true
  }

  export type KwitansiSumAggregateInputType = {
    kwitansi_spt_pegawai?: true
    kwitansi_opd?: true
  }

  export type KwitansiMinAggregateInputType = {
    kwitansi_spt_pegawai?: true
    kwitansi_nomor?: true
    kwitansi_opd?: true
    kwitansi_created?: true
    kwitansi_updated?: true
  }

  export type KwitansiMaxAggregateInputType = {
    kwitansi_spt_pegawai?: true
    kwitansi_nomor?: true
    kwitansi_opd?: true
    kwitansi_created?: true
    kwitansi_updated?: true
  }

  export type KwitansiCountAggregateInputType = {
    kwitansi_spt_pegawai?: true
    kwitansi_nomor?: true
    kwitansi_opd?: true
    kwitansi_created?: true
    kwitansi_updated?: true
    _all?: true
  }

  export type KwitansiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which kwitansi to aggregate.
     */
    where?: kwitansiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kwitansis to fetch.
     */
    orderBy?: kwitansiOrderByWithRelationInput | kwitansiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: kwitansiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kwitansis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kwitansis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned kwitansis
    **/
    _count?: true | KwitansiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: KwitansiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: KwitansiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: KwitansiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: KwitansiMaxAggregateInputType
  }

  export type GetKwitansiAggregateType<T extends KwitansiAggregateArgs> = {
        [P in keyof T & keyof AggregateKwitansi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKwitansi[P]>
      : GetScalarType<T[P], AggregateKwitansi[P]>
  }




  export type kwitansiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: kwitansiWhereInput
    orderBy?: kwitansiOrderByWithAggregationInput | kwitansiOrderByWithAggregationInput[]
    by: KwitansiScalarFieldEnum[] | KwitansiScalarFieldEnum
    having?: kwitansiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: KwitansiCountAggregateInputType | true
    _avg?: KwitansiAvgAggregateInputType
    _sum?: KwitansiSumAggregateInputType
    _min?: KwitansiMinAggregateInputType
    _max?: KwitansiMaxAggregateInputType
  }

  export type KwitansiGroupByOutputType = {
    kwitansi_spt_pegawai: number
    kwitansi_nomor: string
    kwitansi_opd: number
    kwitansi_created: Date
    kwitansi_updated: Date
    _count: KwitansiCountAggregateOutputType | null
    _avg: KwitansiAvgAggregateOutputType | null
    _sum: KwitansiSumAggregateOutputType | null
    _min: KwitansiMinAggregateOutputType | null
    _max: KwitansiMaxAggregateOutputType | null
  }

  type GetKwitansiGroupByPayload<T extends kwitansiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<KwitansiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof KwitansiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], KwitansiGroupByOutputType[P]>
            : GetScalarType<T[P], KwitansiGroupByOutputType[P]>
        }
      >
    >


  export type kwitansiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kwitansi_spt_pegawai?: boolean
    kwitansi_nomor?: boolean
    kwitansi_opd?: boolean
    kwitansi_created?: boolean
    kwitansi_updated?: boolean
    spt_pegawai?: boolean | spt_pegawaiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kwitansi"]>

  export type kwitansiSelectScalar = {
    kwitansi_spt_pegawai?: boolean
    kwitansi_nomor?: boolean
    kwitansi_opd?: boolean
    kwitansi_created?: boolean
    kwitansi_updated?: boolean
  }

  export type kwitansiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spt_pegawai?: boolean | spt_pegawaiDefaultArgs<ExtArgs>
  }


  export type $kwitansiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "kwitansi"
    objects: {
      spt_pegawai: Prisma.$spt_pegawaiPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      kwitansi_spt_pegawai: number
      kwitansi_nomor: string
      kwitansi_opd: number
      kwitansi_created: Date
      kwitansi_updated: Date
    }, ExtArgs["result"]["kwitansi"]>
    composites: {}
  }


  type kwitansiGetPayload<S extends boolean | null | undefined | kwitansiDefaultArgs> = $Result.GetResult<Prisma.$kwitansiPayload, S>

  type kwitansiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<kwitansiFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: KwitansiCountAggregateInputType | true
    }

  export interface kwitansiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['kwitansi'], meta: { name: 'kwitansi' } }
    /**
     * Find zero or one Kwitansi that matches the filter.
     * @param {kwitansiFindUniqueArgs} args - Arguments to find a Kwitansi
     * @example
     * // Get one Kwitansi
     * const kwitansi = await prisma.kwitansi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends kwitansiFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, kwitansiFindUniqueArgs<ExtArgs>>
    ): Prisma__kwitansiClient<$Result.GetResult<Prisma.$kwitansiPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Kwitansi that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {kwitansiFindUniqueOrThrowArgs} args - Arguments to find a Kwitansi
     * @example
     * // Get one Kwitansi
     * const kwitansi = await prisma.kwitansi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends kwitansiFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, kwitansiFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__kwitansiClient<$Result.GetResult<Prisma.$kwitansiPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Kwitansi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kwitansiFindFirstArgs} args - Arguments to find a Kwitansi
     * @example
     * // Get one Kwitansi
     * const kwitansi = await prisma.kwitansi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends kwitansiFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, kwitansiFindFirstArgs<ExtArgs>>
    ): Prisma__kwitansiClient<$Result.GetResult<Prisma.$kwitansiPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Kwitansi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kwitansiFindFirstOrThrowArgs} args - Arguments to find a Kwitansi
     * @example
     * // Get one Kwitansi
     * const kwitansi = await prisma.kwitansi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends kwitansiFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, kwitansiFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__kwitansiClient<$Result.GetResult<Prisma.$kwitansiPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Kwitansis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kwitansiFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kwitansis
     * const kwitansis = await prisma.kwitansi.findMany()
     * 
     * // Get first 10 Kwitansis
     * const kwitansis = await prisma.kwitansi.findMany({ take: 10 })
     * 
     * // Only select the `kwitansi_spt_pegawai`
     * const kwitansiWithKwitansi_spt_pegawaiOnly = await prisma.kwitansi.findMany({ select: { kwitansi_spt_pegawai: true } })
     * 
    **/
    findMany<T extends kwitansiFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kwitansiFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$kwitansiPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Kwitansi.
     * @param {kwitansiCreateArgs} args - Arguments to create a Kwitansi.
     * @example
     * // Create one Kwitansi
     * const Kwitansi = await prisma.kwitansi.create({
     *   data: {
     *     // ... data to create a Kwitansi
     *   }
     * })
     * 
    **/
    create<T extends kwitansiCreateArgs<ExtArgs>>(
      args: SelectSubset<T, kwitansiCreateArgs<ExtArgs>>
    ): Prisma__kwitansiClient<$Result.GetResult<Prisma.$kwitansiPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Kwitansis.
     *     @param {kwitansiCreateManyArgs} args - Arguments to create many Kwitansis.
     *     @example
     *     // Create many Kwitansis
     *     const kwitansi = await prisma.kwitansi.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends kwitansiCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kwitansiCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Kwitansi.
     * @param {kwitansiDeleteArgs} args - Arguments to delete one Kwitansi.
     * @example
     * // Delete one Kwitansi
     * const Kwitansi = await prisma.kwitansi.delete({
     *   where: {
     *     // ... filter to delete one Kwitansi
     *   }
     * })
     * 
    **/
    delete<T extends kwitansiDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, kwitansiDeleteArgs<ExtArgs>>
    ): Prisma__kwitansiClient<$Result.GetResult<Prisma.$kwitansiPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Kwitansi.
     * @param {kwitansiUpdateArgs} args - Arguments to update one Kwitansi.
     * @example
     * // Update one Kwitansi
     * const kwitansi = await prisma.kwitansi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends kwitansiUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, kwitansiUpdateArgs<ExtArgs>>
    ): Prisma__kwitansiClient<$Result.GetResult<Prisma.$kwitansiPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Kwitansis.
     * @param {kwitansiDeleteManyArgs} args - Arguments to filter Kwitansis to delete.
     * @example
     * // Delete a few Kwitansis
     * const { count } = await prisma.kwitansi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends kwitansiDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kwitansiDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kwitansis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kwitansiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kwitansis
     * const kwitansi = await prisma.kwitansi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends kwitansiUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, kwitansiUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Kwitansi.
     * @param {kwitansiUpsertArgs} args - Arguments to update or create a Kwitansi.
     * @example
     * // Update or create a Kwitansi
     * const kwitansi = await prisma.kwitansi.upsert({
     *   create: {
     *     // ... data to create a Kwitansi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kwitansi we want to update
     *   }
     * })
    **/
    upsert<T extends kwitansiUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, kwitansiUpsertArgs<ExtArgs>>
    ): Prisma__kwitansiClient<$Result.GetResult<Prisma.$kwitansiPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Kwitansis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kwitansiCountArgs} args - Arguments to filter Kwitansis to count.
     * @example
     * // Count the number of Kwitansis
     * const count = await prisma.kwitansi.count({
     *   where: {
     *     // ... the filter for the Kwitansis we want to count
     *   }
     * })
    **/
    count<T extends kwitansiCountArgs>(
      args?: Subset<T, kwitansiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], KwitansiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kwitansi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KwitansiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends KwitansiAggregateArgs>(args: Subset<T, KwitansiAggregateArgs>): Prisma.PrismaPromise<GetKwitansiAggregateType<T>>

    /**
     * Group by Kwitansi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kwitansiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends kwitansiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: kwitansiGroupByArgs['orderBy'] }
        : { orderBy?: kwitansiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, kwitansiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKwitansiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the kwitansi model
   */
  readonly fields: kwitansiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for kwitansi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__kwitansiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    spt_pegawai<T extends spt_pegawaiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, spt_pegawaiDefaultArgs<ExtArgs>>): Prisma__spt_pegawaiClient<$Result.GetResult<Prisma.$spt_pegawaiPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the kwitansi model
   */ 
  interface kwitansiFieldRefs {
    readonly kwitansi_spt_pegawai: FieldRef<"kwitansi", 'Int'>
    readonly kwitansi_nomor: FieldRef<"kwitansi", 'String'>
    readonly kwitansi_opd: FieldRef<"kwitansi", 'Int'>
    readonly kwitansi_created: FieldRef<"kwitansi", 'DateTime'>
    readonly kwitansi_updated: FieldRef<"kwitansi", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * kwitansi findUnique
   */
  export type kwitansiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kwitansi
     */
    select?: kwitansiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kwitansiInclude<ExtArgs> | null
    /**
     * Filter, which kwitansi to fetch.
     */
    where: kwitansiWhereUniqueInput
  }


  /**
   * kwitansi findUniqueOrThrow
   */
  export type kwitansiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kwitansi
     */
    select?: kwitansiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kwitansiInclude<ExtArgs> | null
    /**
     * Filter, which kwitansi to fetch.
     */
    where: kwitansiWhereUniqueInput
  }


  /**
   * kwitansi findFirst
   */
  export type kwitansiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kwitansi
     */
    select?: kwitansiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kwitansiInclude<ExtArgs> | null
    /**
     * Filter, which kwitansi to fetch.
     */
    where?: kwitansiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kwitansis to fetch.
     */
    orderBy?: kwitansiOrderByWithRelationInput | kwitansiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for kwitansis.
     */
    cursor?: kwitansiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kwitansis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kwitansis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of kwitansis.
     */
    distinct?: KwitansiScalarFieldEnum | KwitansiScalarFieldEnum[]
  }


  /**
   * kwitansi findFirstOrThrow
   */
  export type kwitansiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kwitansi
     */
    select?: kwitansiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kwitansiInclude<ExtArgs> | null
    /**
     * Filter, which kwitansi to fetch.
     */
    where?: kwitansiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kwitansis to fetch.
     */
    orderBy?: kwitansiOrderByWithRelationInput | kwitansiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for kwitansis.
     */
    cursor?: kwitansiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kwitansis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kwitansis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of kwitansis.
     */
    distinct?: KwitansiScalarFieldEnum | KwitansiScalarFieldEnum[]
  }


  /**
   * kwitansi findMany
   */
  export type kwitansiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kwitansi
     */
    select?: kwitansiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kwitansiInclude<ExtArgs> | null
    /**
     * Filter, which kwitansis to fetch.
     */
    where?: kwitansiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kwitansis to fetch.
     */
    orderBy?: kwitansiOrderByWithRelationInput | kwitansiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing kwitansis.
     */
    cursor?: kwitansiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kwitansis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kwitansis.
     */
    skip?: number
    distinct?: KwitansiScalarFieldEnum | KwitansiScalarFieldEnum[]
  }


  /**
   * kwitansi create
   */
  export type kwitansiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kwitansi
     */
    select?: kwitansiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kwitansiInclude<ExtArgs> | null
    /**
     * The data needed to create a kwitansi.
     */
    data: XOR<kwitansiCreateInput, kwitansiUncheckedCreateInput>
  }


  /**
   * kwitansi createMany
   */
  export type kwitansiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many kwitansis.
     */
    data: kwitansiCreateManyInput | kwitansiCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * kwitansi update
   */
  export type kwitansiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kwitansi
     */
    select?: kwitansiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kwitansiInclude<ExtArgs> | null
    /**
     * The data needed to update a kwitansi.
     */
    data: XOR<kwitansiUpdateInput, kwitansiUncheckedUpdateInput>
    /**
     * Choose, which kwitansi to update.
     */
    where: kwitansiWhereUniqueInput
  }


  /**
   * kwitansi updateMany
   */
  export type kwitansiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update kwitansis.
     */
    data: XOR<kwitansiUpdateManyMutationInput, kwitansiUncheckedUpdateManyInput>
    /**
     * Filter which kwitansis to update
     */
    where?: kwitansiWhereInput
  }


  /**
   * kwitansi upsert
   */
  export type kwitansiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kwitansi
     */
    select?: kwitansiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kwitansiInclude<ExtArgs> | null
    /**
     * The filter to search for the kwitansi to update in case it exists.
     */
    where: kwitansiWhereUniqueInput
    /**
     * In case the kwitansi found by the `where` argument doesn't exist, create a new kwitansi with this data.
     */
    create: XOR<kwitansiCreateInput, kwitansiUncheckedCreateInput>
    /**
     * In case the kwitansi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<kwitansiUpdateInput, kwitansiUncheckedUpdateInput>
  }


  /**
   * kwitansi delete
   */
  export type kwitansiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kwitansi
     */
    select?: kwitansiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kwitansiInclude<ExtArgs> | null
    /**
     * Filter which kwitansi to delete.
     */
    where: kwitansiWhereUniqueInput
  }


  /**
   * kwitansi deleteMany
   */
  export type kwitansiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which kwitansis to delete
     */
    where?: kwitansiWhereInput
  }


  /**
   * kwitansi without action
   */
  export type kwitansiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kwitansi
     */
    select?: kwitansiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kwitansiInclude<ExtArgs> | null
  }



  /**
   * Model kategori
   */

  export type AggregateKategori = {
    _count: KategoriCountAggregateOutputType | null
    _avg: KategoriAvgAggregateOutputType | null
    _sum: KategoriSumAggregateOutputType | null
    _min: KategoriMinAggregateOutputType | null
    _max: KategoriMaxAggregateOutputType | null
  }

  export type KategoriAvgAggregateOutputType = {
    kategori_id: number | null
    kategori_opd: number | null
  }

  export type KategoriSumAggregateOutputType = {
    kategori_id: number | null
    kategori_opd: number | null
  }

  export type KategoriMinAggregateOutputType = {
    kategori_id: number | null
    kategori_nama: string | null
    kategori_opd: number | null
    kategori_created: Date | null
    kategori_updated: Date | null
    kategori_deleted: Date | null
  }

  export type KategoriMaxAggregateOutputType = {
    kategori_id: number | null
    kategori_nama: string | null
    kategori_opd: number | null
    kategori_created: Date | null
    kategori_updated: Date | null
    kategori_deleted: Date | null
  }

  export type KategoriCountAggregateOutputType = {
    kategori_id: number
    kategori_nama: number
    kategori_opd: number
    kategori_created: number
    kategori_updated: number
    kategori_deleted: number
    _all: number
  }


  export type KategoriAvgAggregateInputType = {
    kategori_id?: true
    kategori_opd?: true
  }

  export type KategoriSumAggregateInputType = {
    kategori_id?: true
    kategori_opd?: true
  }

  export type KategoriMinAggregateInputType = {
    kategori_id?: true
    kategori_nama?: true
    kategori_opd?: true
    kategori_created?: true
    kategori_updated?: true
    kategori_deleted?: true
  }

  export type KategoriMaxAggregateInputType = {
    kategori_id?: true
    kategori_nama?: true
    kategori_opd?: true
    kategori_created?: true
    kategori_updated?: true
    kategori_deleted?: true
  }

  export type KategoriCountAggregateInputType = {
    kategori_id?: true
    kategori_nama?: true
    kategori_opd?: true
    kategori_created?: true
    kategori_updated?: true
    kategori_deleted?: true
    _all?: true
  }

  export type KategoriAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which kategori to aggregate.
     */
    where?: kategoriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kategoris to fetch.
     */
    orderBy?: kategoriOrderByWithRelationInput | kategoriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: kategoriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kategoris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kategoris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned kategoris
    **/
    _count?: true | KategoriCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: KategoriAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: KategoriSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: KategoriMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: KategoriMaxAggregateInputType
  }

  export type GetKategoriAggregateType<T extends KategoriAggregateArgs> = {
        [P in keyof T & keyof AggregateKategori]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKategori[P]>
      : GetScalarType<T[P], AggregateKategori[P]>
  }




  export type kategoriGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: kategoriWhereInput
    orderBy?: kategoriOrderByWithAggregationInput | kategoriOrderByWithAggregationInput[]
    by: KategoriScalarFieldEnum[] | KategoriScalarFieldEnum
    having?: kategoriScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: KategoriCountAggregateInputType | true
    _avg?: KategoriAvgAggregateInputType
    _sum?: KategoriSumAggregateInputType
    _min?: KategoriMinAggregateInputType
    _max?: KategoriMaxAggregateInputType
  }

  export type KategoriGroupByOutputType = {
    kategori_id: number
    kategori_nama: string
    kategori_opd: number
    kategori_created: Date
    kategori_updated: Date
    kategori_deleted: Date | null
    _count: KategoriCountAggregateOutputType | null
    _avg: KategoriAvgAggregateOutputType | null
    _sum: KategoriSumAggregateOutputType | null
    _min: KategoriMinAggregateOutputType | null
    _max: KategoriMaxAggregateOutputType | null
  }

  type GetKategoriGroupByPayload<T extends kategoriGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<KategoriGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof KategoriGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], KategoriGroupByOutputType[P]>
            : GetScalarType<T[P], KategoriGroupByOutputType[P]>
        }
      >
    >


  export type kategoriSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kategori_id?: boolean
    kategori_nama?: boolean
    kategori_opd?: boolean
    kategori_created?: boolean
    kategori_updated?: boolean
    kategori_deleted?: boolean
    spt?: boolean | kategori$sptArgs<ExtArgs>
    _count?: boolean | KategoriCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kategori"]>

  export type kategoriSelectScalar = {
    kategori_id?: boolean
    kategori_nama?: boolean
    kategori_opd?: boolean
    kategori_created?: boolean
    kategori_updated?: boolean
    kategori_deleted?: boolean
  }

  export type kategoriInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    spt?: boolean | kategori$sptArgs<ExtArgs>
    _count?: boolean | KategoriCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $kategoriPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "kategori"
    objects: {
      spt: Prisma.$sptPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      kategori_id: number
      kategori_nama: string
      kategori_opd: number
      kategori_created: Date
      kategori_updated: Date
      kategori_deleted: Date | null
    }, ExtArgs["result"]["kategori"]>
    composites: {}
  }


  type kategoriGetPayload<S extends boolean | null | undefined | kategoriDefaultArgs> = $Result.GetResult<Prisma.$kategoriPayload, S>

  type kategoriCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<kategoriFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: KategoriCountAggregateInputType | true
    }

  export interface kategoriDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['kategori'], meta: { name: 'kategori' } }
    /**
     * Find zero or one Kategori that matches the filter.
     * @param {kategoriFindUniqueArgs} args - Arguments to find a Kategori
     * @example
     * // Get one Kategori
     * const kategori = await prisma.kategori.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends kategoriFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, kategoriFindUniqueArgs<ExtArgs>>
    ): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Kategori that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {kategoriFindUniqueOrThrowArgs} args - Arguments to find a Kategori
     * @example
     * // Get one Kategori
     * const kategori = await prisma.kategori.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends kategoriFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, kategoriFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Kategori that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kategoriFindFirstArgs} args - Arguments to find a Kategori
     * @example
     * // Get one Kategori
     * const kategori = await prisma.kategori.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends kategoriFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, kategoriFindFirstArgs<ExtArgs>>
    ): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Kategori that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kategoriFindFirstOrThrowArgs} args - Arguments to find a Kategori
     * @example
     * // Get one Kategori
     * const kategori = await prisma.kategori.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends kategoriFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, kategoriFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Kategoris that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kategoriFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kategoris
     * const kategoris = await prisma.kategori.findMany()
     * 
     * // Get first 10 Kategoris
     * const kategoris = await prisma.kategori.findMany({ take: 10 })
     * 
     * // Only select the `kategori_id`
     * const kategoriWithKategori_idOnly = await prisma.kategori.findMany({ select: { kategori_id: true } })
     * 
    **/
    findMany<T extends kategoriFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kategoriFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Kategori.
     * @param {kategoriCreateArgs} args - Arguments to create a Kategori.
     * @example
     * // Create one Kategori
     * const Kategori = await prisma.kategori.create({
     *   data: {
     *     // ... data to create a Kategori
     *   }
     * })
     * 
    **/
    create<T extends kategoriCreateArgs<ExtArgs>>(
      args: SelectSubset<T, kategoriCreateArgs<ExtArgs>>
    ): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Kategoris.
     *     @param {kategoriCreateManyArgs} args - Arguments to create many Kategoris.
     *     @example
     *     // Create many Kategoris
     *     const kategori = await prisma.kategori.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends kategoriCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kategoriCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Kategori.
     * @param {kategoriDeleteArgs} args - Arguments to delete one Kategori.
     * @example
     * // Delete one Kategori
     * const Kategori = await prisma.kategori.delete({
     *   where: {
     *     // ... filter to delete one Kategori
     *   }
     * })
     * 
    **/
    delete<T extends kategoriDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, kategoriDeleteArgs<ExtArgs>>
    ): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Kategori.
     * @param {kategoriUpdateArgs} args - Arguments to update one Kategori.
     * @example
     * // Update one Kategori
     * const kategori = await prisma.kategori.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends kategoriUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, kategoriUpdateArgs<ExtArgs>>
    ): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Kategoris.
     * @param {kategoriDeleteManyArgs} args - Arguments to filter Kategoris to delete.
     * @example
     * // Delete a few Kategoris
     * const { count } = await prisma.kategori.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends kategoriDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, kategoriDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kategoris.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kategoriUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kategoris
     * const kategori = await prisma.kategori.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends kategoriUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, kategoriUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Kategori.
     * @param {kategoriUpsertArgs} args - Arguments to update or create a Kategori.
     * @example
     * // Update or create a Kategori
     * const kategori = await prisma.kategori.upsert({
     *   create: {
     *     // ... data to create a Kategori
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kategori we want to update
     *   }
     * })
    **/
    upsert<T extends kategoriUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, kategoriUpsertArgs<ExtArgs>>
    ): Prisma__kategoriClient<$Result.GetResult<Prisma.$kategoriPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Kategoris.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kategoriCountArgs} args - Arguments to filter Kategoris to count.
     * @example
     * // Count the number of Kategoris
     * const count = await prisma.kategori.count({
     *   where: {
     *     // ... the filter for the Kategoris we want to count
     *   }
     * })
    **/
    count<T extends kategoriCountArgs>(
      args?: Subset<T, kategoriCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], KategoriCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kategori.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KategoriAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends KategoriAggregateArgs>(args: Subset<T, KategoriAggregateArgs>): Prisma.PrismaPromise<GetKategoriAggregateType<T>>

    /**
     * Group by Kategori.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {kategoriGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends kategoriGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: kategoriGroupByArgs['orderBy'] }
        : { orderBy?: kategoriGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, kategoriGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKategoriGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the kategori model
   */
  readonly fields: kategoriFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for kategori.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__kategoriClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    spt<T extends kategori$sptArgs<ExtArgs> = {}>(args?: Subset<T, kategori$sptArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sptPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the kategori model
   */ 
  interface kategoriFieldRefs {
    readonly kategori_id: FieldRef<"kategori", 'Int'>
    readonly kategori_nama: FieldRef<"kategori", 'String'>
    readonly kategori_opd: FieldRef<"kategori", 'Int'>
    readonly kategori_created: FieldRef<"kategori", 'DateTime'>
    readonly kategori_updated: FieldRef<"kategori", 'DateTime'>
    readonly kategori_deleted: FieldRef<"kategori", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * kategori findUnique
   */
  export type kategoriFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * Filter, which kategori to fetch.
     */
    where: kategoriWhereUniqueInput
  }


  /**
   * kategori findUniqueOrThrow
   */
  export type kategoriFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * Filter, which kategori to fetch.
     */
    where: kategoriWhereUniqueInput
  }


  /**
   * kategori findFirst
   */
  export type kategoriFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * Filter, which kategori to fetch.
     */
    where?: kategoriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kategoris to fetch.
     */
    orderBy?: kategoriOrderByWithRelationInput | kategoriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for kategoris.
     */
    cursor?: kategoriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kategoris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kategoris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of kategoris.
     */
    distinct?: KategoriScalarFieldEnum | KategoriScalarFieldEnum[]
  }


  /**
   * kategori findFirstOrThrow
   */
  export type kategoriFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * Filter, which kategori to fetch.
     */
    where?: kategoriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kategoris to fetch.
     */
    orderBy?: kategoriOrderByWithRelationInput | kategoriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for kategoris.
     */
    cursor?: kategoriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kategoris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kategoris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of kategoris.
     */
    distinct?: KategoriScalarFieldEnum | KategoriScalarFieldEnum[]
  }


  /**
   * kategori findMany
   */
  export type kategoriFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * Filter, which kategoris to fetch.
     */
    where?: kategoriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of kategoris to fetch.
     */
    orderBy?: kategoriOrderByWithRelationInput | kategoriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing kategoris.
     */
    cursor?: kategoriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` kategoris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` kategoris.
     */
    skip?: number
    distinct?: KategoriScalarFieldEnum | KategoriScalarFieldEnum[]
  }


  /**
   * kategori create
   */
  export type kategoriCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * The data needed to create a kategori.
     */
    data: XOR<kategoriCreateInput, kategoriUncheckedCreateInput>
  }


  /**
   * kategori createMany
   */
  export type kategoriCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many kategoris.
     */
    data: kategoriCreateManyInput | kategoriCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * kategori update
   */
  export type kategoriUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * The data needed to update a kategori.
     */
    data: XOR<kategoriUpdateInput, kategoriUncheckedUpdateInput>
    /**
     * Choose, which kategori to update.
     */
    where: kategoriWhereUniqueInput
  }


  /**
   * kategori updateMany
   */
  export type kategoriUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update kategoris.
     */
    data: XOR<kategoriUpdateManyMutationInput, kategoriUncheckedUpdateManyInput>
    /**
     * Filter which kategoris to update
     */
    where?: kategoriWhereInput
  }


  /**
   * kategori upsert
   */
  export type kategoriUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * The filter to search for the kategori to update in case it exists.
     */
    where: kategoriWhereUniqueInput
    /**
     * In case the kategori found by the `where` argument doesn't exist, create a new kategori with this data.
     */
    create: XOR<kategoriCreateInput, kategoriUncheckedCreateInput>
    /**
     * In case the kategori was found with the provided `where` argument, update it with this data.
     */
    update: XOR<kategoriUpdateInput, kategoriUncheckedUpdateInput>
  }


  /**
   * kategori delete
   */
  export type kategoriDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kategoriInclude<ExtArgs> | null
    /**
     * Filter which kategori to delete.
     */
    where: kategoriWhereUniqueInput
  }


  /**
   * kategori deleteMany
   */
  export type kategoriDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which kategoris to delete
     */
    where?: kategoriWhereInput
  }


  /**
   * kategori.spt
   */
  export type kategori$sptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spt
     */
    select?: sptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sptInclude<ExtArgs> | null
    where?: sptWhereInput
    orderBy?: sptOrderByWithRelationInput | sptOrderByWithRelationInput[]
    cursor?: sptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SptScalarFieldEnum | SptScalarFieldEnum[]
  }


  /**
   * kategori without action
   */
  export type kategoriDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kategori
     */
    select?: kategoriSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kategoriInclude<ExtArgs> | null
  }



  /**
   * Model standard
   */

  export type AggregateStandard = {
    _count: StandardCountAggregateOutputType | null
    _avg: StandardAvgAggregateOutputType | null
    _sum: StandardSumAggregateOutputType | null
    _min: StandardMinAggregateOutputType | null
    _max: StandardMaxAggregateOutputType | null
  }

  export type StandardAvgAggregateOutputType = {
    standard_id: number | null
    standard_kode: number | null
    standard_opd: number | null
    standard_kota_asal: number | null
    standard_kota_tujuan: number | null
    standard_via: number | null
    standard_kelas: number | null
    standard_nominal: number | null
  }

  export type StandardSumAggregateOutputType = {
    standard_id: number | null
    standard_kode: number | null
    standard_opd: number | null
    standard_kota_asal: number | null
    standard_kota_tujuan: number | null
    standard_via: number | null
    standard_kelas: number | null
    standard_nominal: number | null
  }

  export type StandardMinAggregateOutputType = {
    standard_id: number | null
    standard_kode: number | null
    standard_opd: number | null
    standard_kota_asal: number | null
    standard_kota_tujuan: number | null
    standard_via: number | null
    standard_kelas: number | null
    standard_nominal: number | null
    standard_created: Date | null
    standard_updated: Date | null
    standard_deleted: Date | null
  }

  export type StandardMaxAggregateOutputType = {
    standard_id: number | null
    standard_kode: number | null
    standard_opd: number | null
    standard_kota_asal: number | null
    standard_kota_tujuan: number | null
    standard_via: number | null
    standard_kelas: number | null
    standard_nominal: number | null
    standard_created: Date | null
    standard_updated: Date | null
    standard_deleted: Date | null
  }

  export type StandardCountAggregateOutputType = {
    standard_id: number
    standard_kode: number
    standard_opd: number
    standard_kota_asal: number
    standard_kota_tujuan: number
    standard_via: number
    standard_kelas: number
    standard_nominal: number
    standard_created: number
    standard_updated: number
    standard_deleted: number
    _all: number
  }


  export type StandardAvgAggregateInputType = {
    standard_id?: true
    standard_kode?: true
    standard_opd?: true
    standard_kota_asal?: true
    standard_kota_tujuan?: true
    standard_via?: true
    standard_kelas?: true
    standard_nominal?: true
  }

  export type StandardSumAggregateInputType = {
    standard_id?: true
    standard_kode?: true
    standard_opd?: true
    standard_kota_asal?: true
    standard_kota_tujuan?: true
    standard_via?: true
    standard_kelas?: true
    standard_nominal?: true
  }

  export type StandardMinAggregateInputType = {
    standard_id?: true
    standard_kode?: true
    standard_opd?: true
    standard_kota_asal?: true
    standard_kota_tujuan?: true
    standard_via?: true
    standard_kelas?: true
    standard_nominal?: true
    standard_created?: true
    standard_updated?: true
    standard_deleted?: true
  }

  export type StandardMaxAggregateInputType = {
    standard_id?: true
    standard_kode?: true
    standard_opd?: true
    standard_kota_asal?: true
    standard_kota_tujuan?: true
    standard_via?: true
    standard_kelas?: true
    standard_nominal?: true
    standard_created?: true
    standard_updated?: true
    standard_deleted?: true
  }

  export type StandardCountAggregateInputType = {
    standard_id?: true
    standard_kode?: true
    standard_opd?: true
    standard_kota_asal?: true
    standard_kota_tujuan?: true
    standard_via?: true
    standard_kelas?: true
    standard_nominal?: true
    standard_created?: true
    standard_updated?: true
    standard_deleted?: true
    _all?: true
  }

  export type StandardAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which standard to aggregate.
     */
    where?: standardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of standards to fetch.
     */
    orderBy?: standardOrderByWithRelationInput | standardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: standardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` standards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` standards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned standards
    **/
    _count?: true | StandardCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StandardAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StandardSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StandardMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StandardMaxAggregateInputType
  }

  export type GetStandardAggregateType<T extends StandardAggregateArgs> = {
        [P in keyof T & keyof AggregateStandard]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStandard[P]>
      : GetScalarType<T[P], AggregateStandard[P]>
  }




  export type standardGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: standardWhereInput
    orderBy?: standardOrderByWithAggregationInput | standardOrderByWithAggregationInput[]
    by: StandardScalarFieldEnum[] | StandardScalarFieldEnum
    having?: standardScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StandardCountAggregateInputType | true
    _avg?: StandardAvgAggregateInputType
    _sum?: StandardSumAggregateInputType
    _min?: StandardMinAggregateInputType
    _max?: StandardMaxAggregateInputType
  }

  export type StandardGroupByOutputType = {
    standard_id: number
    standard_kode: number
    standard_opd: number
    standard_kota_asal: number
    standard_kota_tujuan: number
    standard_via: number
    standard_kelas: number
    standard_nominal: number
    standard_created: Date
    standard_updated: Date
    standard_deleted: Date | null
    _count: StandardCountAggregateOutputType | null
    _avg: StandardAvgAggregateOutputType | null
    _sum: StandardSumAggregateOutputType | null
    _min: StandardMinAggregateOutputType | null
    _max: StandardMaxAggregateOutputType | null
  }

  type GetStandardGroupByPayload<T extends standardGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StandardGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StandardGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StandardGroupByOutputType[P]>
            : GetScalarType<T[P], StandardGroupByOutputType[P]>
        }
      >
    >


  export type standardSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    standard_id?: boolean
    standard_kode?: boolean
    standard_opd?: boolean
    standard_kota_asal?: boolean
    standard_kota_tujuan?: boolean
    standard_via?: boolean
    standard_kelas?: boolean
    standard_nominal?: boolean
    standard_created?: boolean
    standard_updated?: boolean
    standard_deleted?: boolean
    kota_asal?: boolean | standard$kota_asalArgs<ExtArgs>
    kota_tujuan?: boolean | standard$kota_tujuanArgs<ExtArgs>
    opd?: boolean | opdDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["standard"]>

  export type standardSelectScalar = {
    standard_id?: boolean
    standard_kode?: boolean
    standard_opd?: boolean
    standard_kota_asal?: boolean
    standard_kota_tujuan?: boolean
    standard_via?: boolean
    standard_kelas?: boolean
    standard_nominal?: boolean
    standard_created?: boolean
    standard_updated?: boolean
    standard_deleted?: boolean
  }

  export type standardInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kota_asal?: boolean | standard$kota_asalArgs<ExtArgs>
    kota_tujuan?: boolean | standard$kota_tujuanArgs<ExtArgs>
    opd?: boolean | opdDefaultArgs<ExtArgs>
  }


  export type $standardPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "standard"
    objects: {
      kota_asal: Prisma.$kotaPayload<ExtArgs> | null
      kota_tujuan: Prisma.$kotaPayload<ExtArgs> | null
      opd: Prisma.$opdPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      standard_id: number
      standard_kode: number
      standard_opd: number
      standard_kota_asal: number
      standard_kota_tujuan: number
      standard_via: number
      standard_kelas: number
      standard_nominal: number
      standard_created: Date
      standard_updated: Date
      standard_deleted: Date | null
    }, ExtArgs["result"]["standard"]>
    composites: {}
  }


  type standardGetPayload<S extends boolean | null | undefined | standardDefaultArgs> = $Result.GetResult<Prisma.$standardPayload, S>

  type standardCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<standardFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: StandardCountAggregateInputType | true
    }

  export interface standardDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['standard'], meta: { name: 'standard' } }
    /**
     * Find zero or one Standard that matches the filter.
     * @param {standardFindUniqueArgs} args - Arguments to find a Standard
     * @example
     * // Get one Standard
     * const standard = await prisma.standard.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends standardFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, standardFindUniqueArgs<ExtArgs>>
    ): Prisma__standardClient<$Result.GetResult<Prisma.$standardPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Standard that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {standardFindUniqueOrThrowArgs} args - Arguments to find a Standard
     * @example
     * // Get one Standard
     * const standard = await prisma.standard.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends standardFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, standardFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__standardClient<$Result.GetResult<Prisma.$standardPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Standard that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {standardFindFirstArgs} args - Arguments to find a Standard
     * @example
     * // Get one Standard
     * const standard = await prisma.standard.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends standardFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, standardFindFirstArgs<ExtArgs>>
    ): Prisma__standardClient<$Result.GetResult<Prisma.$standardPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Standard that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {standardFindFirstOrThrowArgs} args - Arguments to find a Standard
     * @example
     * // Get one Standard
     * const standard = await prisma.standard.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends standardFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, standardFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__standardClient<$Result.GetResult<Prisma.$standardPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Standards that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {standardFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Standards
     * const standards = await prisma.standard.findMany()
     * 
     * // Get first 10 Standards
     * const standards = await prisma.standard.findMany({ take: 10 })
     * 
     * // Only select the `standard_id`
     * const standardWithStandard_idOnly = await prisma.standard.findMany({ select: { standard_id: true } })
     * 
    **/
    findMany<T extends standardFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, standardFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$standardPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Standard.
     * @param {standardCreateArgs} args - Arguments to create a Standard.
     * @example
     * // Create one Standard
     * const Standard = await prisma.standard.create({
     *   data: {
     *     // ... data to create a Standard
     *   }
     * })
     * 
    **/
    create<T extends standardCreateArgs<ExtArgs>>(
      args: SelectSubset<T, standardCreateArgs<ExtArgs>>
    ): Prisma__standardClient<$Result.GetResult<Prisma.$standardPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Standards.
     *     @param {standardCreateManyArgs} args - Arguments to create many Standards.
     *     @example
     *     // Create many Standards
     *     const standard = await prisma.standard.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends standardCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, standardCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Standard.
     * @param {standardDeleteArgs} args - Arguments to delete one Standard.
     * @example
     * // Delete one Standard
     * const Standard = await prisma.standard.delete({
     *   where: {
     *     // ... filter to delete one Standard
     *   }
     * })
     * 
    **/
    delete<T extends standardDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, standardDeleteArgs<ExtArgs>>
    ): Prisma__standardClient<$Result.GetResult<Prisma.$standardPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Standard.
     * @param {standardUpdateArgs} args - Arguments to update one Standard.
     * @example
     * // Update one Standard
     * const standard = await prisma.standard.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends standardUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, standardUpdateArgs<ExtArgs>>
    ): Prisma__standardClient<$Result.GetResult<Prisma.$standardPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Standards.
     * @param {standardDeleteManyArgs} args - Arguments to filter Standards to delete.
     * @example
     * // Delete a few Standards
     * const { count } = await prisma.standard.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends standardDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, standardDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Standards.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {standardUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Standards
     * const standard = await prisma.standard.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends standardUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, standardUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Standard.
     * @param {standardUpsertArgs} args - Arguments to update or create a Standard.
     * @example
     * // Update or create a Standard
     * const standard = await prisma.standard.upsert({
     *   create: {
     *     // ... data to create a Standard
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Standard we want to update
     *   }
     * })
    **/
    upsert<T extends standardUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, standardUpsertArgs<ExtArgs>>
    ): Prisma__standardClient<$Result.GetResult<Prisma.$standardPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Standards.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {standardCountArgs} args - Arguments to filter Standards to count.
     * @example
     * // Count the number of Standards
     * const count = await prisma.standard.count({
     *   where: {
     *     // ... the filter for the Standards we want to count
     *   }
     * })
    **/
    count<T extends standardCountArgs>(
      args?: Subset<T, standardCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StandardCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Standard.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StandardAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StandardAggregateArgs>(args: Subset<T, StandardAggregateArgs>): Prisma.PrismaPromise<GetStandardAggregateType<T>>

    /**
     * Group by Standard.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {standardGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends standardGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: standardGroupByArgs['orderBy'] }
        : { orderBy?: standardGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, standardGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStandardGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the standard model
   */
  readonly fields: standardFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for standard.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__standardClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    kota_asal<T extends standard$kota_asalArgs<ExtArgs> = {}>(args?: Subset<T, standard$kota_asalArgs<ExtArgs>>): Prisma__kotaClient<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    kota_tujuan<T extends standard$kota_tujuanArgs<ExtArgs> = {}>(args?: Subset<T, standard$kota_tujuanArgs<ExtArgs>>): Prisma__kotaClient<$Result.GetResult<Prisma.$kotaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    opd<T extends opdDefaultArgs<ExtArgs> = {}>(args?: Subset<T, opdDefaultArgs<ExtArgs>>): Prisma__opdClient<$Result.GetResult<Prisma.$opdPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the standard model
   */ 
  interface standardFieldRefs {
    readonly standard_id: FieldRef<"standard", 'Int'>
    readonly standard_kode: FieldRef<"standard", 'Int'>
    readonly standard_opd: FieldRef<"standard", 'Int'>
    readonly standard_kota_asal: FieldRef<"standard", 'Int'>
    readonly standard_kota_tujuan: FieldRef<"standard", 'Int'>
    readonly standard_via: FieldRef<"standard", 'Int'>
    readonly standard_kelas: FieldRef<"standard", 'Int'>
    readonly standard_nominal: FieldRef<"standard", 'Int'>
    readonly standard_created: FieldRef<"standard", 'DateTime'>
    readonly standard_updated: FieldRef<"standard", 'DateTime'>
    readonly standard_deleted: FieldRef<"standard", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * standard findUnique
   */
  export type standardFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the standard
     */
    select?: standardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: standardInclude<ExtArgs> | null
    /**
     * Filter, which standard to fetch.
     */
    where: standardWhereUniqueInput
  }


  /**
   * standard findUniqueOrThrow
   */
  export type standardFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the standard
     */
    select?: standardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: standardInclude<ExtArgs> | null
    /**
     * Filter, which standard to fetch.
     */
    where: standardWhereUniqueInput
  }


  /**
   * standard findFirst
   */
  export type standardFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the standard
     */
    select?: standardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: standardInclude<ExtArgs> | null
    /**
     * Filter, which standard to fetch.
     */
    where?: standardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of standards to fetch.
     */
    orderBy?: standardOrderByWithRelationInput | standardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for standards.
     */
    cursor?: standardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` standards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` standards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of standards.
     */
    distinct?: StandardScalarFieldEnum | StandardScalarFieldEnum[]
  }


  /**
   * standard findFirstOrThrow
   */
  export type standardFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the standard
     */
    select?: standardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: standardInclude<ExtArgs> | null
    /**
     * Filter, which standard to fetch.
     */
    where?: standardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of standards to fetch.
     */
    orderBy?: standardOrderByWithRelationInput | standardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for standards.
     */
    cursor?: standardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` standards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` standards.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of standards.
     */
    distinct?: StandardScalarFieldEnum | StandardScalarFieldEnum[]
  }


  /**
   * standard findMany
   */
  export type standardFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the standard
     */
    select?: standardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: standardInclude<ExtArgs> | null
    /**
     * Filter, which standards to fetch.
     */
    where?: standardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of standards to fetch.
     */
    orderBy?: standardOrderByWithRelationInput | standardOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing standards.
     */
    cursor?: standardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` standards from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` standards.
     */
    skip?: number
    distinct?: StandardScalarFieldEnum | StandardScalarFieldEnum[]
  }


  /**
   * standard create
   */
  export type standardCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the standard
     */
    select?: standardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: standardInclude<ExtArgs> | null
    /**
     * The data needed to create a standard.
     */
    data: XOR<standardCreateInput, standardUncheckedCreateInput>
  }


  /**
   * standard createMany
   */
  export type standardCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many standards.
     */
    data: standardCreateManyInput | standardCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * standard update
   */
  export type standardUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the standard
     */
    select?: standardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: standardInclude<ExtArgs> | null
    /**
     * The data needed to update a standard.
     */
    data: XOR<standardUpdateInput, standardUncheckedUpdateInput>
    /**
     * Choose, which standard to update.
     */
    where: standardWhereUniqueInput
  }


  /**
   * standard updateMany
   */
  export type standardUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update standards.
     */
    data: XOR<standardUpdateManyMutationInput, standardUncheckedUpdateManyInput>
    /**
     * Filter which standards to update
     */
    where?: standardWhereInput
  }


  /**
   * standard upsert
   */
  export type standardUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the standard
     */
    select?: standardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: standardInclude<ExtArgs> | null
    /**
     * The filter to search for the standard to update in case it exists.
     */
    where: standardWhereUniqueInput
    /**
     * In case the standard found by the `where` argument doesn't exist, create a new standard with this data.
     */
    create: XOR<standardCreateInput, standardUncheckedCreateInput>
    /**
     * In case the standard was found with the provided `where` argument, update it with this data.
     */
    update: XOR<standardUpdateInput, standardUncheckedUpdateInput>
  }


  /**
   * standard delete
   */
  export type standardDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the standard
     */
    select?: standardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: standardInclude<ExtArgs> | null
    /**
     * Filter which standard to delete.
     */
    where: standardWhereUniqueInput
  }


  /**
   * standard deleteMany
   */
  export type standardDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which standards to delete
     */
    where?: standardWhereInput
  }


  /**
   * standard.kota_asal
   */
  export type standard$kota_asalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
    where?: kotaWhereInput
  }


  /**
   * standard.kota_tujuan
   */
  export type standard$kota_tujuanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the kota
     */
    select?: kotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: kotaInclude<ExtArgs> | null
    where?: kotaWhereInput
  }


  /**
   * standard without action
   */
  export type standardDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the standard
     */
    select?: standardSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: standardInclude<ExtArgs> | null
  }



  /**
   * Model bank
   */

  export type AggregateBank = {
    _count: BankCountAggregateOutputType | null
    _avg: BankAvgAggregateOutputType | null
    _sum: BankSumAggregateOutputType | null
    _min: BankMinAggregateOutputType | null
    _max: BankMaxAggregateOutputType | null
  }

  export type BankAvgAggregateOutputType = {
    bank_user: number | null
    bank_name: number | null
  }

  export type BankSumAggregateOutputType = {
    bank_user: number | null
    bank_name: number | null
  }

  export type BankMinAggregateOutputType = {
    bank_user: number | null
    bank_name: number | null
    bank_account: string | null
    bank_number: string | null
  }

  export type BankMaxAggregateOutputType = {
    bank_user: number | null
    bank_name: number | null
    bank_account: string | null
    bank_number: string | null
  }

  export type BankCountAggregateOutputType = {
    bank_user: number
    bank_name: number
    bank_account: number
    bank_number: number
    _all: number
  }


  export type BankAvgAggregateInputType = {
    bank_user?: true
    bank_name?: true
  }

  export type BankSumAggregateInputType = {
    bank_user?: true
    bank_name?: true
  }

  export type BankMinAggregateInputType = {
    bank_user?: true
    bank_name?: true
    bank_account?: true
    bank_number?: true
  }

  export type BankMaxAggregateInputType = {
    bank_user?: true
    bank_name?: true
    bank_account?: true
    bank_number?: true
  }

  export type BankCountAggregateInputType = {
    bank_user?: true
    bank_name?: true
    bank_account?: true
    bank_number?: true
    _all?: true
  }

  export type BankAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bank to aggregate.
     */
    where?: bankWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of banks to fetch.
     */
    orderBy?: bankOrderByWithRelationInput | bankOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: bankWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` banks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` banks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned banks
    **/
    _count?: true | BankCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BankAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BankSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BankMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BankMaxAggregateInputType
  }

  export type GetBankAggregateType<T extends BankAggregateArgs> = {
        [P in keyof T & keyof AggregateBank]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBank[P]>
      : GetScalarType<T[P], AggregateBank[P]>
  }




  export type bankGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bankWhereInput
    orderBy?: bankOrderByWithAggregationInput | bankOrderByWithAggregationInput[]
    by: BankScalarFieldEnum[] | BankScalarFieldEnum
    having?: bankScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BankCountAggregateInputType | true
    _avg?: BankAvgAggregateInputType
    _sum?: BankSumAggregateInputType
    _min?: BankMinAggregateInputType
    _max?: BankMaxAggregateInputType
  }

  export type BankGroupByOutputType = {
    bank_user: number
    bank_name: number
    bank_account: string
    bank_number: string
    _count: BankCountAggregateOutputType | null
    _avg: BankAvgAggregateOutputType | null
    _sum: BankSumAggregateOutputType | null
    _min: BankMinAggregateOutputType | null
    _max: BankMaxAggregateOutputType | null
  }

  type GetBankGroupByPayload<T extends bankGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BankGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BankGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BankGroupByOutputType[P]>
            : GetScalarType<T[P], BankGroupByOutputType[P]>
        }
      >
    >


  export type bankSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    bank_user?: boolean
    bank_name?: boolean
    bank_account?: boolean
    bank_number?: boolean
    user?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bank"]>

  export type bankSelectScalar = {
    bank_user?: boolean
    bank_name?: boolean
    bank_account?: boolean
    bank_number?: boolean
  }

  export type bankInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | usersDefaultArgs<ExtArgs>
  }


  export type $bankPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "bank"
    objects: {
      user: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      bank_user: number
      bank_name: number
      bank_account: string
      bank_number: string
    }, ExtArgs["result"]["bank"]>
    composites: {}
  }


  type bankGetPayload<S extends boolean | null | undefined | bankDefaultArgs> = $Result.GetResult<Prisma.$bankPayload, S>

  type bankCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<bankFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BankCountAggregateInputType | true
    }

  export interface bankDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['bank'], meta: { name: 'bank' } }
    /**
     * Find zero or one Bank that matches the filter.
     * @param {bankFindUniqueArgs} args - Arguments to find a Bank
     * @example
     * // Get one Bank
     * const bank = await prisma.bank.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends bankFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, bankFindUniqueArgs<ExtArgs>>
    ): Prisma__bankClient<$Result.GetResult<Prisma.$bankPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Bank that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {bankFindUniqueOrThrowArgs} args - Arguments to find a Bank
     * @example
     * // Get one Bank
     * const bank = await prisma.bank.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends bankFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, bankFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__bankClient<$Result.GetResult<Prisma.$bankPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Bank that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bankFindFirstArgs} args - Arguments to find a Bank
     * @example
     * // Get one Bank
     * const bank = await prisma.bank.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends bankFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, bankFindFirstArgs<ExtArgs>>
    ): Prisma__bankClient<$Result.GetResult<Prisma.$bankPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Bank that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bankFindFirstOrThrowArgs} args - Arguments to find a Bank
     * @example
     * // Get one Bank
     * const bank = await prisma.bank.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends bankFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, bankFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__bankClient<$Result.GetResult<Prisma.$bankPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Banks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bankFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Banks
     * const banks = await prisma.bank.findMany()
     * 
     * // Get first 10 Banks
     * const banks = await prisma.bank.findMany({ take: 10 })
     * 
     * // Only select the `bank_user`
     * const bankWithBank_userOnly = await prisma.bank.findMany({ select: { bank_user: true } })
     * 
    **/
    findMany<T extends bankFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, bankFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bankPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Bank.
     * @param {bankCreateArgs} args - Arguments to create a Bank.
     * @example
     * // Create one Bank
     * const Bank = await prisma.bank.create({
     *   data: {
     *     // ... data to create a Bank
     *   }
     * })
     * 
    **/
    create<T extends bankCreateArgs<ExtArgs>>(
      args: SelectSubset<T, bankCreateArgs<ExtArgs>>
    ): Prisma__bankClient<$Result.GetResult<Prisma.$bankPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Banks.
     *     @param {bankCreateManyArgs} args - Arguments to create many Banks.
     *     @example
     *     // Create many Banks
     *     const bank = await prisma.bank.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends bankCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, bankCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Bank.
     * @param {bankDeleteArgs} args - Arguments to delete one Bank.
     * @example
     * // Delete one Bank
     * const Bank = await prisma.bank.delete({
     *   where: {
     *     // ... filter to delete one Bank
     *   }
     * })
     * 
    **/
    delete<T extends bankDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, bankDeleteArgs<ExtArgs>>
    ): Prisma__bankClient<$Result.GetResult<Prisma.$bankPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Bank.
     * @param {bankUpdateArgs} args - Arguments to update one Bank.
     * @example
     * // Update one Bank
     * const bank = await prisma.bank.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends bankUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, bankUpdateArgs<ExtArgs>>
    ): Prisma__bankClient<$Result.GetResult<Prisma.$bankPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Banks.
     * @param {bankDeleteManyArgs} args - Arguments to filter Banks to delete.
     * @example
     * // Delete a few Banks
     * const { count } = await prisma.bank.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends bankDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, bankDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Banks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bankUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Banks
     * const bank = await prisma.bank.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends bankUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, bankUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Bank.
     * @param {bankUpsertArgs} args - Arguments to update or create a Bank.
     * @example
     * // Update or create a Bank
     * const bank = await prisma.bank.upsert({
     *   create: {
     *     // ... data to create a Bank
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Bank we want to update
     *   }
     * })
    **/
    upsert<T extends bankUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, bankUpsertArgs<ExtArgs>>
    ): Prisma__bankClient<$Result.GetResult<Prisma.$bankPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Banks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bankCountArgs} args - Arguments to filter Banks to count.
     * @example
     * // Count the number of Banks
     * const count = await prisma.bank.count({
     *   where: {
     *     // ... the filter for the Banks we want to count
     *   }
     * })
    **/
    count<T extends bankCountArgs>(
      args?: Subset<T, bankCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BankCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Bank.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BankAggregateArgs>(args: Subset<T, BankAggregateArgs>): Prisma.PrismaPromise<GetBankAggregateType<T>>

    /**
     * Group by Bank.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bankGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends bankGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: bankGroupByArgs['orderBy'] }
        : { orderBy?: bankGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, bankGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBankGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the bank model
   */
  readonly fields: bankFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for bank.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__bankClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the bank model
   */ 
  interface bankFieldRefs {
    readonly bank_user: FieldRef<"bank", 'Int'>
    readonly bank_name: FieldRef<"bank", 'Int'>
    readonly bank_account: FieldRef<"bank", 'String'>
    readonly bank_number: FieldRef<"bank", 'String'>
  }
    

  // Custom InputTypes

  /**
   * bank findUnique
   */
  export type bankFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank
     */
    select?: bankSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bankInclude<ExtArgs> | null
    /**
     * Filter, which bank to fetch.
     */
    where: bankWhereUniqueInput
  }


  /**
   * bank findUniqueOrThrow
   */
  export type bankFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank
     */
    select?: bankSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bankInclude<ExtArgs> | null
    /**
     * Filter, which bank to fetch.
     */
    where: bankWhereUniqueInput
  }


  /**
   * bank findFirst
   */
  export type bankFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank
     */
    select?: bankSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bankInclude<ExtArgs> | null
    /**
     * Filter, which bank to fetch.
     */
    where?: bankWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of banks to fetch.
     */
    orderBy?: bankOrderByWithRelationInput | bankOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for banks.
     */
    cursor?: bankWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` banks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` banks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of banks.
     */
    distinct?: BankScalarFieldEnum | BankScalarFieldEnum[]
  }


  /**
   * bank findFirstOrThrow
   */
  export type bankFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank
     */
    select?: bankSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bankInclude<ExtArgs> | null
    /**
     * Filter, which bank to fetch.
     */
    where?: bankWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of banks to fetch.
     */
    orderBy?: bankOrderByWithRelationInput | bankOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for banks.
     */
    cursor?: bankWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` banks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` banks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of banks.
     */
    distinct?: BankScalarFieldEnum | BankScalarFieldEnum[]
  }


  /**
   * bank findMany
   */
  export type bankFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank
     */
    select?: bankSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bankInclude<ExtArgs> | null
    /**
     * Filter, which banks to fetch.
     */
    where?: bankWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of banks to fetch.
     */
    orderBy?: bankOrderByWithRelationInput | bankOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing banks.
     */
    cursor?: bankWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` banks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` banks.
     */
    skip?: number
    distinct?: BankScalarFieldEnum | BankScalarFieldEnum[]
  }


  /**
   * bank create
   */
  export type bankCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank
     */
    select?: bankSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bankInclude<ExtArgs> | null
    /**
     * The data needed to create a bank.
     */
    data: XOR<bankCreateInput, bankUncheckedCreateInput>
  }


  /**
   * bank createMany
   */
  export type bankCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many banks.
     */
    data: bankCreateManyInput | bankCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * bank update
   */
  export type bankUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank
     */
    select?: bankSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bankInclude<ExtArgs> | null
    /**
     * The data needed to update a bank.
     */
    data: XOR<bankUpdateInput, bankUncheckedUpdateInput>
    /**
     * Choose, which bank to update.
     */
    where: bankWhereUniqueInput
  }


  /**
   * bank updateMany
   */
  export type bankUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update banks.
     */
    data: XOR<bankUpdateManyMutationInput, bankUncheckedUpdateManyInput>
    /**
     * Filter which banks to update
     */
    where?: bankWhereInput
  }


  /**
   * bank upsert
   */
  export type bankUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank
     */
    select?: bankSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bankInclude<ExtArgs> | null
    /**
     * The filter to search for the bank to update in case it exists.
     */
    where: bankWhereUniqueInput
    /**
     * In case the bank found by the `where` argument doesn't exist, create a new bank with this data.
     */
    create: XOR<bankCreateInput, bankUncheckedCreateInput>
    /**
     * In case the bank was found with the provided `where` argument, update it with this data.
     */
    update: XOR<bankUpdateInput, bankUncheckedUpdateInput>
  }


  /**
   * bank delete
   */
  export type bankDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank
     */
    select?: bankSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bankInclude<ExtArgs> | null
    /**
     * Filter which bank to delete.
     */
    where: bankWhereUniqueInput
  }


  /**
   * bank deleteMany
   */
  export type bankDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which banks to delete
     */
    where?: bankWhereInput
  }


  /**
   * bank without action
   */
  export type bankDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bank
     */
    select?: bankSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bankInclude<ExtArgs> | null
  }



  /**
   * Model tunjangan_potongan
   */

  export type AggregateTunjangan_potongan = {
    _count: Tunjangan_potonganCountAggregateOutputType | null
    _avg: Tunjangan_potonganAvgAggregateOutputType | null
    _sum: Tunjangan_potonganSumAggregateOutputType | null
    _min: Tunjangan_potonganMinAggregateOutputType | null
    _max: Tunjangan_potonganMaxAggregateOutputType | null
  }

  export type Tunjangan_potonganAvgAggregateOutputType = {
    tp_id: number | null
    tp_jenis: number | null
    tp_urutan: number | null
    tp_kelompok: number | null
  }

  export type Tunjangan_potonganSumAggregateOutputType = {
    tp_id: number | null
    tp_jenis: number | null
    tp_urutan: number | null
    tp_kelompok: number | null
  }

  export type Tunjangan_potonganMinAggregateOutputType = {
    tp_id: number | null
    tp_jenis: number | null
    tp_nama: string | null
    tp_urutan: number | null
    tp_kelompok: number | null
    tp_created: Date | null
    tp_update: Date | null
    tp_deleted: Date | null
  }

  export type Tunjangan_potonganMaxAggregateOutputType = {
    tp_id: number | null
    tp_jenis: number | null
    tp_nama: string | null
    tp_urutan: number | null
    tp_kelompok: number | null
    tp_created: Date | null
    tp_update: Date | null
    tp_deleted: Date | null
  }

  export type Tunjangan_potonganCountAggregateOutputType = {
    tp_id: number
    tp_jenis: number
    tp_nama: number
    tp_urutan: number
    tp_kelompok: number
    tp_created: number
    tp_update: number
    tp_deleted: number
    _all: number
  }


  export type Tunjangan_potonganAvgAggregateInputType = {
    tp_id?: true
    tp_jenis?: true
    tp_urutan?: true
    tp_kelompok?: true
  }

  export type Tunjangan_potonganSumAggregateInputType = {
    tp_id?: true
    tp_jenis?: true
    tp_urutan?: true
    tp_kelompok?: true
  }

  export type Tunjangan_potonganMinAggregateInputType = {
    tp_id?: true
    tp_jenis?: true
    tp_nama?: true
    tp_urutan?: true
    tp_kelompok?: true
    tp_created?: true
    tp_update?: true
    tp_deleted?: true
  }

  export type Tunjangan_potonganMaxAggregateInputType = {
    tp_id?: true
    tp_jenis?: true
    tp_nama?: true
    tp_urutan?: true
    tp_kelompok?: true
    tp_created?: true
    tp_update?: true
    tp_deleted?: true
  }

  export type Tunjangan_potonganCountAggregateInputType = {
    tp_id?: true
    tp_jenis?: true
    tp_nama?: true
    tp_urutan?: true
    tp_kelompok?: true
    tp_created?: true
    tp_update?: true
    tp_deleted?: true
    _all?: true
  }

  export type Tunjangan_potonganAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tunjangan_potongan to aggregate.
     */
    where?: tunjangan_potonganWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tunjangan_potongans to fetch.
     */
    orderBy?: tunjangan_potonganOrderByWithRelationInput | tunjangan_potonganOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tunjangan_potonganWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tunjangan_potongans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tunjangan_potongans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tunjangan_potongans
    **/
    _count?: true | Tunjangan_potonganCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tunjangan_potonganAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tunjangan_potonganSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tunjangan_potonganMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tunjangan_potonganMaxAggregateInputType
  }

  export type GetTunjangan_potonganAggregateType<T extends Tunjangan_potonganAggregateArgs> = {
        [P in keyof T & keyof AggregateTunjangan_potongan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTunjangan_potongan[P]>
      : GetScalarType<T[P], AggregateTunjangan_potongan[P]>
  }




  export type tunjangan_potonganGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tunjangan_potonganWhereInput
    orderBy?: tunjangan_potonganOrderByWithAggregationInput | tunjangan_potonganOrderByWithAggregationInput[]
    by: Tunjangan_potonganScalarFieldEnum[] | Tunjangan_potonganScalarFieldEnum
    having?: tunjangan_potonganScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tunjangan_potonganCountAggregateInputType | true
    _avg?: Tunjangan_potonganAvgAggregateInputType
    _sum?: Tunjangan_potonganSumAggregateInputType
    _min?: Tunjangan_potonganMinAggregateInputType
    _max?: Tunjangan_potonganMaxAggregateInputType
  }

  export type Tunjangan_potonganGroupByOutputType = {
    tp_id: number
    tp_jenis: number
    tp_nama: string
    tp_urutan: number
    tp_kelompok: number
    tp_created: Date
    tp_update: Date
    tp_deleted: Date | null
    _count: Tunjangan_potonganCountAggregateOutputType | null
    _avg: Tunjangan_potonganAvgAggregateOutputType | null
    _sum: Tunjangan_potonganSumAggregateOutputType | null
    _min: Tunjangan_potonganMinAggregateOutputType | null
    _max: Tunjangan_potonganMaxAggregateOutputType | null
  }

  type GetTunjangan_potonganGroupByPayload<T extends tunjangan_potonganGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tunjangan_potonganGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tunjangan_potonganGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tunjangan_potonganGroupByOutputType[P]>
            : GetScalarType<T[P], Tunjangan_potonganGroupByOutputType[P]>
        }
      >
    >


  export type tunjangan_potonganSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tp_id?: boolean
    tp_jenis?: boolean
    tp_nama?: boolean
    tp_urutan?: boolean
    tp_kelompok?: boolean
    tp_created?: boolean
    tp_update?: boolean
    tp_deleted?: boolean
    gajian?: boolean | tunjangan_potongan$gajianArgs<ExtArgs>
    _count?: boolean | Tunjangan_potonganCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tunjangan_potongan"]>

  export type tunjangan_potonganSelectScalar = {
    tp_id?: boolean
    tp_jenis?: boolean
    tp_nama?: boolean
    tp_urutan?: boolean
    tp_kelompok?: boolean
    tp_created?: boolean
    tp_update?: boolean
    tp_deleted?: boolean
  }

  export type tunjangan_potonganInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    gajian?: boolean | tunjangan_potongan$gajianArgs<ExtArgs>
    _count?: boolean | Tunjangan_potonganCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tunjangan_potonganPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tunjangan_potongan"
    objects: {
      gajian: Prisma.$gajianPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      tp_id: number
      tp_jenis: number
      tp_nama: string
      tp_urutan: number
      tp_kelompok: number
      tp_created: Date
      tp_update: Date
      tp_deleted: Date | null
    }, ExtArgs["result"]["tunjangan_potongan"]>
    composites: {}
  }


  type tunjangan_potonganGetPayload<S extends boolean | null | undefined | tunjangan_potonganDefaultArgs> = $Result.GetResult<Prisma.$tunjangan_potonganPayload, S>

  type tunjangan_potonganCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tunjangan_potonganFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tunjangan_potonganCountAggregateInputType | true
    }

  export interface tunjangan_potonganDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tunjangan_potongan'], meta: { name: 'tunjangan_potongan' } }
    /**
     * Find zero or one Tunjangan_potongan that matches the filter.
     * @param {tunjangan_potonganFindUniqueArgs} args - Arguments to find a Tunjangan_potongan
     * @example
     * // Get one Tunjangan_potongan
     * const tunjangan_potongan = await prisma.tunjangan_potongan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tunjangan_potonganFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tunjangan_potonganFindUniqueArgs<ExtArgs>>
    ): Prisma__tunjangan_potonganClient<$Result.GetResult<Prisma.$tunjangan_potonganPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tunjangan_potongan that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tunjangan_potonganFindUniqueOrThrowArgs} args - Arguments to find a Tunjangan_potongan
     * @example
     * // Get one Tunjangan_potongan
     * const tunjangan_potongan = await prisma.tunjangan_potongan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tunjangan_potonganFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tunjangan_potonganFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tunjangan_potonganClient<$Result.GetResult<Prisma.$tunjangan_potonganPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tunjangan_potongan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tunjangan_potonganFindFirstArgs} args - Arguments to find a Tunjangan_potongan
     * @example
     * // Get one Tunjangan_potongan
     * const tunjangan_potongan = await prisma.tunjangan_potongan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tunjangan_potonganFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tunjangan_potonganFindFirstArgs<ExtArgs>>
    ): Prisma__tunjangan_potonganClient<$Result.GetResult<Prisma.$tunjangan_potonganPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tunjangan_potongan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tunjangan_potonganFindFirstOrThrowArgs} args - Arguments to find a Tunjangan_potongan
     * @example
     * // Get one Tunjangan_potongan
     * const tunjangan_potongan = await prisma.tunjangan_potongan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tunjangan_potonganFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tunjangan_potonganFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tunjangan_potonganClient<$Result.GetResult<Prisma.$tunjangan_potonganPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tunjangan_potongans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tunjangan_potonganFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tunjangan_potongans
     * const tunjangan_potongans = await prisma.tunjangan_potongan.findMany()
     * 
     * // Get first 10 Tunjangan_potongans
     * const tunjangan_potongans = await prisma.tunjangan_potongan.findMany({ take: 10 })
     * 
     * // Only select the `tp_id`
     * const tunjangan_potonganWithTp_idOnly = await prisma.tunjangan_potongan.findMany({ select: { tp_id: true } })
     * 
    **/
    findMany<T extends tunjangan_potonganFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tunjangan_potonganFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tunjangan_potonganPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tunjangan_potongan.
     * @param {tunjangan_potonganCreateArgs} args - Arguments to create a Tunjangan_potongan.
     * @example
     * // Create one Tunjangan_potongan
     * const Tunjangan_potongan = await prisma.tunjangan_potongan.create({
     *   data: {
     *     // ... data to create a Tunjangan_potongan
     *   }
     * })
     * 
    **/
    create<T extends tunjangan_potonganCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tunjangan_potonganCreateArgs<ExtArgs>>
    ): Prisma__tunjangan_potonganClient<$Result.GetResult<Prisma.$tunjangan_potonganPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tunjangan_potongans.
     *     @param {tunjangan_potonganCreateManyArgs} args - Arguments to create many Tunjangan_potongans.
     *     @example
     *     // Create many Tunjangan_potongans
     *     const tunjangan_potongan = await prisma.tunjangan_potongan.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tunjangan_potonganCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tunjangan_potonganCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tunjangan_potongan.
     * @param {tunjangan_potonganDeleteArgs} args - Arguments to delete one Tunjangan_potongan.
     * @example
     * // Delete one Tunjangan_potongan
     * const Tunjangan_potongan = await prisma.tunjangan_potongan.delete({
     *   where: {
     *     // ... filter to delete one Tunjangan_potongan
     *   }
     * })
     * 
    **/
    delete<T extends tunjangan_potonganDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tunjangan_potonganDeleteArgs<ExtArgs>>
    ): Prisma__tunjangan_potonganClient<$Result.GetResult<Prisma.$tunjangan_potonganPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tunjangan_potongan.
     * @param {tunjangan_potonganUpdateArgs} args - Arguments to update one Tunjangan_potongan.
     * @example
     * // Update one Tunjangan_potongan
     * const tunjangan_potongan = await prisma.tunjangan_potongan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tunjangan_potonganUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tunjangan_potonganUpdateArgs<ExtArgs>>
    ): Prisma__tunjangan_potonganClient<$Result.GetResult<Prisma.$tunjangan_potonganPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tunjangan_potongans.
     * @param {tunjangan_potonganDeleteManyArgs} args - Arguments to filter Tunjangan_potongans to delete.
     * @example
     * // Delete a few Tunjangan_potongans
     * const { count } = await prisma.tunjangan_potongan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tunjangan_potonganDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tunjangan_potonganDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tunjangan_potongans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tunjangan_potonganUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tunjangan_potongans
     * const tunjangan_potongan = await prisma.tunjangan_potongan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tunjangan_potonganUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tunjangan_potonganUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tunjangan_potongan.
     * @param {tunjangan_potonganUpsertArgs} args - Arguments to update or create a Tunjangan_potongan.
     * @example
     * // Update or create a Tunjangan_potongan
     * const tunjangan_potongan = await prisma.tunjangan_potongan.upsert({
     *   create: {
     *     // ... data to create a Tunjangan_potongan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tunjangan_potongan we want to update
     *   }
     * })
    **/
    upsert<T extends tunjangan_potonganUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tunjangan_potonganUpsertArgs<ExtArgs>>
    ): Prisma__tunjangan_potonganClient<$Result.GetResult<Prisma.$tunjangan_potonganPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tunjangan_potongans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tunjangan_potonganCountArgs} args - Arguments to filter Tunjangan_potongans to count.
     * @example
     * // Count the number of Tunjangan_potongans
     * const count = await prisma.tunjangan_potongan.count({
     *   where: {
     *     // ... the filter for the Tunjangan_potongans we want to count
     *   }
     * })
    **/
    count<T extends tunjangan_potonganCountArgs>(
      args?: Subset<T, tunjangan_potonganCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tunjangan_potonganCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tunjangan_potongan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tunjangan_potonganAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tunjangan_potonganAggregateArgs>(args: Subset<T, Tunjangan_potonganAggregateArgs>): Prisma.PrismaPromise<GetTunjangan_potonganAggregateType<T>>

    /**
     * Group by Tunjangan_potongan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tunjangan_potonganGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tunjangan_potonganGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tunjangan_potonganGroupByArgs['orderBy'] }
        : { orderBy?: tunjangan_potonganGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tunjangan_potonganGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTunjangan_potonganGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tunjangan_potongan model
   */
  readonly fields: tunjangan_potonganFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tunjangan_potongan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tunjangan_potonganClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    gajian<T extends tunjangan_potongan$gajianArgs<ExtArgs> = {}>(args?: Subset<T, tunjangan_potongan$gajianArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gajianPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tunjangan_potongan model
   */ 
  interface tunjangan_potonganFieldRefs {
    readonly tp_id: FieldRef<"tunjangan_potongan", 'Int'>
    readonly tp_jenis: FieldRef<"tunjangan_potongan", 'Int'>
    readonly tp_nama: FieldRef<"tunjangan_potongan", 'String'>
    readonly tp_urutan: FieldRef<"tunjangan_potongan", 'Int'>
    readonly tp_kelompok: FieldRef<"tunjangan_potongan", 'Int'>
    readonly tp_created: FieldRef<"tunjangan_potongan", 'DateTime'>
    readonly tp_update: FieldRef<"tunjangan_potongan", 'DateTime'>
    readonly tp_deleted: FieldRef<"tunjangan_potongan", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * tunjangan_potongan findUnique
   */
  export type tunjangan_potonganFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tunjangan_potongan
     */
    select?: tunjangan_potonganSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tunjangan_potonganInclude<ExtArgs> | null
    /**
     * Filter, which tunjangan_potongan to fetch.
     */
    where: tunjangan_potonganWhereUniqueInput
  }


  /**
   * tunjangan_potongan findUniqueOrThrow
   */
  export type tunjangan_potonganFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tunjangan_potongan
     */
    select?: tunjangan_potonganSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tunjangan_potonganInclude<ExtArgs> | null
    /**
     * Filter, which tunjangan_potongan to fetch.
     */
    where: tunjangan_potonganWhereUniqueInput
  }


  /**
   * tunjangan_potongan findFirst
   */
  export type tunjangan_potonganFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tunjangan_potongan
     */
    select?: tunjangan_potonganSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tunjangan_potonganInclude<ExtArgs> | null
    /**
     * Filter, which tunjangan_potongan to fetch.
     */
    where?: tunjangan_potonganWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tunjangan_potongans to fetch.
     */
    orderBy?: tunjangan_potonganOrderByWithRelationInput | tunjangan_potonganOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tunjangan_potongans.
     */
    cursor?: tunjangan_potonganWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tunjangan_potongans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tunjangan_potongans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tunjangan_potongans.
     */
    distinct?: Tunjangan_potonganScalarFieldEnum | Tunjangan_potonganScalarFieldEnum[]
  }


  /**
   * tunjangan_potongan findFirstOrThrow
   */
  export type tunjangan_potonganFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tunjangan_potongan
     */
    select?: tunjangan_potonganSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tunjangan_potonganInclude<ExtArgs> | null
    /**
     * Filter, which tunjangan_potongan to fetch.
     */
    where?: tunjangan_potonganWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tunjangan_potongans to fetch.
     */
    orderBy?: tunjangan_potonganOrderByWithRelationInput | tunjangan_potonganOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tunjangan_potongans.
     */
    cursor?: tunjangan_potonganWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tunjangan_potongans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tunjangan_potongans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tunjangan_potongans.
     */
    distinct?: Tunjangan_potonganScalarFieldEnum | Tunjangan_potonganScalarFieldEnum[]
  }


  /**
   * tunjangan_potongan findMany
   */
  export type tunjangan_potonganFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tunjangan_potongan
     */
    select?: tunjangan_potonganSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tunjangan_potonganInclude<ExtArgs> | null
    /**
     * Filter, which tunjangan_potongans to fetch.
     */
    where?: tunjangan_potonganWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tunjangan_potongans to fetch.
     */
    orderBy?: tunjangan_potonganOrderByWithRelationInput | tunjangan_potonganOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tunjangan_potongans.
     */
    cursor?: tunjangan_potonganWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tunjangan_potongans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tunjangan_potongans.
     */
    skip?: number
    distinct?: Tunjangan_potonganScalarFieldEnum | Tunjangan_potonganScalarFieldEnum[]
  }


  /**
   * tunjangan_potongan create
   */
  export type tunjangan_potonganCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tunjangan_potongan
     */
    select?: tunjangan_potonganSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tunjangan_potonganInclude<ExtArgs> | null
    /**
     * The data needed to create a tunjangan_potongan.
     */
    data: XOR<tunjangan_potonganCreateInput, tunjangan_potonganUncheckedCreateInput>
  }


  /**
   * tunjangan_potongan createMany
   */
  export type tunjangan_potonganCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tunjangan_potongans.
     */
    data: tunjangan_potonganCreateManyInput | tunjangan_potonganCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tunjangan_potongan update
   */
  export type tunjangan_potonganUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tunjangan_potongan
     */
    select?: tunjangan_potonganSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tunjangan_potonganInclude<ExtArgs> | null
    /**
     * The data needed to update a tunjangan_potongan.
     */
    data: XOR<tunjangan_potonganUpdateInput, tunjangan_potonganUncheckedUpdateInput>
    /**
     * Choose, which tunjangan_potongan to update.
     */
    where: tunjangan_potonganWhereUniqueInput
  }


  /**
   * tunjangan_potongan updateMany
   */
  export type tunjangan_potonganUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tunjangan_potongans.
     */
    data: XOR<tunjangan_potonganUpdateManyMutationInput, tunjangan_potonganUncheckedUpdateManyInput>
    /**
     * Filter which tunjangan_potongans to update
     */
    where?: tunjangan_potonganWhereInput
  }


  /**
   * tunjangan_potongan upsert
   */
  export type tunjangan_potonganUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tunjangan_potongan
     */
    select?: tunjangan_potonganSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tunjangan_potonganInclude<ExtArgs> | null
    /**
     * The filter to search for the tunjangan_potongan to update in case it exists.
     */
    where: tunjangan_potonganWhereUniqueInput
    /**
     * In case the tunjangan_potongan found by the `where` argument doesn't exist, create a new tunjangan_potongan with this data.
     */
    create: XOR<tunjangan_potonganCreateInput, tunjangan_potonganUncheckedCreateInput>
    /**
     * In case the tunjangan_potongan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tunjangan_potonganUpdateInput, tunjangan_potonganUncheckedUpdateInput>
  }


  /**
   * tunjangan_potongan delete
   */
  export type tunjangan_potonganDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tunjangan_potongan
     */
    select?: tunjangan_potonganSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tunjangan_potonganInclude<ExtArgs> | null
    /**
     * Filter which tunjangan_potongan to delete.
     */
    where: tunjangan_potonganWhereUniqueInput
  }


  /**
   * tunjangan_potongan deleteMany
   */
  export type tunjangan_potonganDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tunjangan_potongans to delete
     */
    where?: tunjangan_potonganWhereInput
  }


  /**
   * tunjangan_potongan.gajian
   */
  export type tunjangan_potongan$gajianArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gajian
     */
    select?: gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gajianInclude<ExtArgs> | null
    where?: gajianWhereInput
    orderBy?: gajianOrderByWithRelationInput | gajianOrderByWithRelationInput[]
    cursor?: gajianWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GajianScalarFieldEnum | GajianScalarFieldEnum[]
  }


  /**
   * tunjangan_potongan without action
   */
  export type tunjangan_potonganDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tunjangan_potongan
     */
    select?: tunjangan_potonganSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tunjangan_potonganInclude<ExtArgs> | null
  }



  /**
   * Model gajian
   */

  export type AggregateGajian = {
    _count: GajianCountAggregateOutputType | null
    _avg: GajianAvgAggregateOutputType | null
    _sum: GajianSumAggregateOutputType | null
    _min: GajianMinAggregateOutputType | null
    _max: GajianMaxAggregateOutputType | null
  }

  export type GajianAvgAggregateOutputType = {
    gajian_id: number | null
    gajian_pegawai: number | null
    gajian_bulan: number | null
    gajian_tahun: number | null
    gajian_tunjangan_potongan: number | null
    gajian_nominal: number | null
  }

  export type GajianSumAggregateOutputType = {
    gajian_id: number | null
    gajian_pegawai: number | null
    gajian_bulan: number | null
    gajian_tahun: number | null
    gajian_tunjangan_potongan: number | null
    gajian_nominal: number | null
  }

  export type GajianMinAggregateOutputType = {
    gajian_id: number | null
    gajian_pegawai: number | null
    gajian_bulan: number | null
    gajian_tahun: number | null
    gajian_tunjangan_potongan: number | null
    gajian_nominal: number | null
    gajian_created: Date | null
    gajian_updated: Date | null
    gajian_deleted: Date | null
  }

  export type GajianMaxAggregateOutputType = {
    gajian_id: number | null
    gajian_pegawai: number | null
    gajian_bulan: number | null
    gajian_tahun: number | null
    gajian_tunjangan_potongan: number | null
    gajian_nominal: number | null
    gajian_created: Date | null
    gajian_updated: Date | null
    gajian_deleted: Date | null
  }

  export type GajianCountAggregateOutputType = {
    gajian_id: number
    gajian_pegawai: number
    gajian_bulan: number
    gajian_tahun: number
    gajian_tunjangan_potongan: number
    gajian_nominal: number
    gajian_created: number
    gajian_updated: number
    gajian_deleted: number
    _all: number
  }


  export type GajianAvgAggregateInputType = {
    gajian_id?: true
    gajian_pegawai?: true
    gajian_bulan?: true
    gajian_tahun?: true
    gajian_tunjangan_potongan?: true
    gajian_nominal?: true
  }

  export type GajianSumAggregateInputType = {
    gajian_id?: true
    gajian_pegawai?: true
    gajian_bulan?: true
    gajian_tahun?: true
    gajian_tunjangan_potongan?: true
    gajian_nominal?: true
  }

  export type GajianMinAggregateInputType = {
    gajian_id?: true
    gajian_pegawai?: true
    gajian_bulan?: true
    gajian_tahun?: true
    gajian_tunjangan_potongan?: true
    gajian_nominal?: true
    gajian_created?: true
    gajian_updated?: true
    gajian_deleted?: true
  }

  export type GajianMaxAggregateInputType = {
    gajian_id?: true
    gajian_pegawai?: true
    gajian_bulan?: true
    gajian_tahun?: true
    gajian_tunjangan_potongan?: true
    gajian_nominal?: true
    gajian_created?: true
    gajian_updated?: true
    gajian_deleted?: true
  }

  export type GajianCountAggregateInputType = {
    gajian_id?: true
    gajian_pegawai?: true
    gajian_bulan?: true
    gajian_tahun?: true
    gajian_tunjangan_potongan?: true
    gajian_nominal?: true
    gajian_created?: true
    gajian_updated?: true
    gajian_deleted?: true
    _all?: true
  }

  export type GajianAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which gajian to aggregate.
     */
    where?: gajianWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gajians to fetch.
     */
    orderBy?: gajianOrderByWithRelationInput | gajianOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: gajianWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gajians from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gajians.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gajians
    **/
    _count?: true | GajianCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GajianAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GajianSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GajianMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GajianMaxAggregateInputType
  }

  export type GetGajianAggregateType<T extends GajianAggregateArgs> = {
        [P in keyof T & keyof AggregateGajian]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGajian[P]>
      : GetScalarType<T[P], AggregateGajian[P]>
  }




  export type gajianGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: gajianWhereInput
    orderBy?: gajianOrderByWithAggregationInput | gajianOrderByWithAggregationInput[]
    by: GajianScalarFieldEnum[] | GajianScalarFieldEnum
    having?: gajianScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GajianCountAggregateInputType | true
    _avg?: GajianAvgAggregateInputType
    _sum?: GajianSumAggregateInputType
    _min?: GajianMinAggregateInputType
    _max?: GajianMaxAggregateInputType
  }

  export type GajianGroupByOutputType = {
    gajian_id: number
    gajian_pegawai: number
    gajian_bulan: number
    gajian_tahun: number
    gajian_tunjangan_potongan: number
    gajian_nominal: number
    gajian_created: Date
    gajian_updated: Date
    gajian_deleted: Date | null
    _count: GajianCountAggregateOutputType | null
    _avg: GajianAvgAggregateOutputType | null
    _sum: GajianSumAggregateOutputType | null
    _min: GajianMinAggregateOutputType | null
    _max: GajianMaxAggregateOutputType | null
  }

  type GetGajianGroupByPayload<T extends gajianGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GajianGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GajianGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GajianGroupByOutputType[P]>
            : GetScalarType<T[P], GajianGroupByOutputType[P]>
        }
      >
    >


  export type gajianSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    gajian_id?: boolean
    gajian_pegawai?: boolean
    gajian_bulan?: boolean
    gajian_tahun?: boolean
    gajian_tunjangan_potongan?: boolean
    gajian_nominal?: boolean
    gajian_created?: boolean
    gajian_updated?: boolean
    gajian_deleted?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    tunjangan_potongan?: boolean | tunjangan_potonganDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["gajian"]>

  export type gajianSelectScalar = {
    gajian_id?: boolean
    gajian_pegawai?: boolean
    gajian_bulan?: boolean
    gajian_tahun?: boolean
    gajian_tunjangan_potongan?: boolean
    gajian_nominal?: boolean
    gajian_created?: boolean
    gajian_updated?: boolean
    gajian_deleted?: boolean
  }

  export type gajianInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    tunjangan_potongan?: boolean | tunjangan_potonganDefaultArgs<ExtArgs>
  }


  export type $gajianPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "gajian"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
      tunjangan_potongan: Prisma.$tunjangan_potonganPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      gajian_id: number
      gajian_pegawai: number
      gajian_bulan: number
      gajian_tahun: number
      gajian_tunjangan_potongan: number
      gajian_nominal: number
      gajian_created: Date
      gajian_updated: Date
      gajian_deleted: Date | null
    }, ExtArgs["result"]["gajian"]>
    composites: {}
  }


  type gajianGetPayload<S extends boolean | null | undefined | gajianDefaultArgs> = $Result.GetResult<Prisma.$gajianPayload, S>

  type gajianCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<gajianFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: GajianCountAggregateInputType | true
    }

  export interface gajianDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['gajian'], meta: { name: 'gajian' } }
    /**
     * Find zero or one Gajian that matches the filter.
     * @param {gajianFindUniqueArgs} args - Arguments to find a Gajian
     * @example
     * // Get one Gajian
     * const gajian = await prisma.gajian.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends gajianFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, gajianFindUniqueArgs<ExtArgs>>
    ): Prisma__gajianClient<$Result.GetResult<Prisma.$gajianPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Gajian that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {gajianFindUniqueOrThrowArgs} args - Arguments to find a Gajian
     * @example
     * // Get one Gajian
     * const gajian = await prisma.gajian.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends gajianFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, gajianFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__gajianClient<$Result.GetResult<Prisma.$gajianPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Gajian that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gajianFindFirstArgs} args - Arguments to find a Gajian
     * @example
     * // Get one Gajian
     * const gajian = await prisma.gajian.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends gajianFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, gajianFindFirstArgs<ExtArgs>>
    ): Prisma__gajianClient<$Result.GetResult<Prisma.$gajianPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Gajian that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gajianFindFirstOrThrowArgs} args - Arguments to find a Gajian
     * @example
     * // Get one Gajian
     * const gajian = await prisma.gajian.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends gajianFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, gajianFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__gajianClient<$Result.GetResult<Prisma.$gajianPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Gajians that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gajianFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gajians
     * const gajians = await prisma.gajian.findMany()
     * 
     * // Get first 10 Gajians
     * const gajians = await prisma.gajian.findMany({ take: 10 })
     * 
     * // Only select the `gajian_id`
     * const gajianWithGajian_idOnly = await prisma.gajian.findMany({ select: { gajian_id: true } })
     * 
    **/
    findMany<T extends gajianFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, gajianFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$gajianPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Gajian.
     * @param {gajianCreateArgs} args - Arguments to create a Gajian.
     * @example
     * // Create one Gajian
     * const Gajian = await prisma.gajian.create({
     *   data: {
     *     // ... data to create a Gajian
     *   }
     * })
     * 
    **/
    create<T extends gajianCreateArgs<ExtArgs>>(
      args: SelectSubset<T, gajianCreateArgs<ExtArgs>>
    ): Prisma__gajianClient<$Result.GetResult<Prisma.$gajianPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Gajians.
     *     @param {gajianCreateManyArgs} args - Arguments to create many Gajians.
     *     @example
     *     // Create many Gajians
     *     const gajian = await prisma.gajian.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends gajianCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, gajianCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Gajian.
     * @param {gajianDeleteArgs} args - Arguments to delete one Gajian.
     * @example
     * // Delete one Gajian
     * const Gajian = await prisma.gajian.delete({
     *   where: {
     *     // ... filter to delete one Gajian
     *   }
     * })
     * 
    **/
    delete<T extends gajianDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, gajianDeleteArgs<ExtArgs>>
    ): Prisma__gajianClient<$Result.GetResult<Prisma.$gajianPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Gajian.
     * @param {gajianUpdateArgs} args - Arguments to update one Gajian.
     * @example
     * // Update one Gajian
     * const gajian = await prisma.gajian.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends gajianUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, gajianUpdateArgs<ExtArgs>>
    ): Prisma__gajianClient<$Result.GetResult<Prisma.$gajianPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Gajians.
     * @param {gajianDeleteManyArgs} args - Arguments to filter Gajians to delete.
     * @example
     * // Delete a few Gajians
     * const { count } = await prisma.gajian.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends gajianDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, gajianDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gajians.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gajianUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gajians
     * const gajian = await prisma.gajian.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends gajianUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, gajianUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Gajian.
     * @param {gajianUpsertArgs} args - Arguments to update or create a Gajian.
     * @example
     * // Update or create a Gajian
     * const gajian = await prisma.gajian.upsert({
     *   create: {
     *     // ... data to create a Gajian
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gajian we want to update
     *   }
     * })
    **/
    upsert<T extends gajianUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, gajianUpsertArgs<ExtArgs>>
    ): Prisma__gajianClient<$Result.GetResult<Prisma.$gajianPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Gajians.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gajianCountArgs} args - Arguments to filter Gajians to count.
     * @example
     * // Count the number of Gajians
     * const count = await prisma.gajian.count({
     *   where: {
     *     // ... the filter for the Gajians we want to count
     *   }
     * })
    **/
    count<T extends gajianCountArgs>(
      args?: Subset<T, gajianCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GajianCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gajian.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GajianAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GajianAggregateArgs>(args: Subset<T, GajianAggregateArgs>): Prisma.PrismaPromise<GetGajianAggregateType<T>>

    /**
     * Group by Gajian.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gajianGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends gajianGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: gajianGroupByArgs['orderBy'] }
        : { orderBy?: gajianGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, gajianGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGajianGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the gajian model
   */
  readonly fields: gajianFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for gajian.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__gajianClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tunjangan_potongan<T extends tunjangan_potonganDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tunjangan_potonganDefaultArgs<ExtArgs>>): Prisma__tunjangan_potonganClient<$Result.GetResult<Prisma.$tunjangan_potonganPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the gajian model
   */ 
  interface gajianFieldRefs {
    readonly gajian_id: FieldRef<"gajian", 'Int'>
    readonly gajian_pegawai: FieldRef<"gajian", 'Int'>
    readonly gajian_bulan: FieldRef<"gajian", 'Int'>
    readonly gajian_tahun: FieldRef<"gajian", 'Int'>
    readonly gajian_tunjangan_potongan: FieldRef<"gajian", 'Int'>
    readonly gajian_nominal: FieldRef<"gajian", 'Int'>
    readonly gajian_created: FieldRef<"gajian", 'DateTime'>
    readonly gajian_updated: FieldRef<"gajian", 'DateTime'>
    readonly gajian_deleted: FieldRef<"gajian", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * gajian findUnique
   */
  export type gajianFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gajian
     */
    select?: gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gajianInclude<ExtArgs> | null
    /**
     * Filter, which gajian to fetch.
     */
    where: gajianWhereUniqueInput
  }


  /**
   * gajian findUniqueOrThrow
   */
  export type gajianFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gajian
     */
    select?: gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gajianInclude<ExtArgs> | null
    /**
     * Filter, which gajian to fetch.
     */
    where: gajianWhereUniqueInput
  }


  /**
   * gajian findFirst
   */
  export type gajianFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gajian
     */
    select?: gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gajianInclude<ExtArgs> | null
    /**
     * Filter, which gajian to fetch.
     */
    where?: gajianWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gajians to fetch.
     */
    orderBy?: gajianOrderByWithRelationInput | gajianOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gajians.
     */
    cursor?: gajianWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gajians from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gajians.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gajians.
     */
    distinct?: GajianScalarFieldEnum | GajianScalarFieldEnum[]
  }


  /**
   * gajian findFirstOrThrow
   */
  export type gajianFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gajian
     */
    select?: gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gajianInclude<ExtArgs> | null
    /**
     * Filter, which gajian to fetch.
     */
    where?: gajianWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gajians to fetch.
     */
    orderBy?: gajianOrderByWithRelationInput | gajianOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gajians.
     */
    cursor?: gajianWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gajians from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gajians.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gajians.
     */
    distinct?: GajianScalarFieldEnum | GajianScalarFieldEnum[]
  }


  /**
   * gajian findMany
   */
  export type gajianFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gajian
     */
    select?: gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gajianInclude<ExtArgs> | null
    /**
     * Filter, which gajians to fetch.
     */
    where?: gajianWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gajians to fetch.
     */
    orderBy?: gajianOrderByWithRelationInput | gajianOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gajians.
     */
    cursor?: gajianWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gajians from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gajians.
     */
    skip?: number
    distinct?: GajianScalarFieldEnum | GajianScalarFieldEnum[]
  }


  /**
   * gajian create
   */
  export type gajianCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gajian
     */
    select?: gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gajianInclude<ExtArgs> | null
    /**
     * The data needed to create a gajian.
     */
    data: XOR<gajianCreateInput, gajianUncheckedCreateInput>
  }


  /**
   * gajian createMany
   */
  export type gajianCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many gajians.
     */
    data: gajianCreateManyInput | gajianCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * gajian update
   */
  export type gajianUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gajian
     */
    select?: gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gajianInclude<ExtArgs> | null
    /**
     * The data needed to update a gajian.
     */
    data: XOR<gajianUpdateInput, gajianUncheckedUpdateInput>
    /**
     * Choose, which gajian to update.
     */
    where: gajianWhereUniqueInput
  }


  /**
   * gajian updateMany
   */
  export type gajianUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update gajians.
     */
    data: XOR<gajianUpdateManyMutationInput, gajianUncheckedUpdateManyInput>
    /**
     * Filter which gajians to update
     */
    where?: gajianWhereInput
  }


  /**
   * gajian upsert
   */
  export type gajianUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gajian
     */
    select?: gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gajianInclude<ExtArgs> | null
    /**
     * The filter to search for the gajian to update in case it exists.
     */
    where: gajianWhereUniqueInput
    /**
     * In case the gajian found by the `where` argument doesn't exist, create a new gajian with this data.
     */
    create: XOR<gajianCreateInput, gajianUncheckedCreateInput>
    /**
     * In case the gajian was found with the provided `where` argument, update it with this data.
     */
    update: XOR<gajianUpdateInput, gajianUncheckedUpdateInput>
  }


  /**
   * gajian delete
   */
  export type gajianDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gajian
     */
    select?: gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gajianInclude<ExtArgs> | null
    /**
     * Filter which gajian to delete.
     */
    where: gajianWhereUniqueInput
  }


  /**
   * gajian deleteMany
   */
  export type gajianDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which gajians to delete
     */
    where?: gajianWhereInput
  }


  /**
   * gajian without action
   */
  export type gajianDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the gajian
     */
    select?: gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: gajianInclude<ExtArgs> | null
  }



  /**
   * Model ttd_gajian
   */

  export type AggregateTtd_gajian = {
    _count: Ttd_gajianCountAggregateOutputType | null
    _avg: Ttd_gajianAvgAggregateOutputType | null
    _sum: Ttd_gajianSumAggregateOutputType | null
    _min: Ttd_gajianMinAggregateOutputType | null
    _max: Ttd_gajianMaxAggregateOutputType | null
  }

  export type Ttd_gajianAvgAggregateOutputType = {
    ttd_id: number | null
    ttd_bulan: number | null
    ttd_tahun: number | null
    ttd_sumberdana: number | null
  }

  export type Ttd_gajianSumAggregateOutputType = {
    ttd_id: number | null
    ttd_bulan: number | null
    ttd_tahun: number | null
    ttd_sumberdana: number | null
  }

  export type Ttd_gajianMinAggregateOutputType = {
    ttd_id: number | null
    ttd_bulan: number | null
    ttd_tahun: number | null
    ttd_sumberdana: number | null
    ttd_created: Date | null
    ttd_updated: Date | null
    ttd_deleted: Date | null
  }

  export type Ttd_gajianMaxAggregateOutputType = {
    ttd_id: number | null
    ttd_bulan: number | null
    ttd_tahun: number | null
    ttd_sumberdana: number | null
    ttd_created: Date | null
    ttd_updated: Date | null
    ttd_deleted: Date | null
  }

  export type Ttd_gajianCountAggregateOutputType = {
    ttd_id: number
    ttd_bulan: number
    ttd_tahun: number
    ttd_sumberdana: number
    ttd_created: number
    ttd_updated: number
    ttd_deleted: number
    _all: number
  }


  export type Ttd_gajianAvgAggregateInputType = {
    ttd_id?: true
    ttd_bulan?: true
    ttd_tahun?: true
    ttd_sumberdana?: true
  }

  export type Ttd_gajianSumAggregateInputType = {
    ttd_id?: true
    ttd_bulan?: true
    ttd_tahun?: true
    ttd_sumberdana?: true
  }

  export type Ttd_gajianMinAggregateInputType = {
    ttd_id?: true
    ttd_bulan?: true
    ttd_tahun?: true
    ttd_sumberdana?: true
    ttd_created?: true
    ttd_updated?: true
    ttd_deleted?: true
  }

  export type Ttd_gajianMaxAggregateInputType = {
    ttd_id?: true
    ttd_bulan?: true
    ttd_tahun?: true
    ttd_sumberdana?: true
    ttd_created?: true
    ttd_updated?: true
    ttd_deleted?: true
  }

  export type Ttd_gajianCountAggregateInputType = {
    ttd_id?: true
    ttd_bulan?: true
    ttd_tahun?: true
    ttd_sumberdana?: true
    ttd_created?: true
    ttd_updated?: true
    ttd_deleted?: true
    _all?: true
  }

  export type Ttd_gajianAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ttd_gajian to aggregate.
     */
    where?: ttd_gajianWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ttd_gajians to fetch.
     */
    orderBy?: ttd_gajianOrderByWithRelationInput | ttd_gajianOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ttd_gajianWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ttd_gajians from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ttd_gajians.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ttd_gajians
    **/
    _count?: true | Ttd_gajianCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Ttd_gajianAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Ttd_gajianSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ttd_gajianMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ttd_gajianMaxAggregateInputType
  }

  export type GetTtd_gajianAggregateType<T extends Ttd_gajianAggregateArgs> = {
        [P in keyof T & keyof AggregateTtd_gajian]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTtd_gajian[P]>
      : GetScalarType<T[P], AggregateTtd_gajian[P]>
  }




  export type ttd_gajianGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ttd_gajianWhereInput
    orderBy?: ttd_gajianOrderByWithAggregationInput | ttd_gajianOrderByWithAggregationInput[]
    by: Ttd_gajianScalarFieldEnum[] | Ttd_gajianScalarFieldEnum
    having?: ttd_gajianScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ttd_gajianCountAggregateInputType | true
    _avg?: Ttd_gajianAvgAggregateInputType
    _sum?: Ttd_gajianSumAggregateInputType
    _min?: Ttd_gajianMinAggregateInputType
    _max?: Ttd_gajianMaxAggregateInputType
  }

  export type Ttd_gajianGroupByOutputType = {
    ttd_id: number
    ttd_bulan: number
    ttd_tahun: number
    ttd_sumberdana: number
    ttd_created: Date
    ttd_updated: Date
    ttd_deleted: Date | null
    _count: Ttd_gajianCountAggregateOutputType | null
    _avg: Ttd_gajianAvgAggregateOutputType | null
    _sum: Ttd_gajianSumAggregateOutputType | null
    _min: Ttd_gajianMinAggregateOutputType | null
    _max: Ttd_gajianMaxAggregateOutputType | null
  }

  type GetTtd_gajianGroupByPayload<T extends ttd_gajianGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ttd_gajianGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ttd_gajianGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ttd_gajianGroupByOutputType[P]>
            : GetScalarType<T[P], Ttd_gajianGroupByOutputType[P]>
        }
      >
    >


  export type ttd_gajianSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ttd_id?: boolean
    ttd_bulan?: boolean
    ttd_tahun?: boolean
    ttd_sumberdana?: boolean
    ttd_created?: boolean
    ttd_updated?: boolean
    ttd_deleted?: boolean
    sumberdana?: boolean | sumberdanaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ttd_gajian"]>

  export type ttd_gajianSelectScalar = {
    ttd_id?: boolean
    ttd_bulan?: boolean
    ttd_tahun?: boolean
    ttd_sumberdana?: boolean
    ttd_created?: boolean
    ttd_updated?: boolean
    ttd_deleted?: boolean
  }

  export type ttd_gajianInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sumberdana?: boolean | sumberdanaDefaultArgs<ExtArgs>
  }


  export type $ttd_gajianPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ttd_gajian"
    objects: {
      sumberdana: Prisma.$sumberdanaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      ttd_id: number
      ttd_bulan: number
      ttd_tahun: number
      ttd_sumberdana: number
      ttd_created: Date
      ttd_updated: Date
      ttd_deleted: Date | null
    }, ExtArgs["result"]["ttd_gajian"]>
    composites: {}
  }


  type ttd_gajianGetPayload<S extends boolean | null | undefined | ttd_gajianDefaultArgs> = $Result.GetResult<Prisma.$ttd_gajianPayload, S>

  type ttd_gajianCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ttd_gajianFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Ttd_gajianCountAggregateInputType | true
    }

  export interface ttd_gajianDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ttd_gajian'], meta: { name: 'ttd_gajian' } }
    /**
     * Find zero or one Ttd_gajian that matches the filter.
     * @param {ttd_gajianFindUniqueArgs} args - Arguments to find a Ttd_gajian
     * @example
     * // Get one Ttd_gajian
     * const ttd_gajian = await prisma.ttd_gajian.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ttd_gajianFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ttd_gajianFindUniqueArgs<ExtArgs>>
    ): Prisma__ttd_gajianClient<$Result.GetResult<Prisma.$ttd_gajianPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Ttd_gajian that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ttd_gajianFindUniqueOrThrowArgs} args - Arguments to find a Ttd_gajian
     * @example
     * // Get one Ttd_gajian
     * const ttd_gajian = await prisma.ttd_gajian.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ttd_gajianFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ttd_gajianFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ttd_gajianClient<$Result.GetResult<Prisma.$ttd_gajianPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Ttd_gajian that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ttd_gajianFindFirstArgs} args - Arguments to find a Ttd_gajian
     * @example
     * // Get one Ttd_gajian
     * const ttd_gajian = await prisma.ttd_gajian.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ttd_gajianFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ttd_gajianFindFirstArgs<ExtArgs>>
    ): Prisma__ttd_gajianClient<$Result.GetResult<Prisma.$ttd_gajianPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Ttd_gajian that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ttd_gajianFindFirstOrThrowArgs} args - Arguments to find a Ttd_gajian
     * @example
     * // Get one Ttd_gajian
     * const ttd_gajian = await prisma.ttd_gajian.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ttd_gajianFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ttd_gajianFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ttd_gajianClient<$Result.GetResult<Prisma.$ttd_gajianPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Ttd_gajians that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ttd_gajianFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ttd_gajians
     * const ttd_gajians = await prisma.ttd_gajian.findMany()
     * 
     * // Get first 10 Ttd_gajians
     * const ttd_gajians = await prisma.ttd_gajian.findMany({ take: 10 })
     * 
     * // Only select the `ttd_id`
     * const ttd_gajianWithTtd_idOnly = await prisma.ttd_gajian.findMany({ select: { ttd_id: true } })
     * 
    **/
    findMany<T extends ttd_gajianFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ttd_gajianFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ttd_gajianPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Ttd_gajian.
     * @param {ttd_gajianCreateArgs} args - Arguments to create a Ttd_gajian.
     * @example
     * // Create one Ttd_gajian
     * const Ttd_gajian = await prisma.ttd_gajian.create({
     *   data: {
     *     // ... data to create a Ttd_gajian
     *   }
     * })
     * 
    **/
    create<T extends ttd_gajianCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ttd_gajianCreateArgs<ExtArgs>>
    ): Prisma__ttd_gajianClient<$Result.GetResult<Prisma.$ttd_gajianPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Ttd_gajians.
     *     @param {ttd_gajianCreateManyArgs} args - Arguments to create many Ttd_gajians.
     *     @example
     *     // Create many Ttd_gajians
     *     const ttd_gajian = await prisma.ttd_gajian.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ttd_gajianCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ttd_gajianCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Ttd_gajian.
     * @param {ttd_gajianDeleteArgs} args - Arguments to delete one Ttd_gajian.
     * @example
     * // Delete one Ttd_gajian
     * const Ttd_gajian = await prisma.ttd_gajian.delete({
     *   where: {
     *     // ... filter to delete one Ttd_gajian
     *   }
     * })
     * 
    **/
    delete<T extends ttd_gajianDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ttd_gajianDeleteArgs<ExtArgs>>
    ): Prisma__ttd_gajianClient<$Result.GetResult<Prisma.$ttd_gajianPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Ttd_gajian.
     * @param {ttd_gajianUpdateArgs} args - Arguments to update one Ttd_gajian.
     * @example
     * // Update one Ttd_gajian
     * const ttd_gajian = await prisma.ttd_gajian.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ttd_gajianUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ttd_gajianUpdateArgs<ExtArgs>>
    ): Prisma__ttd_gajianClient<$Result.GetResult<Prisma.$ttd_gajianPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Ttd_gajians.
     * @param {ttd_gajianDeleteManyArgs} args - Arguments to filter Ttd_gajians to delete.
     * @example
     * // Delete a few Ttd_gajians
     * const { count } = await prisma.ttd_gajian.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ttd_gajianDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ttd_gajianDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ttd_gajians.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ttd_gajianUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ttd_gajians
     * const ttd_gajian = await prisma.ttd_gajian.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ttd_gajianUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ttd_gajianUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Ttd_gajian.
     * @param {ttd_gajianUpsertArgs} args - Arguments to update or create a Ttd_gajian.
     * @example
     * // Update or create a Ttd_gajian
     * const ttd_gajian = await prisma.ttd_gajian.upsert({
     *   create: {
     *     // ... data to create a Ttd_gajian
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ttd_gajian we want to update
     *   }
     * })
    **/
    upsert<T extends ttd_gajianUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ttd_gajianUpsertArgs<ExtArgs>>
    ): Prisma__ttd_gajianClient<$Result.GetResult<Prisma.$ttd_gajianPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Ttd_gajians.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ttd_gajianCountArgs} args - Arguments to filter Ttd_gajians to count.
     * @example
     * // Count the number of Ttd_gajians
     * const count = await prisma.ttd_gajian.count({
     *   where: {
     *     // ... the filter for the Ttd_gajians we want to count
     *   }
     * })
    **/
    count<T extends ttd_gajianCountArgs>(
      args?: Subset<T, ttd_gajianCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ttd_gajianCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ttd_gajian.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ttd_gajianAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ttd_gajianAggregateArgs>(args: Subset<T, Ttd_gajianAggregateArgs>): Prisma.PrismaPromise<GetTtd_gajianAggregateType<T>>

    /**
     * Group by Ttd_gajian.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ttd_gajianGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ttd_gajianGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ttd_gajianGroupByArgs['orderBy'] }
        : { orderBy?: ttd_gajianGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ttd_gajianGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTtd_gajianGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ttd_gajian model
   */
  readonly fields: ttd_gajianFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ttd_gajian.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ttd_gajianClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    sumberdana<T extends sumberdanaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sumberdanaDefaultArgs<ExtArgs>>): Prisma__sumberdanaClient<$Result.GetResult<Prisma.$sumberdanaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the ttd_gajian model
   */ 
  interface ttd_gajianFieldRefs {
    readonly ttd_id: FieldRef<"ttd_gajian", 'Int'>
    readonly ttd_bulan: FieldRef<"ttd_gajian", 'Int'>
    readonly ttd_tahun: FieldRef<"ttd_gajian", 'Int'>
    readonly ttd_sumberdana: FieldRef<"ttd_gajian", 'Int'>
    readonly ttd_created: FieldRef<"ttd_gajian", 'DateTime'>
    readonly ttd_updated: FieldRef<"ttd_gajian", 'DateTime'>
    readonly ttd_deleted: FieldRef<"ttd_gajian", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * ttd_gajian findUnique
   */
  export type ttd_gajianFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ttd_gajian
     */
    select?: ttd_gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ttd_gajianInclude<ExtArgs> | null
    /**
     * Filter, which ttd_gajian to fetch.
     */
    where: ttd_gajianWhereUniqueInput
  }


  /**
   * ttd_gajian findUniqueOrThrow
   */
  export type ttd_gajianFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ttd_gajian
     */
    select?: ttd_gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ttd_gajianInclude<ExtArgs> | null
    /**
     * Filter, which ttd_gajian to fetch.
     */
    where: ttd_gajianWhereUniqueInput
  }


  /**
   * ttd_gajian findFirst
   */
  export type ttd_gajianFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ttd_gajian
     */
    select?: ttd_gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ttd_gajianInclude<ExtArgs> | null
    /**
     * Filter, which ttd_gajian to fetch.
     */
    where?: ttd_gajianWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ttd_gajians to fetch.
     */
    orderBy?: ttd_gajianOrderByWithRelationInput | ttd_gajianOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ttd_gajians.
     */
    cursor?: ttd_gajianWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ttd_gajians from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ttd_gajians.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ttd_gajians.
     */
    distinct?: Ttd_gajianScalarFieldEnum | Ttd_gajianScalarFieldEnum[]
  }


  /**
   * ttd_gajian findFirstOrThrow
   */
  export type ttd_gajianFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ttd_gajian
     */
    select?: ttd_gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ttd_gajianInclude<ExtArgs> | null
    /**
     * Filter, which ttd_gajian to fetch.
     */
    where?: ttd_gajianWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ttd_gajians to fetch.
     */
    orderBy?: ttd_gajianOrderByWithRelationInput | ttd_gajianOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ttd_gajians.
     */
    cursor?: ttd_gajianWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ttd_gajians from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ttd_gajians.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ttd_gajians.
     */
    distinct?: Ttd_gajianScalarFieldEnum | Ttd_gajianScalarFieldEnum[]
  }


  /**
   * ttd_gajian findMany
   */
  export type ttd_gajianFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ttd_gajian
     */
    select?: ttd_gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ttd_gajianInclude<ExtArgs> | null
    /**
     * Filter, which ttd_gajians to fetch.
     */
    where?: ttd_gajianWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ttd_gajians to fetch.
     */
    orderBy?: ttd_gajianOrderByWithRelationInput | ttd_gajianOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ttd_gajians.
     */
    cursor?: ttd_gajianWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ttd_gajians from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ttd_gajians.
     */
    skip?: number
    distinct?: Ttd_gajianScalarFieldEnum | Ttd_gajianScalarFieldEnum[]
  }


  /**
   * ttd_gajian create
   */
  export type ttd_gajianCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ttd_gajian
     */
    select?: ttd_gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ttd_gajianInclude<ExtArgs> | null
    /**
     * The data needed to create a ttd_gajian.
     */
    data: XOR<ttd_gajianCreateInput, ttd_gajianUncheckedCreateInput>
  }


  /**
   * ttd_gajian createMany
   */
  export type ttd_gajianCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ttd_gajians.
     */
    data: ttd_gajianCreateManyInput | ttd_gajianCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * ttd_gajian update
   */
  export type ttd_gajianUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ttd_gajian
     */
    select?: ttd_gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ttd_gajianInclude<ExtArgs> | null
    /**
     * The data needed to update a ttd_gajian.
     */
    data: XOR<ttd_gajianUpdateInput, ttd_gajianUncheckedUpdateInput>
    /**
     * Choose, which ttd_gajian to update.
     */
    where: ttd_gajianWhereUniqueInput
  }


  /**
   * ttd_gajian updateMany
   */
  export type ttd_gajianUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ttd_gajians.
     */
    data: XOR<ttd_gajianUpdateManyMutationInput, ttd_gajianUncheckedUpdateManyInput>
    /**
     * Filter which ttd_gajians to update
     */
    where?: ttd_gajianWhereInput
  }


  /**
   * ttd_gajian upsert
   */
  export type ttd_gajianUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ttd_gajian
     */
    select?: ttd_gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ttd_gajianInclude<ExtArgs> | null
    /**
     * The filter to search for the ttd_gajian to update in case it exists.
     */
    where: ttd_gajianWhereUniqueInput
    /**
     * In case the ttd_gajian found by the `where` argument doesn't exist, create a new ttd_gajian with this data.
     */
    create: XOR<ttd_gajianCreateInput, ttd_gajianUncheckedCreateInput>
    /**
     * In case the ttd_gajian was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ttd_gajianUpdateInput, ttd_gajianUncheckedUpdateInput>
  }


  /**
   * ttd_gajian delete
   */
  export type ttd_gajianDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ttd_gajian
     */
    select?: ttd_gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ttd_gajianInclude<ExtArgs> | null
    /**
     * Filter which ttd_gajian to delete.
     */
    where: ttd_gajianWhereUniqueInput
  }


  /**
   * ttd_gajian deleteMany
   */
  export type ttd_gajianDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ttd_gajians to delete
     */
    where?: ttd_gajianWhereInput
  }


  /**
   * ttd_gajian without action
   */
  export type ttd_gajianDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ttd_gajian
     */
    select?: ttd_gajianSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ttd_gajianInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsersScalarFieldEnum: {
    user_id: 'user_id',
    user_opd: 'user_opd',
    user_nama: 'user_nama',
    user_nip: 'user_nip',
    user_nik: 'user_nik',
    user_name: 'user_name',
    user_pass: 'user_pass',
    user_image: 'user_image',
    user_tmp_lahir: 'user_tmp_lahir',
    user_tgl_lahir: 'user_tgl_lahir',
    user_pendidikan_akhir: 'user_pendidikan_akhir',
    user_level: 'user_level',
    user_email: 'user_email',
    user_nohp: 'user_nohp',
    user_alamat: 'user_alamat',
    user_jk: 'user_jk',
    user_ttd: 'user_ttd',
    user_jabatan: 'user_jabatan',
    user_pangkat: 'user_pangkat',
    user_jumlah_anak: 'user_jumlah_anak',
    user_active: 'user_active',
    user_external: 'user_external',
    user_lastip: 'user_lastip',
    user_lastlogin: 'user_lastlogin',
    user_created: 'user_created',
    user_updated: 'user_updated',
    user_deleted: 'user_deleted'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const DasarScalarFieldEnum: {
    dasar_id: 'dasar_id',
    dasar_isi: 'dasar_isi',
    dasar_opd: 'dasar_opd',
    dasar_active: 'dasar_active',
    dasar_created: 'dasar_created',
    dasar_updated: 'dasar_updated',
    dasar_deleted: 'dasar_deleted'
  };

  export type DasarScalarFieldEnum = (typeof DasarScalarFieldEnum)[keyof typeof DasarScalarFieldEnum]


  export const SptScalarFieldEnum: {
    spt_id: 'spt_id',
    spt_seq: 'spt_seq',
    spt_tahun: 'spt_tahun',
    spt_nomor: 'spt_nomor',
    spt_opd: 'spt_opd',
    spt_kota_asal: 'spt_kota_asal',
    spt_kota_tujuan: 'spt_kota_tujuan',
    spt_kota_tujuan2: 'spt_kota_tujuan2',
    spt_tempat_tujuan: 'spt_tempat_tujuan',
    spt_via: 'spt_via',
    spt_tgl_brkt: 'spt_tgl_brkt',
    spt_tgl_kembali: 'spt_tgl_kembali',
    spt_lama: 'spt_lama',
    spt_perihal: 'spt_perihal',
    spt_kategori: 'spt_kategori',
    spt_kegiatan: 'spt_kegiatan',
    spt_sumber_dana: 'spt_sumber_dana',
    spt_pj: 'spt_pj',
    spt_pj2: 'spt_pj2',
    spt_dasar: 'spt_dasar',
    spt_status: 'spt_status',
    spt_created: 'spt_created',
    spt_updated: 'spt_updated',
    spt_deleted: 'spt_deleted',
    kotaKota_id: 'kotaKota_id'
  };

  export type SptScalarFieldEnum = (typeof SptScalarFieldEnum)[keyof typeof SptScalarFieldEnum]


  export const Spt_pegawaiScalarFieldEnum: {
    sp_id: 'sp_id',
    sp_spt: 'sp_spt',
    sp_user: 'sp_user',
    sp_nomor_sppd: 'sp_nomor_sppd',
    sp_seq: 'sp_seq'
  };

  export type Spt_pegawaiScalarFieldEnum = (typeof Spt_pegawaiScalarFieldEnum)[keyof typeof Spt_pegawaiScalarFieldEnum]


  export const NpdScalarFieldEnum: {
    npd_spt_pegawai: 'npd_spt_pegawai',
    npd_tgl: 'npd_tgl',
    npd_nominal: 'npd_nominal',
    npd_created: 'npd_created',
    npd_updated: 'npd_updated'
  };

  export type NpdScalarFieldEnum = (typeof NpdScalarFieldEnum)[keyof typeof NpdScalarFieldEnum]


  export const BiayaScalarFieldEnum: {
    biaya_komponen: 'biaya_komponen',
    biaya_standard: 'biaya_standard',
    biaya_nilai: 'biaya_nilai',
    biaya_keterangan1: 'biaya_keterangan1',
    biaya_keterangan2: 'biaya_keterangan2',
    biaya_keterangan3: 'biaya_keterangan3',
    biaya_keterangan4: 'biaya_keterangan4',
    biaya_bukti: 'biaya_bukti',
    biaya_created: 'biaya_created',
    biaya_updated: 'biaya_updated',
    biaya_spt_pegawai: 'biaya_spt_pegawai'
  };

  export type BiayaScalarFieldEnum = (typeof BiayaScalarFieldEnum)[keyof typeof BiayaScalarFieldEnum]


  export const ProvinsiScalarFieldEnum: {
    provinsi_id: 'provinsi_id',
    provinsi_nama: 'provinsi_nama'
  };

  export type ProvinsiScalarFieldEnum = (typeof ProvinsiScalarFieldEnum)[keyof typeof ProvinsiScalarFieldEnum]


  export const KotaScalarFieldEnum: {
    kota_id: 'kota_id',
    kota_provinsi: 'kota_provinsi',
    kota_nama: 'kota_nama',
    kota_dalam_daerah: 'kota_dalam_daerah',
    kota_created: 'kota_created',
    kota_updated: 'kota_updated',
    kota_deleted: 'kota_deleted'
  };

  export type KotaScalarFieldEnum = (typeof KotaScalarFieldEnum)[keyof typeof KotaScalarFieldEnum]


  export const LaporanScalarFieldEnum: {
    laporan_id: 'laporan_id',
    laporan_spt_pegawai: 'laporan_spt_pegawai',
    laporan_isi: 'laporan_isi',
    laporan_created: 'laporan_created',
    laporan_updated: 'laporan_updated'
  };

  export type LaporanScalarFieldEnum = (typeof LaporanScalarFieldEnum)[keyof typeof LaporanScalarFieldEnum]


  export const SettingScalarFieldEnum: {
    setting_id: 'setting_id',
    setting_opd: 'setting_opd',
    setting_value: 'setting_value',
    setting_lastupdate: 'setting_lastupdate'
  };

  export type SettingScalarFieldEnum = (typeof SettingScalarFieldEnum)[keyof typeof SettingScalarFieldEnum]


  export const KegiatanScalarFieldEnum: {
    kegiatan_id: 'kegiatan_id',
    kegiatan_opd: 'kegiatan_opd',
    kegiatan_kode: 'kegiatan_kode',
    kegiatan_program: 'kegiatan_program',
    kegiatan_nama: 'kegiatan_nama',
    kegiatan_subkegiatan: 'kegiatan_subkegiatan',
    kegiatan_created: 'kegiatan_created',
    kegiatan_updated: 'kegiatan_updated',
    kegiatan_deleted: 'kegiatan_deleted'
  };

  export type KegiatanScalarFieldEnum = (typeof KegiatanScalarFieldEnum)[keyof typeof KegiatanScalarFieldEnum]


  export const SumberdanaScalarFieldEnum: {
    sd_id: 'sd_id',
    sd_tahun: 'sd_tahun',
    sd_opd: 'sd_opd',
    sd_kode_rekening: 'sd_kode_rekening',
    sd_nama: 'sd_nama',
    sd_kegiatan: 'sd_kegiatan',
    sd_jumlah: 'sd_jumlah',
    sd_pptk: 'sd_pptk',
    sd_pa: 'sd_pa',
    sd_bendahara: 'sd_bendahara',
    sd_active: 'sd_active',
    sd_app: 'sd_app',
    sd_created: 'sd_created',
    sd_updated: 'sd_updated',
    sd_deleted: 'sd_deleted'
  };

  export type SumberdanaScalarFieldEnum = (typeof SumberdanaScalarFieldEnum)[keyof typeof SumberdanaScalarFieldEnum]


  export const OpdScalarFieldEnum: {
    opd_id: 'opd_id',
    opd_nama: 'opd_nama',
    opd_alamat: 'opd_alamat',
    opd_email: 'opd_email',
    opd_telp: 'opd_telp',
    opd_kota: 'opd_kota',
    opd_created: 'opd_created',
    opd_updated: 'opd_updated',
    opd_deleted: 'opd_deleted'
  };

  export type OpdScalarFieldEnum = (typeof OpdScalarFieldEnum)[keyof typeof OpdScalarFieldEnum]


  export const JabatanScalarFieldEnum: {
    jabatan_id: 'jabatan_id',
    jabatan_opd: 'jabatan_opd',
    jabatan_nama: 'jabatan_nama',
    jabatan_kop_surat: 'jabatan_kop_surat',
    jabatan_kelas_biaya: 'jabatan_kelas_biaya',
    jabatan_kwitansi: 'jabatan_kwitansi',
    jabatan_kelompok: 'jabatan_kelompok',
    jabatan_created: 'jabatan_created',
    jabatan_updated: 'jabatan_updated',
    jabatan_deleted: 'jabatan_deleted'
  };

  export type JabatanScalarFieldEnum = (typeof JabatanScalarFieldEnum)[keyof typeof JabatanScalarFieldEnum]


  export const KwitansiScalarFieldEnum: {
    kwitansi_spt_pegawai: 'kwitansi_spt_pegawai',
    kwitansi_nomor: 'kwitansi_nomor',
    kwitansi_opd: 'kwitansi_opd',
    kwitansi_created: 'kwitansi_created',
    kwitansi_updated: 'kwitansi_updated'
  };

  export type KwitansiScalarFieldEnum = (typeof KwitansiScalarFieldEnum)[keyof typeof KwitansiScalarFieldEnum]


  export const KategoriScalarFieldEnum: {
    kategori_id: 'kategori_id',
    kategori_nama: 'kategori_nama',
    kategori_opd: 'kategori_opd',
    kategori_created: 'kategori_created',
    kategori_updated: 'kategori_updated',
    kategori_deleted: 'kategori_deleted'
  };

  export type KategoriScalarFieldEnum = (typeof KategoriScalarFieldEnum)[keyof typeof KategoriScalarFieldEnum]


  export const StandardScalarFieldEnum: {
    standard_id: 'standard_id',
    standard_kode: 'standard_kode',
    standard_opd: 'standard_opd',
    standard_kota_asal: 'standard_kota_asal',
    standard_kota_tujuan: 'standard_kota_tujuan',
    standard_via: 'standard_via',
    standard_kelas: 'standard_kelas',
    standard_nominal: 'standard_nominal',
    standard_created: 'standard_created',
    standard_updated: 'standard_updated',
    standard_deleted: 'standard_deleted'
  };

  export type StandardScalarFieldEnum = (typeof StandardScalarFieldEnum)[keyof typeof StandardScalarFieldEnum]


  export const BankScalarFieldEnum: {
    bank_user: 'bank_user',
    bank_name: 'bank_name',
    bank_account: 'bank_account',
    bank_number: 'bank_number'
  };

  export type BankScalarFieldEnum = (typeof BankScalarFieldEnum)[keyof typeof BankScalarFieldEnum]


  export const Tunjangan_potonganScalarFieldEnum: {
    tp_id: 'tp_id',
    tp_jenis: 'tp_jenis',
    tp_nama: 'tp_nama',
    tp_urutan: 'tp_urutan',
    tp_kelompok: 'tp_kelompok',
    tp_created: 'tp_created',
    tp_update: 'tp_update',
    tp_deleted: 'tp_deleted'
  };

  export type Tunjangan_potonganScalarFieldEnum = (typeof Tunjangan_potonganScalarFieldEnum)[keyof typeof Tunjangan_potonganScalarFieldEnum]


  export const GajianScalarFieldEnum: {
    gajian_id: 'gajian_id',
    gajian_pegawai: 'gajian_pegawai',
    gajian_bulan: 'gajian_bulan',
    gajian_tahun: 'gajian_tahun',
    gajian_tunjangan_potongan: 'gajian_tunjangan_potongan',
    gajian_nominal: 'gajian_nominal',
    gajian_created: 'gajian_created',
    gajian_updated: 'gajian_updated',
    gajian_deleted: 'gajian_deleted'
  };

  export type GajianScalarFieldEnum = (typeof GajianScalarFieldEnum)[keyof typeof GajianScalarFieldEnum]


  export const Ttd_gajianScalarFieldEnum: {
    ttd_id: 'ttd_id',
    ttd_bulan: 'ttd_bulan',
    ttd_tahun: 'ttd_tahun',
    ttd_sumberdana: 'ttd_sumberdana',
    ttd_created: 'ttd_created',
    ttd_updated: 'ttd_updated',
    ttd_deleted: 'ttd_deleted'
  };

  export type Ttd_gajianScalarFieldEnum = (typeof Ttd_gajianScalarFieldEnum)[keyof typeof Ttd_gajianScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'JK'
   */
  export type EnumJKFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JK'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    user_id?: IntFilter<"users"> | number
    user_opd?: IntFilter<"users"> | number
    user_nama?: StringFilter<"users"> | string
    user_nip?: StringNullableFilter<"users"> | string | null
    user_nik?: StringFilter<"users"> | string
    user_name?: StringFilter<"users"> | string
    user_pass?: StringFilter<"users"> | string
    user_image?: StringNullableFilter<"users"> | string | null
    user_tmp_lahir?: StringFilter<"users"> | string
    user_tgl_lahir?: DateTimeFilter<"users"> | Date | string
    user_pendidikan_akhir?: IntFilter<"users"> | number
    user_level?: IntFilter<"users"> | number
    user_email?: StringFilter<"users"> | string
    user_nohp?: StringFilter<"users"> | string
    user_alamat?: StringFilter<"users"> | string
    user_jk?: EnumJKFilter<"users"> | $Enums.JK
    user_ttd?: BoolFilter<"users"> | boolean
    user_jabatan?: IntFilter<"users"> | number
    user_pangkat?: StringNullableFilter<"users"> | string | null
    user_jumlah_anak?: IntFilter<"users"> | number
    user_active?: BoolFilter<"users"> | boolean
    user_external?: BoolFilter<"users"> | boolean
    user_lastip?: StringNullableFilter<"users"> | string | null
    user_lastlogin?: DateTimeNullableFilter<"users"> | Date | string | null
    user_created?: DateTimeFilter<"users"> | Date | string
    user_updated?: DateTimeFilter<"users"> | Date | string
    user_deleted?: DateTimeNullableFilter<"users"> | Date | string | null
    spt_pegawai?: Spt_pegawaiListRelationFilter
    pj?: SptListRelationFilter
    pj2?: SptListRelationFilter
    opd?: XOR<OpdRelationFilter, opdWhereInput>
    jabatan?: XOR<JabatanRelationFilter, jabatanWhereInput>
    sumberdana?: SumberdanaListRelationFilter
    sumberdana_bendahara?: SumberdanaListRelationFilter
    sumberdana_pa?: SumberdanaListRelationFilter
    bank?: BankListRelationFilter
    gajian?: GajianListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    user_id?: SortOrder
    user_opd?: SortOrder
    user_nama?: SortOrder
    user_nip?: SortOrderInput | SortOrder
    user_nik?: SortOrder
    user_name?: SortOrder
    user_pass?: SortOrder
    user_image?: SortOrderInput | SortOrder
    user_tmp_lahir?: SortOrder
    user_tgl_lahir?: SortOrder
    user_pendidikan_akhir?: SortOrder
    user_level?: SortOrder
    user_email?: SortOrder
    user_nohp?: SortOrder
    user_alamat?: SortOrder
    user_jk?: SortOrder
    user_ttd?: SortOrder
    user_jabatan?: SortOrder
    user_pangkat?: SortOrderInput | SortOrder
    user_jumlah_anak?: SortOrder
    user_active?: SortOrder
    user_external?: SortOrder
    user_lastip?: SortOrderInput | SortOrder
    user_lastlogin?: SortOrderInput | SortOrder
    user_created?: SortOrder
    user_updated?: SortOrder
    user_deleted?: SortOrderInput | SortOrder
    spt_pegawai?: spt_pegawaiOrderByRelationAggregateInput
    pj?: sptOrderByRelationAggregateInput
    pj2?: sptOrderByRelationAggregateInput
    opd?: opdOrderByWithRelationInput
    jabatan?: jabatanOrderByWithRelationInput
    sumberdana?: sumberdanaOrderByRelationAggregateInput
    sumberdana_bendahara?: sumberdanaOrderByRelationAggregateInput
    sumberdana_pa?: sumberdanaOrderByRelationAggregateInput
    bank?: bankOrderByRelationAggregateInput
    gajian?: gajianOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    user_id?: number
    user_nip?: string
    user_nik?: string
    user_name?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    user_opd?: IntFilter<"users"> | number
    user_nama?: StringFilter<"users"> | string
    user_pass?: StringFilter<"users"> | string
    user_image?: StringNullableFilter<"users"> | string | null
    user_tmp_lahir?: StringFilter<"users"> | string
    user_tgl_lahir?: DateTimeFilter<"users"> | Date | string
    user_pendidikan_akhir?: IntFilter<"users"> | number
    user_level?: IntFilter<"users"> | number
    user_email?: StringFilter<"users"> | string
    user_nohp?: StringFilter<"users"> | string
    user_alamat?: StringFilter<"users"> | string
    user_jk?: EnumJKFilter<"users"> | $Enums.JK
    user_ttd?: BoolFilter<"users"> | boolean
    user_jabatan?: IntFilter<"users"> | number
    user_pangkat?: StringNullableFilter<"users"> | string | null
    user_jumlah_anak?: IntFilter<"users"> | number
    user_active?: BoolFilter<"users"> | boolean
    user_external?: BoolFilter<"users"> | boolean
    user_lastip?: StringNullableFilter<"users"> | string | null
    user_lastlogin?: DateTimeNullableFilter<"users"> | Date | string | null
    user_created?: DateTimeFilter<"users"> | Date | string
    user_updated?: DateTimeFilter<"users"> | Date | string
    user_deleted?: DateTimeNullableFilter<"users"> | Date | string | null
    spt_pegawai?: Spt_pegawaiListRelationFilter
    pj?: SptListRelationFilter
    pj2?: SptListRelationFilter
    opd?: XOR<OpdRelationFilter, opdWhereInput>
    jabatan?: XOR<JabatanRelationFilter, jabatanWhereInput>
    sumberdana?: SumberdanaListRelationFilter
    sumberdana_bendahara?: SumberdanaListRelationFilter
    sumberdana_pa?: SumberdanaListRelationFilter
    bank?: BankListRelationFilter
    gajian?: GajianListRelationFilter
  }, "user_id" | "user_nip" | "user_nik" | "user_name">

  export type usersOrderByWithAggregationInput = {
    user_id?: SortOrder
    user_opd?: SortOrder
    user_nama?: SortOrder
    user_nip?: SortOrderInput | SortOrder
    user_nik?: SortOrder
    user_name?: SortOrder
    user_pass?: SortOrder
    user_image?: SortOrderInput | SortOrder
    user_tmp_lahir?: SortOrder
    user_tgl_lahir?: SortOrder
    user_pendidikan_akhir?: SortOrder
    user_level?: SortOrder
    user_email?: SortOrder
    user_nohp?: SortOrder
    user_alamat?: SortOrder
    user_jk?: SortOrder
    user_ttd?: SortOrder
    user_jabatan?: SortOrder
    user_pangkat?: SortOrderInput | SortOrder
    user_jumlah_anak?: SortOrder
    user_active?: SortOrder
    user_external?: SortOrder
    user_lastip?: SortOrderInput | SortOrder
    user_lastlogin?: SortOrderInput | SortOrder
    user_created?: SortOrder
    user_updated?: SortOrder
    user_deleted?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    user_id?: IntWithAggregatesFilter<"users"> | number
    user_opd?: IntWithAggregatesFilter<"users"> | number
    user_nama?: StringWithAggregatesFilter<"users"> | string
    user_nip?: StringNullableWithAggregatesFilter<"users"> | string | null
    user_nik?: StringWithAggregatesFilter<"users"> | string
    user_name?: StringWithAggregatesFilter<"users"> | string
    user_pass?: StringWithAggregatesFilter<"users"> | string
    user_image?: StringNullableWithAggregatesFilter<"users"> | string | null
    user_tmp_lahir?: StringWithAggregatesFilter<"users"> | string
    user_tgl_lahir?: DateTimeWithAggregatesFilter<"users"> | Date | string
    user_pendidikan_akhir?: IntWithAggregatesFilter<"users"> | number
    user_level?: IntWithAggregatesFilter<"users"> | number
    user_email?: StringWithAggregatesFilter<"users"> | string
    user_nohp?: StringWithAggregatesFilter<"users"> | string
    user_alamat?: StringWithAggregatesFilter<"users"> | string
    user_jk?: EnumJKWithAggregatesFilter<"users"> | $Enums.JK
    user_ttd?: BoolWithAggregatesFilter<"users"> | boolean
    user_jabatan?: IntWithAggregatesFilter<"users"> | number
    user_pangkat?: StringNullableWithAggregatesFilter<"users"> | string | null
    user_jumlah_anak?: IntWithAggregatesFilter<"users"> | number
    user_active?: BoolWithAggregatesFilter<"users"> | boolean
    user_external?: BoolWithAggregatesFilter<"users"> | boolean
    user_lastip?: StringNullableWithAggregatesFilter<"users"> | string | null
    user_lastlogin?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    user_created?: DateTimeWithAggregatesFilter<"users"> | Date | string
    user_updated?: DateTimeWithAggregatesFilter<"users"> | Date | string
    user_deleted?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
  }

  export type dasarWhereInput = {
    AND?: dasarWhereInput | dasarWhereInput[]
    OR?: dasarWhereInput[]
    NOT?: dasarWhereInput | dasarWhereInput[]
    dasar_id?: IntFilter<"dasar"> | number
    dasar_isi?: StringFilter<"dasar"> | string
    dasar_opd?: IntFilter<"dasar"> | number
    dasar_active?: BoolFilter<"dasar"> | boolean
    dasar_created?: DateTimeFilter<"dasar"> | Date | string
    dasar_updated?: DateTimeFilter<"dasar"> | Date | string
    dasar_deleted?: DateTimeNullableFilter<"dasar"> | Date | string | null
  }

  export type dasarOrderByWithRelationInput = {
    dasar_id?: SortOrder
    dasar_isi?: SortOrder
    dasar_opd?: SortOrder
    dasar_active?: SortOrder
    dasar_created?: SortOrder
    dasar_updated?: SortOrder
    dasar_deleted?: SortOrderInput | SortOrder
  }

  export type dasarWhereUniqueInput = Prisma.AtLeast<{
    dasar_id?: number
    AND?: dasarWhereInput | dasarWhereInput[]
    OR?: dasarWhereInput[]
    NOT?: dasarWhereInput | dasarWhereInput[]
    dasar_isi?: StringFilter<"dasar"> | string
    dasar_opd?: IntFilter<"dasar"> | number
    dasar_active?: BoolFilter<"dasar"> | boolean
    dasar_created?: DateTimeFilter<"dasar"> | Date | string
    dasar_updated?: DateTimeFilter<"dasar"> | Date | string
    dasar_deleted?: DateTimeNullableFilter<"dasar"> | Date | string | null
  }, "dasar_id">

  export type dasarOrderByWithAggregationInput = {
    dasar_id?: SortOrder
    dasar_isi?: SortOrder
    dasar_opd?: SortOrder
    dasar_active?: SortOrder
    dasar_created?: SortOrder
    dasar_updated?: SortOrder
    dasar_deleted?: SortOrderInput | SortOrder
    _count?: dasarCountOrderByAggregateInput
    _avg?: dasarAvgOrderByAggregateInput
    _max?: dasarMaxOrderByAggregateInput
    _min?: dasarMinOrderByAggregateInput
    _sum?: dasarSumOrderByAggregateInput
  }

  export type dasarScalarWhereWithAggregatesInput = {
    AND?: dasarScalarWhereWithAggregatesInput | dasarScalarWhereWithAggregatesInput[]
    OR?: dasarScalarWhereWithAggregatesInput[]
    NOT?: dasarScalarWhereWithAggregatesInput | dasarScalarWhereWithAggregatesInput[]
    dasar_id?: IntWithAggregatesFilter<"dasar"> | number
    dasar_isi?: StringWithAggregatesFilter<"dasar"> | string
    dasar_opd?: IntWithAggregatesFilter<"dasar"> | number
    dasar_active?: BoolWithAggregatesFilter<"dasar"> | boolean
    dasar_created?: DateTimeWithAggregatesFilter<"dasar"> | Date | string
    dasar_updated?: DateTimeWithAggregatesFilter<"dasar"> | Date | string
    dasar_deleted?: DateTimeNullableWithAggregatesFilter<"dasar"> | Date | string | null
  }

  export type sptWhereInput = {
    AND?: sptWhereInput | sptWhereInput[]
    OR?: sptWhereInput[]
    NOT?: sptWhereInput | sptWhereInput[]
    spt_id?: IntFilter<"spt"> | number
    spt_seq?: IntFilter<"spt"> | number
    spt_tahun?: IntFilter<"spt"> | number
    spt_nomor?: StringFilter<"spt"> | string
    spt_opd?: IntFilter<"spt"> | number
    spt_kota_asal?: IntFilter<"spt"> | number
    spt_kota_tujuan?: IntFilter<"spt"> | number
    spt_kota_tujuan2?: IntNullableFilter<"spt"> | number | null
    spt_tempat_tujuan?: StringFilter<"spt"> | string
    spt_via?: IntFilter<"spt"> | number
    spt_tgl_brkt?: DateTimeFilter<"spt"> | Date | string
    spt_tgl_kembali?: DateTimeFilter<"spt"> | Date | string
    spt_lama?: IntFilter<"spt"> | number
    spt_perihal?: StringFilter<"spt"> | string
    spt_kategori?: IntFilter<"spt"> | number
    spt_kegiatan?: IntFilter<"spt"> | number
    spt_sumber_dana?: IntFilter<"spt"> | number
    spt_pj?: IntFilter<"spt"> | number
    spt_pj2?: IntFilter<"spt"> | number
    spt_dasar?: StringNullableFilter<"spt"> | string | null
    spt_status?: IntFilter<"spt"> | number
    spt_created?: DateTimeFilter<"spt"> | Date | string
    spt_updated?: DateTimeFilter<"spt"> | Date | string
    spt_deleted?: DateTimeNullableFilter<"spt"> | Date | string | null
    kotaKota_id?: IntNullableFilter<"spt"> | number | null
    spt_pegawai?: Spt_pegawaiListRelationFilter
    users_pj?: XOR<UsersRelationFilter, usersWhereInput>
    users_pj2?: XOR<UsersRelationFilter, usersWhereInput>
    kota_asal?: XOR<KotaRelationFilter, kotaWhereInput>
    kota_tujuan?: XOR<KotaRelationFilter, kotaWhereInput>
    kota_tujuan2?: XOR<KotaNullableRelationFilter, kotaWhereInput> | null
    opd?: XOR<OpdRelationFilter, opdWhereInput>
    kegiatan?: XOR<KegiatanRelationFilter, kegiatanWhereInput>
    sumber_dana?: XOR<SumberdanaRelationFilter, sumberdanaWhereInput>
    kategori?: XOR<KategoriRelationFilter, kategoriWhereInput>
    kota?: XOR<KotaNullableRelationFilter, kotaWhereInput> | null
  }

  export type sptOrderByWithRelationInput = {
    spt_id?: SortOrder
    spt_seq?: SortOrder
    spt_tahun?: SortOrder
    spt_nomor?: SortOrder
    spt_opd?: SortOrder
    spt_kota_asal?: SortOrder
    spt_kota_tujuan?: SortOrder
    spt_kota_tujuan2?: SortOrderInput | SortOrder
    spt_tempat_tujuan?: SortOrder
    spt_via?: SortOrder
    spt_tgl_brkt?: SortOrder
    spt_tgl_kembali?: SortOrder
    spt_lama?: SortOrder
    spt_perihal?: SortOrder
    spt_kategori?: SortOrder
    spt_kegiatan?: SortOrder
    spt_sumber_dana?: SortOrder
    spt_pj?: SortOrder
    spt_pj2?: SortOrder
    spt_dasar?: SortOrderInput | SortOrder
    spt_status?: SortOrder
    spt_created?: SortOrder
    spt_updated?: SortOrder
    spt_deleted?: SortOrderInput | SortOrder
    kotaKota_id?: SortOrderInput | SortOrder
    spt_pegawai?: spt_pegawaiOrderByRelationAggregateInput
    users_pj?: usersOrderByWithRelationInput
    users_pj2?: usersOrderByWithRelationInput
    kota_asal?: kotaOrderByWithRelationInput
    kota_tujuan?: kotaOrderByWithRelationInput
    kota_tujuan2?: kotaOrderByWithRelationInput
    opd?: opdOrderByWithRelationInput
    kegiatan?: kegiatanOrderByWithRelationInput
    sumber_dana?: sumberdanaOrderByWithRelationInput
    kategori?: kategoriOrderByWithRelationInput
    kota?: kotaOrderByWithRelationInput
  }

  export type sptWhereUniqueInput = Prisma.AtLeast<{
    spt_id?: number
    spt_nomor_spt_opd?: sptSpt_nomorSpt_opdCompoundUniqueInput
    sptUnique?: sptSptUniqueCompoundUniqueInput
    AND?: sptWhereInput | sptWhereInput[]
    OR?: sptWhereInput[]
    NOT?: sptWhereInput | sptWhereInput[]
    spt_seq?: IntFilter<"spt"> | number
    spt_tahun?: IntFilter<"spt"> | number
    spt_nomor?: StringFilter<"spt"> | string
    spt_opd?: IntFilter<"spt"> | number
    spt_kota_asal?: IntFilter<"spt"> | number
    spt_kota_tujuan?: IntFilter<"spt"> | number
    spt_kota_tujuan2?: IntNullableFilter<"spt"> | number | null
    spt_tempat_tujuan?: StringFilter<"spt"> | string
    spt_via?: IntFilter<"spt"> | number
    spt_tgl_brkt?: DateTimeFilter<"spt"> | Date | string
    spt_tgl_kembali?: DateTimeFilter<"spt"> | Date | string
    spt_lama?: IntFilter<"spt"> | number
    spt_perihal?: StringFilter<"spt"> | string
    spt_kategori?: IntFilter<"spt"> | number
    spt_kegiatan?: IntFilter<"spt"> | number
    spt_sumber_dana?: IntFilter<"spt"> | number
    spt_pj?: IntFilter<"spt"> | number
    spt_pj2?: IntFilter<"spt"> | number
    spt_dasar?: StringNullableFilter<"spt"> | string | null
    spt_status?: IntFilter<"spt"> | number
    spt_created?: DateTimeFilter<"spt"> | Date | string
    spt_updated?: DateTimeFilter<"spt"> | Date | string
    spt_deleted?: DateTimeNullableFilter<"spt"> | Date | string | null
    kotaKota_id?: IntNullableFilter<"spt"> | number | null
    spt_pegawai?: Spt_pegawaiListRelationFilter
    users_pj?: XOR<UsersRelationFilter, usersWhereInput>
    users_pj2?: XOR<UsersRelationFilter, usersWhereInput>
    kota_asal?: XOR<KotaRelationFilter, kotaWhereInput>
    kota_tujuan?: XOR<KotaRelationFilter, kotaWhereInput>
    kota_tujuan2?: XOR<KotaNullableRelationFilter, kotaWhereInput> | null
    opd?: XOR<OpdRelationFilter, opdWhereInput>
    kegiatan?: XOR<KegiatanRelationFilter, kegiatanWhereInput>
    sumber_dana?: XOR<SumberdanaRelationFilter, sumberdanaWhereInput>
    kategori?: XOR<KategoriRelationFilter, kategoriWhereInput>
    kota?: XOR<KotaNullableRelationFilter, kotaWhereInput> | null
  }, "spt_id" | "spt_nomor_spt_opd" | "sptUnique">

  export type sptOrderByWithAggregationInput = {
    spt_id?: SortOrder
    spt_seq?: SortOrder
    spt_tahun?: SortOrder
    spt_nomor?: SortOrder
    spt_opd?: SortOrder
    spt_kota_asal?: SortOrder
    spt_kota_tujuan?: SortOrder
    spt_kota_tujuan2?: SortOrderInput | SortOrder
    spt_tempat_tujuan?: SortOrder
    spt_via?: SortOrder
    spt_tgl_brkt?: SortOrder
    spt_tgl_kembali?: SortOrder
    spt_lama?: SortOrder
    spt_perihal?: SortOrder
    spt_kategori?: SortOrder
    spt_kegiatan?: SortOrder
    spt_sumber_dana?: SortOrder
    spt_pj?: SortOrder
    spt_pj2?: SortOrder
    spt_dasar?: SortOrderInput | SortOrder
    spt_status?: SortOrder
    spt_created?: SortOrder
    spt_updated?: SortOrder
    spt_deleted?: SortOrderInput | SortOrder
    kotaKota_id?: SortOrderInput | SortOrder
    _count?: sptCountOrderByAggregateInput
    _avg?: sptAvgOrderByAggregateInput
    _max?: sptMaxOrderByAggregateInput
    _min?: sptMinOrderByAggregateInput
    _sum?: sptSumOrderByAggregateInput
  }

  export type sptScalarWhereWithAggregatesInput = {
    AND?: sptScalarWhereWithAggregatesInput | sptScalarWhereWithAggregatesInput[]
    OR?: sptScalarWhereWithAggregatesInput[]
    NOT?: sptScalarWhereWithAggregatesInput | sptScalarWhereWithAggregatesInput[]
    spt_id?: IntWithAggregatesFilter<"spt"> | number
    spt_seq?: IntWithAggregatesFilter<"spt"> | number
    spt_tahun?: IntWithAggregatesFilter<"spt"> | number
    spt_nomor?: StringWithAggregatesFilter<"spt"> | string
    spt_opd?: IntWithAggregatesFilter<"spt"> | number
    spt_kota_asal?: IntWithAggregatesFilter<"spt"> | number
    spt_kota_tujuan?: IntWithAggregatesFilter<"spt"> | number
    spt_kota_tujuan2?: IntNullableWithAggregatesFilter<"spt"> | number | null
    spt_tempat_tujuan?: StringWithAggregatesFilter<"spt"> | string
    spt_via?: IntWithAggregatesFilter<"spt"> | number
    spt_tgl_brkt?: DateTimeWithAggregatesFilter<"spt"> | Date | string
    spt_tgl_kembali?: DateTimeWithAggregatesFilter<"spt"> | Date | string
    spt_lama?: IntWithAggregatesFilter<"spt"> | number
    spt_perihal?: StringWithAggregatesFilter<"spt"> | string
    spt_kategori?: IntWithAggregatesFilter<"spt"> | number
    spt_kegiatan?: IntWithAggregatesFilter<"spt"> | number
    spt_sumber_dana?: IntWithAggregatesFilter<"spt"> | number
    spt_pj?: IntWithAggregatesFilter<"spt"> | number
    spt_pj2?: IntWithAggregatesFilter<"spt"> | number
    spt_dasar?: StringNullableWithAggregatesFilter<"spt"> | string | null
    spt_status?: IntWithAggregatesFilter<"spt"> | number
    spt_created?: DateTimeWithAggregatesFilter<"spt"> | Date | string
    spt_updated?: DateTimeWithAggregatesFilter<"spt"> | Date | string
    spt_deleted?: DateTimeNullableWithAggregatesFilter<"spt"> | Date | string | null
    kotaKota_id?: IntNullableWithAggregatesFilter<"spt"> | number | null
  }

  export type spt_pegawaiWhereInput = {
    AND?: spt_pegawaiWhereInput | spt_pegawaiWhereInput[]
    OR?: spt_pegawaiWhereInput[]
    NOT?: spt_pegawaiWhereInput | spt_pegawaiWhereInput[]
    sp_id?: IntFilter<"spt_pegawai"> | number
    sp_spt?: IntFilter<"spt_pegawai"> | number
    sp_user?: IntFilter<"spt_pegawai"> | number
    sp_nomor_sppd?: StringFilter<"spt_pegawai"> | string
    sp_seq?: IntFilter<"spt_pegawai"> | number
    spt?: XOR<SptRelationFilter, sptWhereInput>
    users?: XOR<UsersRelationFilter, usersWhereInput>
    biaya?: BiayaListRelationFilter
    npd?: NpdListRelationFilter
    laporan?: XOR<LaporanNullableRelationFilter, laporanWhereInput> | null
    kwitansi?: XOR<KwitansiNullableRelationFilter, kwitansiWhereInput> | null
  }

  export type spt_pegawaiOrderByWithRelationInput = {
    sp_id?: SortOrder
    sp_spt?: SortOrder
    sp_user?: SortOrder
    sp_nomor_sppd?: SortOrder
    sp_seq?: SortOrder
    spt?: sptOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    biaya?: biayaOrderByRelationAggregateInput
    npd?: npdOrderByRelationAggregateInput
    laporan?: laporanOrderByWithRelationInput
    kwitansi?: kwitansiOrderByWithRelationInput
  }

  export type spt_pegawaiWhereUniqueInput = Prisma.AtLeast<{
    sp_id?: number
    sp_nomor_sppd?: string
    sp_spt_sp_user?: spt_pegawaiSp_sptSp_userCompoundUniqueInput
    AND?: spt_pegawaiWhereInput | spt_pegawaiWhereInput[]
    OR?: spt_pegawaiWhereInput[]
    NOT?: spt_pegawaiWhereInput | spt_pegawaiWhereInput[]
    sp_spt?: IntFilter<"spt_pegawai"> | number
    sp_user?: IntFilter<"spt_pegawai"> | number
    sp_seq?: IntFilter<"spt_pegawai"> | number
    spt?: XOR<SptRelationFilter, sptWhereInput>
    users?: XOR<UsersRelationFilter, usersWhereInput>
    biaya?: BiayaListRelationFilter
    npd?: NpdListRelationFilter
    laporan?: XOR<LaporanNullableRelationFilter, laporanWhereInput> | null
    kwitansi?: XOR<KwitansiNullableRelationFilter, kwitansiWhereInput> | null
  }, "sp_id" | "sp_nomor_sppd" | "sp_spt_sp_user">

  export type spt_pegawaiOrderByWithAggregationInput = {
    sp_id?: SortOrder
    sp_spt?: SortOrder
    sp_user?: SortOrder
    sp_nomor_sppd?: SortOrder
    sp_seq?: SortOrder
    _count?: spt_pegawaiCountOrderByAggregateInput
    _avg?: spt_pegawaiAvgOrderByAggregateInput
    _max?: spt_pegawaiMaxOrderByAggregateInput
    _min?: spt_pegawaiMinOrderByAggregateInput
    _sum?: spt_pegawaiSumOrderByAggregateInput
  }

  export type spt_pegawaiScalarWhereWithAggregatesInput = {
    AND?: spt_pegawaiScalarWhereWithAggregatesInput | spt_pegawaiScalarWhereWithAggregatesInput[]
    OR?: spt_pegawaiScalarWhereWithAggregatesInput[]
    NOT?: spt_pegawaiScalarWhereWithAggregatesInput | spt_pegawaiScalarWhereWithAggregatesInput[]
    sp_id?: IntWithAggregatesFilter<"spt_pegawai"> | number
    sp_spt?: IntWithAggregatesFilter<"spt_pegawai"> | number
    sp_user?: IntWithAggregatesFilter<"spt_pegawai"> | number
    sp_nomor_sppd?: StringWithAggregatesFilter<"spt_pegawai"> | string
    sp_seq?: IntWithAggregatesFilter<"spt_pegawai"> | number
  }

  export type npdWhereInput = {
    AND?: npdWhereInput | npdWhereInput[]
    OR?: npdWhereInput[]
    NOT?: npdWhereInput | npdWhereInput[]
    npd_spt_pegawai?: IntFilter<"npd"> | number
    npd_tgl?: DateTimeFilter<"npd"> | Date | string
    npd_nominal?: BigIntFilter<"npd"> | bigint | number
    npd_created?: DateTimeFilter<"npd"> | Date | string
    npd_updated?: DateTimeFilter<"npd"> | Date | string
    spt_pegawai?: XOR<Spt_pegawaiRelationFilter, spt_pegawaiWhereInput>
  }

  export type npdOrderByWithRelationInput = {
    npd_spt_pegawai?: SortOrder
    npd_tgl?: SortOrder
    npd_nominal?: SortOrder
    npd_created?: SortOrder
    npd_updated?: SortOrder
    spt_pegawai?: spt_pegawaiOrderByWithRelationInput
  }

  export type npdWhereUniqueInput = Prisma.AtLeast<{
    npd_spt_pegawai?: number
    AND?: npdWhereInput | npdWhereInput[]
    OR?: npdWhereInput[]
    NOT?: npdWhereInput | npdWhereInput[]
    npd_tgl?: DateTimeFilter<"npd"> | Date | string
    npd_nominal?: BigIntFilter<"npd"> | bigint | number
    npd_created?: DateTimeFilter<"npd"> | Date | string
    npd_updated?: DateTimeFilter<"npd"> | Date | string
    spt_pegawai?: XOR<Spt_pegawaiRelationFilter, spt_pegawaiWhereInput>
  }, "npd_spt_pegawai">

  export type npdOrderByWithAggregationInput = {
    npd_spt_pegawai?: SortOrder
    npd_tgl?: SortOrder
    npd_nominal?: SortOrder
    npd_created?: SortOrder
    npd_updated?: SortOrder
    _count?: npdCountOrderByAggregateInput
    _avg?: npdAvgOrderByAggregateInput
    _max?: npdMaxOrderByAggregateInput
    _min?: npdMinOrderByAggregateInput
    _sum?: npdSumOrderByAggregateInput
  }

  export type npdScalarWhereWithAggregatesInput = {
    AND?: npdScalarWhereWithAggregatesInput | npdScalarWhereWithAggregatesInput[]
    OR?: npdScalarWhereWithAggregatesInput[]
    NOT?: npdScalarWhereWithAggregatesInput | npdScalarWhereWithAggregatesInput[]
    npd_spt_pegawai?: IntWithAggregatesFilter<"npd"> | number
    npd_tgl?: DateTimeWithAggregatesFilter<"npd"> | Date | string
    npd_nominal?: BigIntWithAggregatesFilter<"npd"> | bigint | number
    npd_created?: DateTimeWithAggregatesFilter<"npd"> | Date | string
    npd_updated?: DateTimeWithAggregatesFilter<"npd"> | Date | string
  }

  export type biayaWhereInput = {
    AND?: biayaWhereInput | biayaWhereInput[]
    OR?: biayaWhereInput[]
    NOT?: biayaWhereInput | biayaWhereInput[]
    biaya_komponen?: IntFilter<"biaya"> | number
    biaya_standard?: IntFilter<"biaya"> | number
    biaya_nilai?: IntFilter<"biaya"> | number
    biaya_keterangan1?: StringNullableFilter<"biaya"> | string | null
    biaya_keterangan2?: StringNullableFilter<"biaya"> | string | null
    biaya_keterangan3?: StringNullableFilter<"biaya"> | string | null
    biaya_keterangan4?: StringNullableFilter<"biaya"> | string | null
    biaya_bukti?: StringNullableFilter<"biaya"> | string | null
    biaya_created?: DateTimeFilter<"biaya"> | Date | string
    biaya_updated?: DateTimeNullableFilter<"biaya"> | Date | string | null
    biaya_spt_pegawai?: IntFilter<"biaya"> | number
    spt_pegawai?: XOR<Spt_pegawaiRelationFilter, spt_pegawaiWhereInput>
  }

  export type biayaOrderByWithRelationInput = {
    biaya_komponen?: SortOrder
    biaya_standard?: SortOrder
    biaya_nilai?: SortOrder
    biaya_keterangan1?: SortOrderInput | SortOrder
    biaya_keterangan2?: SortOrderInput | SortOrder
    biaya_keterangan3?: SortOrderInput | SortOrder
    biaya_keterangan4?: SortOrderInput | SortOrder
    biaya_bukti?: SortOrderInput | SortOrder
    biaya_created?: SortOrder
    biaya_updated?: SortOrderInput | SortOrder
    biaya_spt_pegawai?: SortOrder
    spt_pegawai?: spt_pegawaiOrderByWithRelationInput
  }

  export type biayaWhereUniqueInput = Prisma.AtLeast<{
    biaya_komponen_biaya_spt_pegawai?: biayaBiaya_komponenBiaya_spt_pegawaiCompoundUniqueInput
    AND?: biayaWhereInput | biayaWhereInput[]
    OR?: biayaWhereInput[]
    NOT?: biayaWhereInput | biayaWhereInput[]
    biaya_komponen?: IntFilter<"biaya"> | number
    biaya_standard?: IntFilter<"biaya"> | number
    biaya_nilai?: IntFilter<"biaya"> | number
    biaya_keterangan1?: StringNullableFilter<"biaya"> | string | null
    biaya_keterangan2?: StringNullableFilter<"biaya"> | string | null
    biaya_keterangan3?: StringNullableFilter<"biaya"> | string | null
    biaya_keterangan4?: StringNullableFilter<"biaya"> | string | null
    biaya_bukti?: StringNullableFilter<"biaya"> | string | null
    biaya_created?: DateTimeFilter<"biaya"> | Date | string
    biaya_updated?: DateTimeNullableFilter<"biaya"> | Date | string | null
    biaya_spt_pegawai?: IntFilter<"biaya"> | number
    spt_pegawai?: XOR<Spt_pegawaiRelationFilter, spt_pegawaiWhereInput>
  }, "biaya_komponen_biaya_spt_pegawai">

  export type biayaOrderByWithAggregationInput = {
    biaya_komponen?: SortOrder
    biaya_standard?: SortOrder
    biaya_nilai?: SortOrder
    biaya_keterangan1?: SortOrderInput | SortOrder
    biaya_keterangan2?: SortOrderInput | SortOrder
    biaya_keterangan3?: SortOrderInput | SortOrder
    biaya_keterangan4?: SortOrderInput | SortOrder
    biaya_bukti?: SortOrderInput | SortOrder
    biaya_created?: SortOrder
    biaya_updated?: SortOrderInput | SortOrder
    biaya_spt_pegawai?: SortOrder
    _count?: biayaCountOrderByAggregateInput
    _avg?: biayaAvgOrderByAggregateInput
    _max?: biayaMaxOrderByAggregateInput
    _min?: biayaMinOrderByAggregateInput
    _sum?: biayaSumOrderByAggregateInput
  }

  export type biayaScalarWhereWithAggregatesInput = {
    AND?: biayaScalarWhereWithAggregatesInput | biayaScalarWhereWithAggregatesInput[]
    OR?: biayaScalarWhereWithAggregatesInput[]
    NOT?: biayaScalarWhereWithAggregatesInput | biayaScalarWhereWithAggregatesInput[]
    biaya_komponen?: IntWithAggregatesFilter<"biaya"> | number
    biaya_standard?: IntWithAggregatesFilter<"biaya"> | number
    biaya_nilai?: IntWithAggregatesFilter<"biaya"> | number
    biaya_keterangan1?: StringNullableWithAggregatesFilter<"biaya"> | string | null
    biaya_keterangan2?: StringNullableWithAggregatesFilter<"biaya"> | string | null
    biaya_keterangan3?: StringNullableWithAggregatesFilter<"biaya"> | string | null
    biaya_keterangan4?: StringNullableWithAggregatesFilter<"biaya"> | string | null
    biaya_bukti?: StringNullableWithAggregatesFilter<"biaya"> | string | null
    biaya_created?: DateTimeWithAggregatesFilter<"biaya"> | Date | string
    biaya_updated?: DateTimeNullableWithAggregatesFilter<"biaya"> | Date | string | null
    biaya_spt_pegawai?: IntWithAggregatesFilter<"biaya"> | number
  }

  export type provinsiWhereInput = {
    AND?: provinsiWhereInput | provinsiWhereInput[]
    OR?: provinsiWhereInput[]
    NOT?: provinsiWhereInput | provinsiWhereInput[]
    provinsi_id?: IntFilter<"provinsi"> | number
    provinsi_nama?: StringFilter<"provinsi"> | string
    kota?: KotaListRelationFilter
  }

  export type provinsiOrderByWithRelationInput = {
    provinsi_id?: SortOrder
    provinsi_nama?: SortOrder
    kota?: kotaOrderByRelationAggregateInput
  }

  export type provinsiWhereUniqueInput = Prisma.AtLeast<{
    provinsi_id?: number
    AND?: provinsiWhereInput | provinsiWhereInput[]
    OR?: provinsiWhereInput[]
    NOT?: provinsiWhereInput | provinsiWhereInput[]
    provinsi_nama?: StringFilter<"provinsi"> | string
    kota?: KotaListRelationFilter
  }, "provinsi_id">

  export type provinsiOrderByWithAggregationInput = {
    provinsi_id?: SortOrder
    provinsi_nama?: SortOrder
    _count?: provinsiCountOrderByAggregateInput
    _avg?: provinsiAvgOrderByAggregateInput
    _max?: provinsiMaxOrderByAggregateInput
    _min?: provinsiMinOrderByAggregateInput
    _sum?: provinsiSumOrderByAggregateInput
  }

  export type provinsiScalarWhereWithAggregatesInput = {
    AND?: provinsiScalarWhereWithAggregatesInput | provinsiScalarWhereWithAggregatesInput[]
    OR?: provinsiScalarWhereWithAggregatesInput[]
    NOT?: provinsiScalarWhereWithAggregatesInput | provinsiScalarWhereWithAggregatesInput[]
    provinsi_id?: IntWithAggregatesFilter<"provinsi"> | number
    provinsi_nama?: StringWithAggregatesFilter<"provinsi"> | string
  }

  export type kotaWhereInput = {
    AND?: kotaWhereInput | kotaWhereInput[]
    OR?: kotaWhereInput[]
    NOT?: kotaWhereInput | kotaWhereInput[]
    kota_id?: IntFilter<"kota"> | number
    kota_provinsi?: IntFilter<"kota"> | number
    kota_nama?: StringFilter<"kota"> | string
    kota_dalam_daerah?: BoolFilter<"kota"> | boolean
    kota_created?: DateTimeFilter<"kota"> | Date | string
    kota_updated?: DateTimeFilter<"kota"> | Date | string
    kota_deleted?: DateTimeNullableFilter<"kota"> | Date | string | null
    kota_asal?: SptListRelationFilter
    kota_tujuan?: SptListRelationFilter
    kota_tujuan2?: SptListRelationFilter
    spt?: SptListRelationFilter
    provinsi?: XOR<ProvinsiNullableRelationFilter, provinsiWhereInput> | null
    standard_asal?: StandardListRelationFilter
    standard_tujuan?: StandardListRelationFilter
  }

  export type kotaOrderByWithRelationInput = {
    kota_id?: SortOrder
    kota_provinsi?: SortOrder
    kota_nama?: SortOrder
    kota_dalam_daerah?: SortOrder
    kota_created?: SortOrder
    kota_updated?: SortOrder
    kota_deleted?: SortOrderInput | SortOrder
    kota_asal?: sptOrderByRelationAggregateInput
    kota_tujuan?: sptOrderByRelationAggregateInput
    kota_tujuan2?: sptOrderByRelationAggregateInput
    spt?: sptOrderByRelationAggregateInput
    provinsi?: provinsiOrderByWithRelationInput
    standard_asal?: standardOrderByRelationAggregateInput
    standard_tujuan?: standardOrderByRelationAggregateInput
  }

  export type kotaWhereUniqueInput = Prisma.AtLeast<{
    kota_id?: number
    AND?: kotaWhereInput | kotaWhereInput[]
    OR?: kotaWhereInput[]
    NOT?: kotaWhereInput | kotaWhereInput[]
    kota_provinsi?: IntFilter<"kota"> | number
    kota_nama?: StringFilter<"kota"> | string
    kota_dalam_daerah?: BoolFilter<"kota"> | boolean
    kota_created?: DateTimeFilter<"kota"> | Date | string
    kota_updated?: DateTimeFilter<"kota"> | Date | string
    kota_deleted?: DateTimeNullableFilter<"kota"> | Date | string | null
    kota_asal?: SptListRelationFilter
    kota_tujuan?: SptListRelationFilter
    kota_tujuan2?: SptListRelationFilter
    spt?: SptListRelationFilter
    provinsi?: XOR<ProvinsiNullableRelationFilter, provinsiWhereInput> | null
    standard_asal?: StandardListRelationFilter
    standard_tujuan?: StandardListRelationFilter
  }, "kota_id">

  export type kotaOrderByWithAggregationInput = {
    kota_id?: SortOrder
    kota_provinsi?: SortOrder
    kota_nama?: SortOrder
    kota_dalam_daerah?: SortOrder
    kota_created?: SortOrder
    kota_updated?: SortOrder
    kota_deleted?: SortOrderInput | SortOrder
    _count?: kotaCountOrderByAggregateInput
    _avg?: kotaAvgOrderByAggregateInput
    _max?: kotaMaxOrderByAggregateInput
    _min?: kotaMinOrderByAggregateInput
    _sum?: kotaSumOrderByAggregateInput
  }

  export type kotaScalarWhereWithAggregatesInput = {
    AND?: kotaScalarWhereWithAggregatesInput | kotaScalarWhereWithAggregatesInput[]
    OR?: kotaScalarWhereWithAggregatesInput[]
    NOT?: kotaScalarWhereWithAggregatesInput | kotaScalarWhereWithAggregatesInput[]
    kota_id?: IntWithAggregatesFilter<"kota"> | number
    kota_provinsi?: IntWithAggregatesFilter<"kota"> | number
    kota_nama?: StringWithAggregatesFilter<"kota"> | string
    kota_dalam_daerah?: BoolWithAggregatesFilter<"kota"> | boolean
    kota_created?: DateTimeWithAggregatesFilter<"kota"> | Date | string
    kota_updated?: DateTimeWithAggregatesFilter<"kota"> | Date | string
    kota_deleted?: DateTimeNullableWithAggregatesFilter<"kota"> | Date | string | null
  }

  export type laporanWhereInput = {
    AND?: laporanWhereInput | laporanWhereInput[]
    OR?: laporanWhereInput[]
    NOT?: laporanWhereInput | laporanWhereInput[]
    laporan_id?: IntFilter<"laporan"> | number
    laporan_spt_pegawai?: IntFilter<"laporan"> | number
    laporan_isi?: StringFilter<"laporan"> | string
    laporan_created?: DateTimeFilter<"laporan"> | Date | string
    laporan_updated?: DateTimeFilter<"laporan"> | Date | string
    spt_pegawai?: XOR<Spt_pegawaiRelationFilter, spt_pegawaiWhereInput>
  }

  export type laporanOrderByWithRelationInput = {
    laporan_id?: SortOrder
    laporan_spt_pegawai?: SortOrder
    laporan_isi?: SortOrder
    laporan_created?: SortOrder
    laporan_updated?: SortOrder
    spt_pegawai?: spt_pegawaiOrderByWithRelationInput
  }

  export type laporanWhereUniqueInput = Prisma.AtLeast<{
    laporan_id?: number
    laporan_spt_pegawai?: number
    AND?: laporanWhereInput | laporanWhereInput[]
    OR?: laporanWhereInput[]
    NOT?: laporanWhereInput | laporanWhereInput[]
    laporan_isi?: StringFilter<"laporan"> | string
    laporan_created?: DateTimeFilter<"laporan"> | Date | string
    laporan_updated?: DateTimeFilter<"laporan"> | Date | string
    spt_pegawai?: XOR<Spt_pegawaiRelationFilter, spt_pegawaiWhereInput>
  }, "laporan_id" | "laporan_spt_pegawai">

  export type laporanOrderByWithAggregationInput = {
    laporan_id?: SortOrder
    laporan_spt_pegawai?: SortOrder
    laporan_isi?: SortOrder
    laporan_created?: SortOrder
    laporan_updated?: SortOrder
    _count?: laporanCountOrderByAggregateInput
    _avg?: laporanAvgOrderByAggregateInput
    _max?: laporanMaxOrderByAggregateInput
    _min?: laporanMinOrderByAggregateInput
    _sum?: laporanSumOrderByAggregateInput
  }

  export type laporanScalarWhereWithAggregatesInput = {
    AND?: laporanScalarWhereWithAggregatesInput | laporanScalarWhereWithAggregatesInput[]
    OR?: laporanScalarWhereWithAggregatesInput[]
    NOT?: laporanScalarWhereWithAggregatesInput | laporanScalarWhereWithAggregatesInput[]
    laporan_id?: IntWithAggregatesFilter<"laporan"> | number
    laporan_spt_pegawai?: IntWithAggregatesFilter<"laporan"> | number
    laporan_isi?: StringWithAggregatesFilter<"laporan"> | string
    laporan_created?: DateTimeWithAggregatesFilter<"laporan"> | Date | string
    laporan_updated?: DateTimeWithAggregatesFilter<"laporan"> | Date | string
  }

  export type settingWhereInput = {
    AND?: settingWhereInput | settingWhereInput[]
    OR?: settingWhereInput[]
    NOT?: settingWhereInput | settingWhereInput[]
    setting_id?: StringFilter<"setting"> | string
    setting_opd?: IntFilter<"setting"> | number
    setting_value?: StringFilter<"setting"> | string
    setting_lastupdate?: DateTimeFilter<"setting"> | Date | string
    opd?: XOR<OpdRelationFilter, opdWhereInput>
  }

  export type settingOrderByWithRelationInput = {
    setting_id?: SortOrder
    setting_opd?: SortOrder
    setting_value?: SortOrder
    setting_lastupdate?: SortOrder
    opd?: opdOrderByWithRelationInput
  }

  export type settingWhereUniqueInput = Prisma.AtLeast<{
    setting_id_setting_opd?: settingSetting_idSetting_opdCompoundUniqueInput
    AND?: settingWhereInput | settingWhereInput[]
    OR?: settingWhereInput[]
    NOT?: settingWhereInput | settingWhereInput[]
    setting_id?: StringFilter<"setting"> | string
    setting_opd?: IntFilter<"setting"> | number
    setting_value?: StringFilter<"setting"> | string
    setting_lastupdate?: DateTimeFilter<"setting"> | Date | string
    opd?: XOR<OpdRelationFilter, opdWhereInput>
  }, "setting_id_setting_opd">

  export type settingOrderByWithAggregationInput = {
    setting_id?: SortOrder
    setting_opd?: SortOrder
    setting_value?: SortOrder
    setting_lastupdate?: SortOrder
    _count?: settingCountOrderByAggregateInput
    _avg?: settingAvgOrderByAggregateInput
    _max?: settingMaxOrderByAggregateInput
    _min?: settingMinOrderByAggregateInput
    _sum?: settingSumOrderByAggregateInput
  }

  export type settingScalarWhereWithAggregatesInput = {
    AND?: settingScalarWhereWithAggregatesInput | settingScalarWhereWithAggregatesInput[]
    OR?: settingScalarWhereWithAggregatesInput[]
    NOT?: settingScalarWhereWithAggregatesInput | settingScalarWhereWithAggregatesInput[]
    setting_id?: StringWithAggregatesFilter<"setting"> | string
    setting_opd?: IntWithAggregatesFilter<"setting"> | number
    setting_value?: StringWithAggregatesFilter<"setting"> | string
    setting_lastupdate?: DateTimeWithAggregatesFilter<"setting"> | Date | string
  }

  export type kegiatanWhereInput = {
    AND?: kegiatanWhereInput | kegiatanWhereInput[]
    OR?: kegiatanWhereInput[]
    NOT?: kegiatanWhereInput | kegiatanWhereInput[]
    kegiatan_id?: IntFilter<"kegiatan"> | number
    kegiatan_opd?: IntFilter<"kegiatan"> | number
    kegiatan_kode?: StringFilter<"kegiatan"> | string
    kegiatan_program?: StringFilter<"kegiatan"> | string
    kegiatan_nama?: StringFilter<"kegiatan"> | string
    kegiatan_subkegiatan?: StringFilter<"kegiatan"> | string
    kegiatan_created?: DateTimeFilter<"kegiatan"> | Date | string
    kegiatan_updated?: DateTimeFilter<"kegiatan"> | Date | string
    kegiatan_deleted?: DateTimeNullableFilter<"kegiatan"> | Date | string | null
    sumberdana?: SumberdanaListRelationFilter
    spt?: SptListRelationFilter
    opd?: XOR<OpdRelationFilter, opdWhereInput>
  }

  export type kegiatanOrderByWithRelationInput = {
    kegiatan_id?: SortOrder
    kegiatan_opd?: SortOrder
    kegiatan_kode?: SortOrder
    kegiatan_program?: SortOrder
    kegiatan_nama?: SortOrder
    kegiatan_subkegiatan?: SortOrder
    kegiatan_created?: SortOrder
    kegiatan_updated?: SortOrder
    kegiatan_deleted?: SortOrderInput | SortOrder
    sumberdana?: sumberdanaOrderByRelationAggregateInput
    spt?: sptOrderByRelationAggregateInput
    opd?: opdOrderByWithRelationInput
  }

  export type kegiatanWhereUniqueInput = Prisma.AtLeast<{
    kegiatan_id?: number
    kegiatan_kode?: string
    AND?: kegiatanWhereInput | kegiatanWhereInput[]
    OR?: kegiatanWhereInput[]
    NOT?: kegiatanWhereInput | kegiatanWhereInput[]
    kegiatan_opd?: IntFilter<"kegiatan"> | number
    kegiatan_program?: StringFilter<"kegiatan"> | string
    kegiatan_nama?: StringFilter<"kegiatan"> | string
    kegiatan_subkegiatan?: StringFilter<"kegiatan"> | string
    kegiatan_created?: DateTimeFilter<"kegiatan"> | Date | string
    kegiatan_updated?: DateTimeFilter<"kegiatan"> | Date | string
    kegiatan_deleted?: DateTimeNullableFilter<"kegiatan"> | Date | string | null
    sumberdana?: SumberdanaListRelationFilter
    spt?: SptListRelationFilter
    opd?: XOR<OpdRelationFilter, opdWhereInput>
  }, "kegiatan_id" | "kegiatan_kode">

  export type kegiatanOrderByWithAggregationInput = {
    kegiatan_id?: SortOrder
    kegiatan_opd?: SortOrder
    kegiatan_kode?: SortOrder
    kegiatan_program?: SortOrder
    kegiatan_nama?: SortOrder
    kegiatan_subkegiatan?: SortOrder
    kegiatan_created?: SortOrder
    kegiatan_updated?: SortOrder
    kegiatan_deleted?: SortOrderInput | SortOrder
    _count?: kegiatanCountOrderByAggregateInput
    _avg?: kegiatanAvgOrderByAggregateInput
    _max?: kegiatanMaxOrderByAggregateInput
    _min?: kegiatanMinOrderByAggregateInput
    _sum?: kegiatanSumOrderByAggregateInput
  }

  export type kegiatanScalarWhereWithAggregatesInput = {
    AND?: kegiatanScalarWhereWithAggregatesInput | kegiatanScalarWhereWithAggregatesInput[]
    OR?: kegiatanScalarWhereWithAggregatesInput[]
    NOT?: kegiatanScalarWhereWithAggregatesInput | kegiatanScalarWhereWithAggregatesInput[]
    kegiatan_id?: IntWithAggregatesFilter<"kegiatan"> | number
    kegiatan_opd?: IntWithAggregatesFilter<"kegiatan"> | number
    kegiatan_kode?: StringWithAggregatesFilter<"kegiatan"> | string
    kegiatan_program?: StringWithAggregatesFilter<"kegiatan"> | string
    kegiatan_nama?: StringWithAggregatesFilter<"kegiatan"> | string
    kegiatan_subkegiatan?: StringWithAggregatesFilter<"kegiatan"> | string
    kegiatan_created?: DateTimeWithAggregatesFilter<"kegiatan"> | Date | string
    kegiatan_updated?: DateTimeWithAggregatesFilter<"kegiatan"> | Date | string
    kegiatan_deleted?: DateTimeNullableWithAggregatesFilter<"kegiatan"> | Date | string | null
  }

  export type sumberdanaWhereInput = {
    AND?: sumberdanaWhereInput | sumberdanaWhereInput[]
    OR?: sumberdanaWhereInput[]
    NOT?: sumberdanaWhereInput | sumberdanaWhereInput[]
    sd_id?: IntFilter<"sumberdana"> | number
    sd_tahun?: StringFilter<"sumberdana"> | string
    sd_opd?: IntFilter<"sumberdana"> | number
    sd_kode_rekening?: StringFilter<"sumberdana"> | string
    sd_nama?: StringFilter<"sumberdana"> | string
    sd_kegiatan?: IntFilter<"sumberdana"> | number
    sd_jumlah?: BigIntFilter<"sumberdana"> | bigint | number
    sd_pptk?: IntFilter<"sumberdana"> | number
    sd_pa?: IntFilter<"sumberdana"> | number
    sd_bendahara?: IntFilter<"sumberdana"> | number
    sd_active?: BoolFilter<"sumberdana"> | boolean
    sd_app?: StringFilter<"sumberdana"> | string
    sd_created?: DateTimeFilter<"sumberdana"> | Date | string
    sd_updated?: DateTimeFilter<"sumberdana"> | Date | string
    sd_deleted?: DateTimeNullableFilter<"sumberdana"> | Date | string | null
    opd?: XOR<OpdRelationFilter, opdWhereInput>
    kegiatan?: XOR<KegiatanRelationFilter, kegiatanWhereInput>
    users?: XOR<UsersRelationFilter, usersWhereInput>
    spt?: SptListRelationFilter
    bendahara?: XOR<UsersRelationFilter, usersWhereInput>
    pengguna_anggaran?: XOR<UsersRelationFilter, usersWhereInput>
    ttd_gajian?: Ttd_gajianListRelationFilter
  }

  export type sumberdanaOrderByWithRelationInput = {
    sd_id?: SortOrder
    sd_tahun?: SortOrder
    sd_opd?: SortOrder
    sd_kode_rekening?: SortOrder
    sd_nama?: SortOrder
    sd_kegiatan?: SortOrder
    sd_jumlah?: SortOrder
    sd_pptk?: SortOrder
    sd_pa?: SortOrder
    sd_bendahara?: SortOrder
    sd_active?: SortOrder
    sd_app?: SortOrder
    sd_created?: SortOrder
    sd_updated?: SortOrder
    sd_deleted?: SortOrderInput | SortOrder
    opd?: opdOrderByWithRelationInput
    kegiatan?: kegiatanOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    spt?: sptOrderByRelationAggregateInput
    bendahara?: usersOrderByWithRelationInput
    pengguna_anggaran?: usersOrderByWithRelationInput
    ttd_gajian?: ttd_gajianOrderByRelationAggregateInput
  }

  export type sumberdanaWhereUniqueInput = Prisma.AtLeast<{
    sd_id?: number
    AND?: sumberdanaWhereInput | sumberdanaWhereInput[]
    OR?: sumberdanaWhereInput[]
    NOT?: sumberdanaWhereInput | sumberdanaWhereInput[]
    sd_tahun?: StringFilter<"sumberdana"> | string
    sd_opd?: IntFilter<"sumberdana"> | number
    sd_kode_rekening?: StringFilter<"sumberdana"> | string
    sd_nama?: StringFilter<"sumberdana"> | string
    sd_kegiatan?: IntFilter<"sumberdana"> | number
    sd_jumlah?: BigIntFilter<"sumberdana"> | bigint | number
    sd_pptk?: IntFilter<"sumberdana"> | number
    sd_pa?: IntFilter<"sumberdana"> | number
    sd_bendahara?: IntFilter<"sumberdana"> | number
    sd_active?: BoolFilter<"sumberdana"> | boolean
    sd_app?: StringFilter<"sumberdana"> | string
    sd_created?: DateTimeFilter<"sumberdana"> | Date | string
    sd_updated?: DateTimeFilter<"sumberdana"> | Date | string
    sd_deleted?: DateTimeNullableFilter<"sumberdana"> | Date | string | null
    opd?: XOR<OpdRelationFilter, opdWhereInput>
    kegiatan?: XOR<KegiatanRelationFilter, kegiatanWhereInput>
    users?: XOR<UsersRelationFilter, usersWhereInput>
    spt?: SptListRelationFilter
    bendahara?: XOR<UsersRelationFilter, usersWhereInput>
    pengguna_anggaran?: XOR<UsersRelationFilter, usersWhereInput>
    ttd_gajian?: Ttd_gajianListRelationFilter
  }, "sd_id">

  export type sumberdanaOrderByWithAggregationInput = {
    sd_id?: SortOrder
    sd_tahun?: SortOrder
    sd_opd?: SortOrder
    sd_kode_rekening?: SortOrder
    sd_nama?: SortOrder
    sd_kegiatan?: SortOrder
    sd_jumlah?: SortOrder
    sd_pptk?: SortOrder
    sd_pa?: SortOrder
    sd_bendahara?: SortOrder
    sd_active?: SortOrder
    sd_app?: SortOrder
    sd_created?: SortOrder
    sd_updated?: SortOrder
    sd_deleted?: SortOrderInput | SortOrder
    _count?: sumberdanaCountOrderByAggregateInput
    _avg?: sumberdanaAvgOrderByAggregateInput
    _max?: sumberdanaMaxOrderByAggregateInput
    _min?: sumberdanaMinOrderByAggregateInput
    _sum?: sumberdanaSumOrderByAggregateInput
  }

  export type sumberdanaScalarWhereWithAggregatesInput = {
    AND?: sumberdanaScalarWhereWithAggregatesInput | sumberdanaScalarWhereWithAggregatesInput[]
    OR?: sumberdanaScalarWhereWithAggregatesInput[]
    NOT?: sumberdanaScalarWhereWithAggregatesInput | sumberdanaScalarWhereWithAggregatesInput[]
    sd_id?: IntWithAggregatesFilter<"sumberdana"> | number
    sd_tahun?: StringWithAggregatesFilter<"sumberdana"> | string
    sd_opd?: IntWithAggregatesFilter<"sumberdana"> | number
    sd_kode_rekening?: StringWithAggregatesFilter<"sumberdana"> | string
    sd_nama?: StringWithAggregatesFilter<"sumberdana"> | string
    sd_kegiatan?: IntWithAggregatesFilter<"sumberdana"> | number
    sd_jumlah?: BigIntWithAggregatesFilter<"sumberdana"> | bigint | number
    sd_pptk?: IntWithAggregatesFilter<"sumberdana"> | number
    sd_pa?: IntWithAggregatesFilter<"sumberdana"> | number
    sd_bendahara?: IntWithAggregatesFilter<"sumberdana"> | number
    sd_active?: BoolWithAggregatesFilter<"sumberdana"> | boolean
    sd_app?: StringWithAggregatesFilter<"sumberdana"> | string
    sd_created?: DateTimeWithAggregatesFilter<"sumberdana"> | Date | string
    sd_updated?: DateTimeWithAggregatesFilter<"sumberdana"> | Date | string
    sd_deleted?: DateTimeNullableWithAggregatesFilter<"sumberdana"> | Date | string | null
  }

  export type opdWhereInput = {
    AND?: opdWhereInput | opdWhereInput[]
    OR?: opdWhereInput[]
    NOT?: opdWhereInput | opdWhereInput[]
    opd_id?: IntFilter<"opd"> | number
    opd_nama?: StringFilter<"opd"> | string
    opd_alamat?: StringFilter<"opd"> | string
    opd_email?: StringFilter<"opd"> | string
    opd_telp?: StringFilter<"opd"> | string
    opd_kota?: StringFilter<"opd"> | string
    opd_created?: DateTimeFilter<"opd"> | Date | string
    opd_updated?: DateTimeFilter<"opd"> | Date | string
    opd_deleted?: DateTimeNullableFilter<"opd"> | Date | string | null
    users?: UsersListRelationFilter
    spt?: SptListRelationFilter
    setting?: SettingListRelationFilter
    sumberdana?: SumberdanaListRelationFilter
    standard?: StandardListRelationFilter
    kegiatan?: KegiatanListRelationFilter
  }

  export type opdOrderByWithRelationInput = {
    opd_id?: SortOrder
    opd_nama?: SortOrder
    opd_alamat?: SortOrder
    opd_email?: SortOrder
    opd_telp?: SortOrder
    opd_kota?: SortOrder
    opd_created?: SortOrder
    opd_updated?: SortOrder
    opd_deleted?: SortOrderInput | SortOrder
    users?: usersOrderByRelationAggregateInput
    spt?: sptOrderByRelationAggregateInput
    setting?: settingOrderByRelationAggregateInput
    sumberdana?: sumberdanaOrderByRelationAggregateInput
    standard?: standardOrderByRelationAggregateInput
    kegiatan?: kegiatanOrderByRelationAggregateInput
  }

  export type opdWhereUniqueInput = Prisma.AtLeast<{
    opd_id?: number
    AND?: opdWhereInput | opdWhereInput[]
    OR?: opdWhereInput[]
    NOT?: opdWhereInput | opdWhereInput[]
    opd_nama?: StringFilter<"opd"> | string
    opd_alamat?: StringFilter<"opd"> | string
    opd_email?: StringFilter<"opd"> | string
    opd_telp?: StringFilter<"opd"> | string
    opd_kota?: StringFilter<"opd"> | string
    opd_created?: DateTimeFilter<"opd"> | Date | string
    opd_updated?: DateTimeFilter<"opd"> | Date | string
    opd_deleted?: DateTimeNullableFilter<"opd"> | Date | string | null
    users?: UsersListRelationFilter
    spt?: SptListRelationFilter
    setting?: SettingListRelationFilter
    sumberdana?: SumberdanaListRelationFilter
    standard?: StandardListRelationFilter
    kegiatan?: KegiatanListRelationFilter
  }, "opd_id">

  export type opdOrderByWithAggregationInput = {
    opd_id?: SortOrder
    opd_nama?: SortOrder
    opd_alamat?: SortOrder
    opd_email?: SortOrder
    opd_telp?: SortOrder
    opd_kota?: SortOrder
    opd_created?: SortOrder
    opd_updated?: SortOrder
    opd_deleted?: SortOrderInput | SortOrder
    _count?: opdCountOrderByAggregateInput
    _avg?: opdAvgOrderByAggregateInput
    _max?: opdMaxOrderByAggregateInput
    _min?: opdMinOrderByAggregateInput
    _sum?: opdSumOrderByAggregateInput
  }

  export type opdScalarWhereWithAggregatesInput = {
    AND?: opdScalarWhereWithAggregatesInput | opdScalarWhereWithAggregatesInput[]
    OR?: opdScalarWhereWithAggregatesInput[]
    NOT?: opdScalarWhereWithAggregatesInput | opdScalarWhereWithAggregatesInput[]
    opd_id?: IntWithAggregatesFilter<"opd"> | number
    opd_nama?: StringWithAggregatesFilter<"opd"> | string
    opd_alamat?: StringWithAggregatesFilter<"opd"> | string
    opd_email?: StringWithAggregatesFilter<"opd"> | string
    opd_telp?: StringWithAggregatesFilter<"opd"> | string
    opd_kota?: StringWithAggregatesFilter<"opd"> | string
    opd_created?: DateTimeWithAggregatesFilter<"opd"> | Date | string
    opd_updated?: DateTimeWithAggregatesFilter<"opd"> | Date | string
    opd_deleted?: DateTimeNullableWithAggregatesFilter<"opd"> | Date | string | null
  }

  export type jabatanWhereInput = {
    AND?: jabatanWhereInput | jabatanWhereInput[]
    OR?: jabatanWhereInput[]
    NOT?: jabatanWhereInput | jabatanWhereInput[]
    jabatan_id?: IntFilter<"jabatan"> | number
    jabatan_opd?: IntFilter<"jabatan"> | number
    jabatan_nama?: StringFilter<"jabatan"> | string
    jabatan_kop_surat?: IntNullableFilter<"jabatan"> | number | null
    jabatan_kelas_biaya?: IntFilter<"jabatan"> | number
    jabatan_kwitansi?: IntNullableFilter<"jabatan"> | number | null
    jabatan_kelompok?: IntNullableFilter<"jabatan"> | number | null
    jabatan_created?: DateTimeFilter<"jabatan"> | Date | string
    jabatan_updated?: DateTimeFilter<"jabatan"> | Date | string
    jabatan_deleted?: DateTimeNullableFilter<"jabatan"> | Date | string | null
    users?: UsersListRelationFilter
  }

  export type jabatanOrderByWithRelationInput = {
    jabatan_id?: SortOrder
    jabatan_opd?: SortOrder
    jabatan_nama?: SortOrder
    jabatan_kop_surat?: SortOrderInput | SortOrder
    jabatan_kelas_biaya?: SortOrder
    jabatan_kwitansi?: SortOrderInput | SortOrder
    jabatan_kelompok?: SortOrderInput | SortOrder
    jabatan_created?: SortOrder
    jabatan_updated?: SortOrder
    jabatan_deleted?: SortOrderInput | SortOrder
    users?: usersOrderByRelationAggregateInput
  }

  export type jabatanWhereUniqueInput = Prisma.AtLeast<{
    jabatan_id?: number
    AND?: jabatanWhereInput | jabatanWhereInput[]
    OR?: jabatanWhereInput[]
    NOT?: jabatanWhereInput | jabatanWhereInput[]
    jabatan_opd?: IntFilter<"jabatan"> | number
    jabatan_nama?: StringFilter<"jabatan"> | string
    jabatan_kop_surat?: IntNullableFilter<"jabatan"> | number | null
    jabatan_kelas_biaya?: IntFilter<"jabatan"> | number
    jabatan_kwitansi?: IntNullableFilter<"jabatan"> | number | null
    jabatan_kelompok?: IntNullableFilter<"jabatan"> | number | null
    jabatan_created?: DateTimeFilter<"jabatan"> | Date | string
    jabatan_updated?: DateTimeFilter<"jabatan"> | Date | string
    jabatan_deleted?: DateTimeNullableFilter<"jabatan"> | Date | string | null
    users?: UsersListRelationFilter
  }, "jabatan_id">

  export type jabatanOrderByWithAggregationInput = {
    jabatan_id?: SortOrder
    jabatan_opd?: SortOrder
    jabatan_nama?: SortOrder
    jabatan_kop_surat?: SortOrderInput | SortOrder
    jabatan_kelas_biaya?: SortOrder
    jabatan_kwitansi?: SortOrderInput | SortOrder
    jabatan_kelompok?: SortOrderInput | SortOrder
    jabatan_created?: SortOrder
    jabatan_updated?: SortOrder
    jabatan_deleted?: SortOrderInput | SortOrder
    _count?: jabatanCountOrderByAggregateInput
    _avg?: jabatanAvgOrderByAggregateInput
    _max?: jabatanMaxOrderByAggregateInput
    _min?: jabatanMinOrderByAggregateInput
    _sum?: jabatanSumOrderByAggregateInput
  }

  export type jabatanScalarWhereWithAggregatesInput = {
    AND?: jabatanScalarWhereWithAggregatesInput | jabatanScalarWhereWithAggregatesInput[]
    OR?: jabatanScalarWhereWithAggregatesInput[]
    NOT?: jabatanScalarWhereWithAggregatesInput | jabatanScalarWhereWithAggregatesInput[]
    jabatan_id?: IntWithAggregatesFilter<"jabatan"> | number
    jabatan_opd?: IntWithAggregatesFilter<"jabatan"> | number
    jabatan_nama?: StringWithAggregatesFilter<"jabatan"> | string
    jabatan_kop_surat?: IntNullableWithAggregatesFilter<"jabatan"> | number | null
    jabatan_kelas_biaya?: IntWithAggregatesFilter<"jabatan"> | number
    jabatan_kwitansi?: IntNullableWithAggregatesFilter<"jabatan"> | number | null
    jabatan_kelompok?: IntNullableWithAggregatesFilter<"jabatan"> | number | null
    jabatan_created?: DateTimeWithAggregatesFilter<"jabatan"> | Date | string
    jabatan_updated?: DateTimeWithAggregatesFilter<"jabatan"> | Date | string
    jabatan_deleted?: DateTimeNullableWithAggregatesFilter<"jabatan"> | Date | string | null
  }

  export type kwitansiWhereInput = {
    AND?: kwitansiWhereInput | kwitansiWhereInput[]
    OR?: kwitansiWhereInput[]
    NOT?: kwitansiWhereInput | kwitansiWhereInput[]
    kwitansi_spt_pegawai?: IntFilter<"kwitansi"> | number
    kwitansi_nomor?: StringFilter<"kwitansi"> | string
    kwitansi_opd?: IntFilter<"kwitansi"> | number
    kwitansi_created?: DateTimeFilter<"kwitansi"> | Date | string
    kwitansi_updated?: DateTimeFilter<"kwitansi"> | Date | string
    spt_pegawai?: XOR<Spt_pegawaiRelationFilter, spt_pegawaiWhereInput>
  }

  export type kwitansiOrderByWithRelationInput = {
    kwitansi_spt_pegawai?: SortOrder
    kwitansi_nomor?: SortOrder
    kwitansi_opd?: SortOrder
    kwitansi_created?: SortOrder
    kwitansi_updated?: SortOrder
    spt_pegawai?: spt_pegawaiOrderByWithRelationInput
  }

  export type kwitansiWhereUniqueInput = Prisma.AtLeast<{
    kwitansi_spt_pegawai?: number
    kwitansi_nomor_kwitansi_opd?: kwitansiKwitansi_nomorKwitansi_opdCompoundUniqueInput
    AND?: kwitansiWhereInput | kwitansiWhereInput[]
    OR?: kwitansiWhereInput[]
    NOT?: kwitansiWhereInput | kwitansiWhereInput[]
    kwitansi_nomor?: StringFilter<"kwitansi"> | string
    kwitansi_opd?: IntFilter<"kwitansi"> | number
    kwitansi_created?: DateTimeFilter<"kwitansi"> | Date | string
    kwitansi_updated?: DateTimeFilter<"kwitansi"> | Date | string
    spt_pegawai?: XOR<Spt_pegawaiRelationFilter, spt_pegawaiWhereInput>
  }, "kwitansi_spt_pegawai" | "kwitansi_nomor_kwitansi_opd">

  export type kwitansiOrderByWithAggregationInput = {
    kwitansi_spt_pegawai?: SortOrder
    kwitansi_nomor?: SortOrder
    kwitansi_opd?: SortOrder
    kwitansi_created?: SortOrder
    kwitansi_updated?: SortOrder
    _count?: kwitansiCountOrderByAggregateInput
    _avg?: kwitansiAvgOrderByAggregateInput
    _max?: kwitansiMaxOrderByAggregateInput
    _min?: kwitansiMinOrderByAggregateInput
    _sum?: kwitansiSumOrderByAggregateInput
  }

  export type kwitansiScalarWhereWithAggregatesInput = {
    AND?: kwitansiScalarWhereWithAggregatesInput | kwitansiScalarWhereWithAggregatesInput[]
    OR?: kwitansiScalarWhereWithAggregatesInput[]
    NOT?: kwitansiScalarWhereWithAggregatesInput | kwitansiScalarWhereWithAggregatesInput[]
    kwitansi_spt_pegawai?: IntWithAggregatesFilter<"kwitansi"> | number
    kwitansi_nomor?: StringWithAggregatesFilter<"kwitansi"> | string
    kwitansi_opd?: IntWithAggregatesFilter<"kwitansi"> | number
    kwitansi_created?: DateTimeWithAggregatesFilter<"kwitansi"> | Date | string
    kwitansi_updated?: DateTimeWithAggregatesFilter<"kwitansi"> | Date | string
  }

  export type kategoriWhereInput = {
    AND?: kategoriWhereInput | kategoriWhereInput[]
    OR?: kategoriWhereInput[]
    NOT?: kategoriWhereInput | kategoriWhereInput[]
    kategori_id?: IntFilter<"kategori"> | number
    kategori_nama?: StringFilter<"kategori"> | string
    kategori_opd?: IntFilter<"kategori"> | number
    kategori_created?: DateTimeFilter<"kategori"> | Date | string
    kategori_updated?: DateTimeFilter<"kategori"> | Date | string
    kategori_deleted?: DateTimeNullableFilter<"kategori"> | Date | string | null
    spt?: SptListRelationFilter
  }

  export type kategoriOrderByWithRelationInput = {
    kategori_id?: SortOrder
    kategori_nama?: SortOrder
    kategori_opd?: SortOrder
    kategori_created?: SortOrder
    kategori_updated?: SortOrder
    kategori_deleted?: SortOrderInput | SortOrder
    spt?: sptOrderByRelationAggregateInput
  }

  export type kategoriWhereUniqueInput = Prisma.AtLeast<{
    kategori_id?: number
    AND?: kategoriWhereInput | kategoriWhereInput[]
    OR?: kategoriWhereInput[]
    NOT?: kategoriWhereInput | kategoriWhereInput[]
    kategori_nama?: StringFilter<"kategori"> | string
    kategori_opd?: IntFilter<"kategori"> | number
    kategori_created?: DateTimeFilter<"kategori"> | Date | string
    kategori_updated?: DateTimeFilter<"kategori"> | Date | string
    kategori_deleted?: DateTimeNullableFilter<"kategori"> | Date | string | null
    spt?: SptListRelationFilter
  }, "kategori_id">

  export type kategoriOrderByWithAggregationInput = {
    kategori_id?: SortOrder
    kategori_nama?: SortOrder
    kategori_opd?: SortOrder
    kategori_created?: SortOrder
    kategori_updated?: SortOrder
    kategori_deleted?: SortOrderInput | SortOrder
    _count?: kategoriCountOrderByAggregateInput
    _avg?: kategoriAvgOrderByAggregateInput
    _max?: kategoriMaxOrderByAggregateInput
    _min?: kategoriMinOrderByAggregateInput
    _sum?: kategoriSumOrderByAggregateInput
  }

  export type kategoriScalarWhereWithAggregatesInput = {
    AND?: kategoriScalarWhereWithAggregatesInput | kategoriScalarWhereWithAggregatesInput[]
    OR?: kategoriScalarWhereWithAggregatesInput[]
    NOT?: kategoriScalarWhereWithAggregatesInput | kategoriScalarWhereWithAggregatesInput[]
    kategori_id?: IntWithAggregatesFilter<"kategori"> | number
    kategori_nama?: StringWithAggregatesFilter<"kategori"> | string
    kategori_opd?: IntWithAggregatesFilter<"kategori"> | number
    kategori_created?: DateTimeWithAggregatesFilter<"kategori"> | Date | string
    kategori_updated?: DateTimeWithAggregatesFilter<"kategori"> | Date | string
    kategori_deleted?: DateTimeNullableWithAggregatesFilter<"kategori"> | Date | string | null
  }

  export type standardWhereInput = {
    AND?: standardWhereInput | standardWhereInput[]
    OR?: standardWhereInput[]
    NOT?: standardWhereInput | standardWhereInput[]
    standard_id?: IntFilter<"standard"> | number
    standard_kode?: IntFilter<"standard"> | number
    standard_opd?: IntFilter<"standard"> | number
    standard_kota_asal?: IntFilter<"standard"> | number
    standard_kota_tujuan?: IntFilter<"standard"> | number
    standard_via?: IntFilter<"standard"> | number
    standard_kelas?: IntFilter<"standard"> | number
    standard_nominal?: IntFilter<"standard"> | number
    standard_created?: DateTimeFilter<"standard"> | Date | string
    standard_updated?: DateTimeFilter<"standard"> | Date | string
    standard_deleted?: DateTimeNullableFilter<"standard"> | Date | string | null
    kota_asal?: XOR<KotaNullableRelationFilter, kotaWhereInput> | null
    kota_tujuan?: XOR<KotaNullableRelationFilter, kotaWhereInput> | null
    opd?: XOR<OpdRelationFilter, opdWhereInput>
  }

  export type standardOrderByWithRelationInput = {
    standard_id?: SortOrder
    standard_kode?: SortOrder
    standard_opd?: SortOrder
    standard_kota_asal?: SortOrder
    standard_kota_tujuan?: SortOrder
    standard_via?: SortOrder
    standard_kelas?: SortOrder
    standard_nominal?: SortOrder
    standard_created?: SortOrder
    standard_updated?: SortOrder
    standard_deleted?: SortOrderInput | SortOrder
    kota_asal?: kotaOrderByWithRelationInput
    kota_tujuan?: kotaOrderByWithRelationInput
    opd?: opdOrderByWithRelationInput
  }

  export type standardWhereUniqueInput = Prisma.AtLeast<{
    standard_id?: number
    standardUnique?: standardStandardUniqueCompoundUniqueInput
    AND?: standardWhereInput | standardWhereInput[]
    OR?: standardWhereInput[]
    NOT?: standardWhereInput | standardWhereInput[]
    standard_kode?: IntFilter<"standard"> | number
    standard_opd?: IntFilter<"standard"> | number
    standard_kota_asal?: IntFilter<"standard"> | number
    standard_kota_tujuan?: IntFilter<"standard"> | number
    standard_via?: IntFilter<"standard"> | number
    standard_kelas?: IntFilter<"standard"> | number
    standard_nominal?: IntFilter<"standard"> | number
    standard_created?: DateTimeFilter<"standard"> | Date | string
    standard_updated?: DateTimeFilter<"standard"> | Date | string
    standard_deleted?: DateTimeNullableFilter<"standard"> | Date | string | null
    kota_asal?: XOR<KotaNullableRelationFilter, kotaWhereInput> | null
    kota_tujuan?: XOR<KotaNullableRelationFilter, kotaWhereInput> | null
    opd?: XOR<OpdRelationFilter, opdWhereInput>
  }, "standard_id" | "standardUnique">

  export type standardOrderByWithAggregationInput = {
    standard_id?: SortOrder
    standard_kode?: SortOrder
    standard_opd?: SortOrder
    standard_kota_asal?: SortOrder
    standard_kota_tujuan?: SortOrder
    standard_via?: SortOrder
    standard_kelas?: SortOrder
    standard_nominal?: SortOrder
    standard_created?: SortOrder
    standard_updated?: SortOrder
    standard_deleted?: SortOrderInput | SortOrder
    _count?: standardCountOrderByAggregateInput
    _avg?: standardAvgOrderByAggregateInput
    _max?: standardMaxOrderByAggregateInput
    _min?: standardMinOrderByAggregateInput
    _sum?: standardSumOrderByAggregateInput
  }

  export type standardScalarWhereWithAggregatesInput = {
    AND?: standardScalarWhereWithAggregatesInput | standardScalarWhereWithAggregatesInput[]
    OR?: standardScalarWhereWithAggregatesInput[]
    NOT?: standardScalarWhereWithAggregatesInput | standardScalarWhereWithAggregatesInput[]
    standard_id?: IntWithAggregatesFilter<"standard"> | number
    standard_kode?: IntWithAggregatesFilter<"standard"> | number
    standard_opd?: IntWithAggregatesFilter<"standard"> | number
    standard_kota_asal?: IntWithAggregatesFilter<"standard"> | number
    standard_kota_tujuan?: IntWithAggregatesFilter<"standard"> | number
    standard_via?: IntWithAggregatesFilter<"standard"> | number
    standard_kelas?: IntWithAggregatesFilter<"standard"> | number
    standard_nominal?: IntWithAggregatesFilter<"standard"> | number
    standard_created?: DateTimeWithAggregatesFilter<"standard"> | Date | string
    standard_updated?: DateTimeWithAggregatesFilter<"standard"> | Date | string
    standard_deleted?: DateTimeNullableWithAggregatesFilter<"standard"> | Date | string | null
  }

  export type bankWhereInput = {
    AND?: bankWhereInput | bankWhereInput[]
    OR?: bankWhereInput[]
    NOT?: bankWhereInput | bankWhereInput[]
    bank_user?: IntFilter<"bank"> | number
    bank_name?: IntFilter<"bank"> | number
    bank_account?: StringFilter<"bank"> | string
    bank_number?: StringFilter<"bank"> | string
    user?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type bankOrderByWithRelationInput = {
    bank_user?: SortOrder
    bank_name?: SortOrder
    bank_account?: SortOrder
    bank_number?: SortOrder
    user?: usersOrderByWithRelationInput
  }

  export type bankWhereUniqueInput = Prisma.AtLeast<{
    bank_user?: number
    AND?: bankWhereInput | bankWhereInput[]
    OR?: bankWhereInput[]
    NOT?: bankWhereInput | bankWhereInput[]
    bank_name?: IntFilter<"bank"> | number
    bank_account?: StringFilter<"bank"> | string
    bank_number?: StringFilter<"bank"> | string
    user?: XOR<UsersRelationFilter, usersWhereInput>
  }, "bank_user">

  export type bankOrderByWithAggregationInput = {
    bank_user?: SortOrder
    bank_name?: SortOrder
    bank_account?: SortOrder
    bank_number?: SortOrder
    _count?: bankCountOrderByAggregateInput
    _avg?: bankAvgOrderByAggregateInput
    _max?: bankMaxOrderByAggregateInput
    _min?: bankMinOrderByAggregateInput
    _sum?: bankSumOrderByAggregateInput
  }

  export type bankScalarWhereWithAggregatesInput = {
    AND?: bankScalarWhereWithAggregatesInput | bankScalarWhereWithAggregatesInput[]
    OR?: bankScalarWhereWithAggregatesInput[]
    NOT?: bankScalarWhereWithAggregatesInput | bankScalarWhereWithAggregatesInput[]
    bank_user?: IntWithAggregatesFilter<"bank"> | number
    bank_name?: IntWithAggregatesFilter<"bank"> | number
    bank_account?: StringWithAggregatesFilter<"bank"> | string
    bank_number?: StringWithAggregatesFilter<"bank"> | string
  }

  export type tunjangan_potonganWhereInput = {
    AND?: tunjangan_potonganWhereInput | tunjangan_potonganWhereInput[]
    OR?: tunjangan_potonganWhereInput[]
    NOT?: tunjangan_potonganWhereInput | tunjangan_potonganWhereInput[]
    tp_id?: IntFilter<"tunjangan_potongan"> | number
    tp_jenis?: IntFilter<"tunjangan_potongan"> | number
    tp_nama?: StringFilter<"tunjangan_potongan"> | string
    tp_urutan?: IntFilter<"tunjangan_potongan"> | number
    tp_kelompok?: IntFilter<"tunjangan_potongan"> | number
    tp_created?: DateTimeFilter<"tunjangan_potongan"> | Date | string
    tp_update?: DateTimeFilter<"tunjangan_potongan"> | Date | string
    tp_deleted?: DateTimeNullableFilter<"tunjangan_potongan"> | Date | string | null
    gajian?: GajianListRelationFilter
  }

  export type tunjangan_potonganOrderByWithRelationInput = {
    tp_id?: SortOrder
    tp_jenis?: SortOrder
    tp_nama?: SortOrder
    tp_urutan?: SortOrder
    tp_kelompok?: SortOrder
    tp_created?: SortOrder
    tp_update?: SortOrder
    tp_deleted?: SortOrderInput | SortOrder
    gajian?: gajianOrderByRelationAggregateInput
  }

  export type tunjangan_potonganWhereUniqueInput = Prisma.AtLeast<{
    tp_id?: number
    AND?: tunjangan_potonganWhereInput | tunjangan_potonganWhereInput[]
    OR?: tunjangan_potonganWhereInput[]
    NOT?: tunjangan_potonganWhereInput | tunjangan_potonganWhereInput[]
    tp_jenis?: IntFilter<"tunjangan_potongan"> | number
    tp_nama?: StringFilter<"tunjangan_potongan"> | string
    tp_urutan?: IntFilter<"tunjangan_potongan"> | number
    tp_kelompok?: IntFilter<"tunjangan_potongan"> | number
    tp_created?: DateTimeFilter<"tunjangan_potongan"> | Date | string
    tp_update?: DateTimeFilter<"tunjangan_potongan"> | Date | string
    tp_deleted?: DateTimeNullableFilter<"tunjangan_potongan"> | Date | string | null
    gajian?: GajianListRelationFilter
  }, "tp_id">

  export type tunjangan_potonganOrderByWithAggregationInput = {
    tp_id?: SortOrder
    tp_jenis?: SortOrder
    tp_nama?: SortOrder
    tp_urutan?: SortOrder
    tp_kelompok?: SortOrder
    tp_created?: SortOrder
    tp_update?: SortOrder
    tp_deleted?: SortOrderInput | SortOrder
    _count?: tunjangan_potonganCountOrderByAggregateInput
    _avg?: tunjangan_potonganAvgOrderByAggregateInput
    _max?: tunjangan_potonganMaxOrderByAggregateInput
    _min?: tunjangan_potonganMinOrderByAggregateInput
    _sum?: tunjangan_potonganSumOrderByAggregateInput
  }

  export type tunjangan_potonganScalarWhereWithAggregatesInput = {
    AND?: tunjangan_potonganScalarWhereWithAggregatesInput | tunjangan_potonganScalarWhereWithAggregatesInput[]
    OR?: tunjangan_potonganScalarWhereWithAggregatesInput[]
    NOT?: tunjangan_potonganScalarWhereWithAggregatesInput | tunjangan_potonganScalarWhereWithAggregatesInput[]
    tp_id?: IntWithAggregatesFilter<"tunjangan_potongan"> | number
    tp_jenis?: IntWithAggregatesFilter<"tunjangan_potongan"> | number
    tp_nama?: StringWithAggregatesFilter<"tunjangan_potongan"> | string
    tp_urutan?: IntWithAggregatesFilter<"tunjangan_potongan"> | number
    tp_kelompok?: IntWithAggregatesFilter<"tunjangan_potongan"> | number
    tp_created?: DateTimeWithAggregatesFilter<"tunjangan_potongan"> | Date | string
    tp_update?: DateTimeWithAggregatesFilter<"tunjangan_potongan"> | Date | string
    tp_deleted?: DateTimeNullableWithAggregatesFilter<"tunjangan_potongan"> | Date | string | null
  }

  export type gajianWhereInput = {
    AND?: gajianWhereInput | gajianWhereInput[]
    OR?: gajianWhereInput[]
    NOT?: gajianWhereInput | gajianWhereInput[]
    gajian_id?: IntFilter<"gajian"> | number
    gajian_pegawai?: IntFilter<"gajian"> | number
    gajian_bulan?: IntFilter<"gajian"> | number
    gajian_tahun?: IntFilter<"gajian"> | number
    gajian_tunjangan_potongan?: IntFilter<"gajian"> | number
    gajian_nominal?: IntFilter<"gajian"> | number
    gajian_created?: DateTimeFilter<"gajian"> | Date | string
    gajian_updated?: DateTimeFilter<"gajian"> | Date | string
    gajian_deleted?: DateTimeNullableFilter<"gajian"> | Date | string | null
    users?: XOR<UsersRelationFilter, usersWhereInput>
    tunjangan_potongan?: XOR<Tunjangan_potonganRelationFilter, tunjangan_potonganWhereInput>
  }

  export type gajianOrderByWithRelationInput = {
    gajian_id?: SortOrder
    gajian_pegawai?: SortOrder
    gajian_bulan?: SortOrder
    gajian_tahun?: SortOrder
    gajian_tunjangan_potongan?: SortOrder
    gajian_nominal?: SortOrder
    gajian_created?: SortOrder
    gajian_updated?: SortOrder
    gajian_deleted?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    tunjangan_potongan?: tunjangan_potonganOrderByWithRelationInput
  }

  export type gajianWhereUniqueInput = Prisma.AtLeast<{
    gajian_id?: number
    gajianUnique?: gajianGajianUniqueCompoundUniqueInput
    AND?: gajianWhereInput | gajianWhereInput[]
    OR?: gajianWhereInput[]
    NOT?: gajianWhereInput | gajianWhereInput[]
    gajian_pegawai?: IntFilter<"gajian"> | number
    gajian_bulan?: IntFilter<"gajian"> | number
    gajian_tahun?: IntFilter<"gajian"> | number
    gajian_tunjangan_potongan?: IntFilter<"gajian"> | number
    gajian_nominal?: IntFilter<"gajian"> | number
    gajian_created?: DateTimeFilter<"gajian"> | Date | string
    gajian_updated?: DateTimeFilter<"gajian"> | Date | string
    gajian_deleted?: DateTimeNullableFilter<"gajian"> | Date | string | null
    users?: XOR<UsersRelationFilter, usersWhereInput>
    tunjangan_potongan?: XOR<Tunjangan_potonganRelationFilter, tunjangan_potonganWhereInput>
  }, "gajian_id" | "gajianUnique">

  export type gajianOrderByWithAggregationInput = {
    gajian_id?: SortOrder
    gajian_pegawai?: SortOrder
    gajian_bulan?: SortOrder
    gajian_tahun?: SortOrder
    gajian_tunjangan_potongan?: SortOrder
    gajian_nominal?: SortOrder
    gajian_created?: SortOrder
    gajian_updated?: SortOrder
    gajian_deleted?: SortOrderInput | SortOrder
    _count?: gajianCountOrderByAggregateInput
    _avg?: gajianAvgOrderByAggregateInput
    _max?: gajianMaxOrderByAggregateInput
    _min?: gajianMinOrderByAggregateInput
    _sum?: gajianSumOrderByAggregateInput
  }

  export type gajianScalarWhereWithAggregatesInput = {
    AND?: gajianScalarWhereWithAggregatesInput | gajianScalarWhereWithAggregatesInput[]
    OR?: gajianScalarWhereWithAggregatesInput[]
    NOT?: gajianScalarWhereWithAggregatesInput | gajianScalarWhereWithAggregatesInput[]
    gajian_id?: IntWithAggregatesFilter<"gajian"> | number
    gajian_pegawai?: IntWithAggregatesFilter<"gajian"> | number
    gajian_bulan?: IntWithAggregatesFilter<"gajian"> | number
    gajian_tahun?: IntWithAggregatesFilter<"gajian"> | number
    gajian_tunjangan_potongan?: IntWithAggregatesFilter<"gajian"> | number
    gajian_nominal?: IntWithAggregatesFilter<"gajian"> | number
    gajian_created?: DateTimeWithAggregatesFilter<"gajian"> | Date | string
    gajian_updated?: DateTimeWithAggregatesFilter<"gajian"> | Date | string
    gajian_deleted?: DateTimeNullableWithAggregatesFilter<"gajian"> | Date | string | null
  }

  export type ttd_gajianWhereInput = {
    AND?: ttd_gajianWhereInput | ttd_gajianWhereInput[]
    OR?: ttd_gajianWhereInput[]
    NOT?: ttd_gajianWhereInput | ttd_gajianWhereInput[]
    ttd_id?: IntFilter<"ttd_gajian"> | number
    ttd_bulan?: IntFilter<"ttd_gajian"> | number
    ttd_tahun?: IntFilter<"ttd_gajian"> | number
    ttd_sumberdana?: IntFilter<"ttd_gajian"> | number
    ttd_created?: DateTimeFilter<"ttd_gajian"> | Date | string
    ttd_updated?: DateTimeFilter<"ttd_gajian"> | Date | string
    ttd_deleted?: DateTimeNullableFilter<"ttd_gajian"> | Date | string | null
    sumberdana?: XOR<SumberdanaRelationFilter, sumberdanaWhereInput>
  }

  export type ttd_gajianOrderByWithRelationInput = {
    ttd_id?: SortOrder
    ttd_bulan?: SortOrder
    ttd_tahun?: SortOrder
    ttd_sumberdana?: SortOrder
    ttd_created?: SortOrder
    ttd_updated?: SortOrder
    ttd_deleted?: SortOrderInput | SortOrder
    sumberdana?: sumberdanaOrderByWithRelationInput
  }

  export type ttd_gajianWhereUniqueInput = Prisma.AtLeast<{
    ttd_id?: number
    ttdUnique?: ttd_gajianTtdUniqueCompoundUniqueInput
    AND?: ttd_gajianWhereInput | ttd_gajianWhereInput[]
    OR?: ttd_gajianWhereInput[]
    NOT?: ttd_gajianWhereInput | ttd_gajianWhereInput[]
    ttd_bulan?: IntFilter<"ttd_gajian"> | number
    ttd_tahun?: IntFilter<"ttd_gajian"> | number
    ttd_sumberdana?: IntFilter<"ttd_gajian"> | number
    ttd_created?: DateTimeFilter<"ttd_gajian"> | Date | string
    ttd_updated?: DateTimeFilter<"ttd_gajian"> | Date | string
    ttd_deleted?: DateTimeNullableFilter<"ttd_gajian"> | Date | string | null
    sumberdana?: XOR<SumberdanaRelationFilter, sumberdanaWhereInput>
  }, "ttd_id" | "ttdUnique">

  export type ttd_gajianOrderByWithAggregationInput = {
    ttd_id?: SortOrder
    ttd_bulan?: SortOrder
    ttd_tahun?: SortOrder
    ttd_sumberdana?: SortOrder
    ttd_created?: SortOrder
    ttd_updated?: SortOrder
    ttd_deleted?: SortOrderInput | SortOrder
    _count?: ttd_gajianCountOrderByAggregateInput
    _avg?: ttd_gajianAvgOrderByAggregateInput
    _max?: ttd_gajianMaxOrderByAggregateInput
    _min?: ttd_gajianMinOrderByAggregateInput
    _sum?: ttd_gajianSumOrderByAggregateInput
  }

  export type ttd_gajianScalarWhereWithAggregatesInput = {
    AND?: ttd_gajianScalarWhereWithAggregatesInput | ttd_gajianScalarWhereWithAggregatesInput[]
    OR?: ttd_gajianScalarWhereWithAggregatesInput[]
    NOT?: ttd_gajianScalarWhereWithAggregatesInput | ttd_gajianScalarWhereWithAggregatesInput[]
    ttd_id?: IntWithAggregatesFilter<"ttd_gajian"> | number
    ttd_bulan?: IntWithAggregatesFilter<"ttd_gajian"> | number
    ttd_tahun?: IntWithAggregatesFilter<"ttd_gajian"> | number
    ttd_sumberdana?: IntWithAggregatesFilter<"ttd_gajian"> | number
    ttd_created?: DateTimeWithAggregatesFilter<"ttd_gajian"> | Date | string
    ttd_updated?: DateTimeWithAggregatesFilter<"ttd_gajian"> | Date | string
    ttd_deleted?: DateTimeNullableWithAggregatesFilter<"ttd_gajian"> | Date | string | null
  }

  export type usersCreateInput = {
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutUsersInput
    pj?: sptCreateNestedManyWithoutUsers_pjInput
    pj2?: sptCreateNestedManyWithoutUsers_pj2Input
    opd: opdCreateNestedOneWithoutUsersInput
    jabatan: jabatanCreateNestedOneWithoutUsersInput
    sumberdana?: sumberdanaCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankCreateNestedManyWithoutUserInput
    gajian?: gajianCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    user_id?: number
    user_opd: number
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_jabatan: number
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutUsersInput
    pj?: sptUncheckedCreateNestedManyWithoutUsers_pjInput
    pj2?: sptUncheckedCreateNestedManyWithoutUsers_pj2Input
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaUncheckedCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaUncheckedCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankUncheckedCreateNestedManyWithoutUserInput
    gajian?: gajianUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutUsersNestedInput
    pj?: sptUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUpdateManyWithoutUsers_pj2NestedInput
    opd?: opdUpdateOneRequiredWithoutUsersNestedInput
    jabatan?: jabatanUpdateOneRequiredWithoutUsersNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUpdateManyWithoutUserNestedInput
    gajian?: gajianUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_opd?: IntFieldUpdateOperationsInput | number
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_jabatan?: IntFieldUpdateOperationsInput | number
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutUsersNestedInput
    pj?: sptUncheckedUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUncheckedUpdateManyWithoutUsers_pj2NestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUncheckedUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUncheckedUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUncheckedUpdateManyWithoutUserNestedInput
    gajian?: gajianUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    user_id?: number
    user_opd: number
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_jabatan: number
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
  }

  export type usersUpdateManyMutationInput = {
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_opd?: IntFieldUpdateOperationsInput | number
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_jabatan?: IntFieldUpdateOperationsInput | number
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type dasarCreateInput = {
    dasar_isi: string
    dasar_opd: number
    dasar_active: boolean
    dasar_created?: Date | string
    dasar_updated?: Date | string
    dasar_deleted?: Date | string | null
  }

  export type dasarUncheckedCreateInput = {
    dasar_id?: number
    dasar_isi: string
    dasar_opd: number
    dasar_active: boolean
    dasar_created?: Date | string
    dasar_updated?: Date | string
    dasar_deleted?: Date | string | null
  }

  export type dasarUpdateInput = {
    dasar_isi?: StringFieldUpdateOperationsInput | string
    dasar_opd?: IntFieldUpdateOperationsInput | number
    dasar_active?: BoolFieldUpdateOperationsInput | boolean
    dasar_created?: DateTimeFieldUpdateOperationsInput | Date | string
    dasar_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    dasar_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type dasarUncheckedUpdateInput = {
    dasar_id?: IntFieldUpdateOperationsInput | number
    dasar_isi?: StringFieldUpdateOperationsInput | string
    dasar_opd?: IntFieldUpdateOperationsInput | number
    dasar_active?: BoolFieldUpdateOperationsInput | boolean
    dasar_created?: DateTimeFieldUpdateOperationsInput | Date | string
    dasar_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    dasar_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type dasarCreateManyInput = {
    dasar_id?: number
    dasar_isi: string
    dasar_opd: number
    dasar_active: boolean
    dasar_created?: Date | string
    dasar_updated?: Date | string
    dasar_deleted?: Date | string | null
  }

  export type dasarUpdateManyMutationInput = {
    dasar_isi?: StringFieldUpdateOperationsInput | string
    dasar_opd?: IntFieldUpdateOperationsInput | number
    dasar_active?: BoolFieldUpdateOperationsInput | boolean
    dasar_created?: DateTimeFieldUpdateOperationsInput | Date | string
    dasar_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    dasar_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type dasarUncheckedUpdateManyInput = {
    dasar_id?: IntFieldUpdateOperationsInput | number
    dasar_isi?: StringFieldUpdateOperationsInput | string
    dasar_opd?: IntFieldUpdateOperationsInput | number
    dasar_active?: BoolFieldUpdateOperationsInput | boolean
    dasar_created?: DateTimeFieldUpdateOperationsInput | Date | string
    dasar_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    dasar_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sptCreateInput = {
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutSptInput
    users_pj: usersCreateNestedOneWithoutPjInput
    users_pj2: usersCreateNestedOneWithoutPj2Input
    kota_asal: kotaCreateNestedOneWithoutKota_asalInput
    kota_tujuan: kotaCreateNestedOneWithoutKota_tujuanInput
    kota_tujuan2?: kotaCreateNestedOneWithoutKota_tujuan2Input
    opd: opdCreateNestedOneWithoutSptInput
    kegiatan: kegiatanCreateNestedOneWithoutSptInput
    sumber_dana: sumberdanaCreateNestedOneWithoutSptInput
    kategori: kategoriCreateNestedOneWithoutSptInput
    kota?: kotaCreateNestedOneWithoutSptInput
  }

  export type sptUncheckedCreateInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutSptInput
  }

  export type sptUpdateInput = {
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutSptNestedInput
    users_pj?: usersUpdateOneRequiredWithoutPjNestedInput
    users_pj2?: usersUpdateOneRequiredWithoutPj2NestedInput
    kota_asal?: kotaUpdateOneRequiredWithoutKota_asalNestedInput
    kota_tujuan?: kotaUpdateOneRequiredWithoutKota_tujuanNestedInput
    kota_tujuan2?: kotaUpdateOneWithoutKota_tujuan2NestedInput
    opd?: opdUpdateOneRequiredWithoutSptNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSptNestedInput
    sumber_dana?: sumberdanaUpdateOneRequiredWithoutSptNestedInput
    kategori?: kategoriUpdateOneRequiredWithoutSptNestedInput
    kota?: kotaUpdateOneWithoutSptNestedInput
  }

  export type sptUncheckedUpdateInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutSptNestedInput
  }

  export type sptCreateManyInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
  }

  export type sptUpdateManyMutationInput = {
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sptUncheckedUpdateManyInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type spt_pegawaiCreateInput = {
    sp_nomor_sppd: string
    sp_seq: number
    spt: sptCreateNestedOneWithoutSpt_pegawaiInput
    users: usersCreateNestedOneWithoutSpt_pegawaiInput
    biaya?: biayaCreateNestedManyWithoutSpt_pegawaiInput
    npd?: npdCreateNestedManyWithoutSpt_pegawaiInput
    laporan?: laporanCreateNestedOneWithoutSpt_pegawaiInput
    kwitansi?: kwitansiCreateNestedOneWithoutSpt_pegawaiInput
  }

  export type spt_pegawaiUncheckedCreateInput = {
    sp_id?: number
    sp_spt: number
    sp_user: number
    sp_nomor_sppd: string
    sp_seq: number
    biaya?: biayaUncheckedCreateNestedManyWithoutSpt_pegawaiInput
    npd?: npdUncheckedCreateNestedManyWithoutSpt_pegawaiInput
    laporan?: laporanUncheckedCreateNestedOneWithoutSpt_pegawaiInput
    kwitansi?: kwitansiUncheckedCreateNestedOneWithoutSpt_pegawaiInput
  }

  export type spt_pegawaiUpdateInput = {
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
    spt?: sptUpdateOneRequiredWithoutSpt_pegawaiNestedInput
    users?: usersUpdateOneRequiredWithoutSpt_pegawaiNestedInput
    biaya?: biayaUpdateManyWithoutSpt_pegawaiNestedInput
    npd?: npdUpdateManyWithoutSpt_pegawaiNestedInput
    laporan?: laporanUpdateOneWithoutSpt_pegawaiNestedInput
    kwitansi?: kwitansiUpdateOneWithoutSpt_pegawaiNestedInput
  }

  export type spt_pegawaiUncheckedUpdateInput = {
    sp_id?: IntFieldUpdateOperationsInput | number
    sp_spt?: IntFieldUpdateOperationsInput | number
    sp_user?: IntFieldUpdateOperationsInput | number
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
    biaya?: biayaUncheckedUpdateManyWithoutSpt_pegawaiNestedInput
    npd?: npdUncheckedUpdateManyWithoutSpt_pegawaiNestedInput
    laporan?: laporanUncheckedUpdateOneWithoutSpt_pegawaiNestedInput
    kwitansi?: kwitansiUncheckedUpdateOneWithoutSpt_pegawaiNestedInput
  }

  export type spt_pegawaiCreateManyInput = {
    sp_id?: number
    sp_spt: number
    sp_user: number
    sp_nomor_sppd: string
    sp_seq: number
  }

  export type spt_pegawaiUpdateManyMutationInput = {
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
  }

  export type spt_pegawaiUncheckedUpdateManyInput = {
    sp_id?: IntFieldUpdateOperationsInput | number
    sp_spt?: IntFieldUpdateOperationsInput | number
    sp_user?: IntFieldUpdateOperationsInput | number
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
  }

  export type npdCreateInput = {
    npd_tgl: Date | string
    npd_nominal: bigint | number
    npd_created?: Date | string
    npd_updated?: Date | string
    spt_pegawai: spt_pegawaiCreateNestedOneWithoutNpdInput
  }

  export type npdUncheckedCreateInput = {
    npd_spt_pegawai: number
    npd_tgl: Date | string
    npd_nominal: bigint | number
    npd_created?: Date | string
    npd_updated?: Date | string
  }

  export type npdUpdateInput = {
    npd_tgl?: DateTimeFieldUpdateOperationsInput | Date | string
    npd_nominal?: BigIntFieldUpdateOperationsInput | bigint | number
    npd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    npd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_pegawai?: spt_pegawaiUpdateOneRequiredWithoutNpdNestedInput
  }

  export type npdUncheckedUpdateInput = {
    npd_spt_pegawai?: IntFieldUpdateOperationsInput | number
    npd_tgl?: DateTimeFieldUpdateOperationsInput | Date | string
    npd_nominal?: BigIntFieldUpdateOperationsInput | bigint | number
    npd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    npd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type npdCreateManyInput = {
    npd_spt_pegawai: number
    npd_tgl: Date | string
    npd_nominal: bigint | number
    npd_created?: Date | string
    npd_updated?: Date | string
  }

  export type npdUpdateManyMutationInput = {
    npd_tgl?: DateTimeFieldUpdateOperationsInput | Date | string
    npd_nominal?: BigIntFieldUpdateOperationsInput | bigint | number
    npd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    npd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type npdUncheckedUpdateManyInput = {
    npd_spt_pegawai?: IntFieldUpdateOperationsInput | number
    npd_tgl?: DateTimeFieldUpdateOperationsInput | Date | string
    npd_nominal?: BigIntFieldUpdateOperationsInput | bigint | number
    npd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    npd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type biayaCreateInput = {
    biaya_komponen: number
    biaya_standard: number
    biaya_nilai: number
    biaya_keterangan1?: string | null
    biaya_keterangan2?: string | null
    biaya_keterangan3?: string | null
    biaya_keterangan4?: string | null
    biaya_bukti?: string | null
    biaya_created?: Date | string
    biaya_updated?: Date | string | null
    spt_pegawai: spt_pegawaiCreateNestedOneWithoutBiayaInput
  }

  export type biayaUncheckedCreateInput = {
    biaya_komponen: number
    biaya_standard: number
    biaya_nilai: number
    biaya_keterangan1?: string | null
    biaya_keterangan2?: string | null
    biaya_keterangan3?: string | null
    biaya_keterangan4?: string | null
    biaya_bukti?: string | null
    biaya_created?: Date | string
    biaya_updated?: Date | string | null
    biaya_spt_pegawai: number
  }

  export type biayaUpdateInput = {
    biaya_komponen?: IntFieldUpdateOperationsInput | number
    biaya_standard?: IntFieldUpdateOperationsInput | number
    biaya_nilai?: IntFieldUpdateOperationsInput | number
    biaya_keterangan1?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan2?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan3?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan4?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_bukti?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_created?: DateTimeFieldUpdateOperationsInput | Date | string
    biaya_updated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateOneRequiredWithoutBiayaNestedInput
  }

  export type biayaUncheckedUpdateInput = {
    biaya_komponen?: IntFieldUpdateOperationsInput | number
    biaya_standard?: IntFieldUpdateOperationsInput | number
    biaya_nilai?: IntFieldUpdateOperationsInput | number
    biaya_keterangan1?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan2?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan3?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan4?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_bukti?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_created?: DateTimeFieldUpdateOperationsInput | Date | string
    biaya_updated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    biaya_spt_pegawai?: IntFieldUpdateOperationsInput | number
  }

  export type biayaCreateManyInput = {
    biaya_komponen: number
    biaya_standard: number
    biaya_nilai: number
    biaya_keterangan1?: string | null
    biaya_keterangan2?: string | null
    biaya_keterangan3?: string | null
    biaya_keterangan4?: string | null
    biaya_bukti?: string | null
    biaya_created?: Date | string
    biaya_updated?: Date | string | null
    biaya_spt_pegawai: number
  }

  export type biayaUpdateManyMutationInput = {
    biaya_komponen?: IntFieldUpdateOperationsInput | number
    biaya_standard?: IntFieldUpdateOperationsInput | number
    biaya_nilai?: IntFieldUpdateOperationsInput | number
    biaya_keterangan1?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan2?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan3?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan4?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_bukti?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_created?: DateTimeFieldUpdateOperationsInput | Date | string
    biaya_updated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type biayaUncheckedUpdateManyInput = {
    biaya_komponen?: IntFieldUpdateOperationsInput | number
    biaya_standard?: IntFieldUpdateOperationsInput | number
    biaya_nilai?: IntFieldUpdateOperationsInput | number
    biaya_keterangan1?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan2?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan3?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan4?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_bukti?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_created?: DateTimeFieldUpdateOperationsInput | Date | string
    biaya_updated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    biaya_spt_pegawai?: IntFieldUpdateOperationsInput | number
  }

  export type provinsiCreateInput = {
    provinsi_id: number
    provinsi_nama: string
    kota?: kotaCreateNestedManyWithoutProvinsiInput
  }

  export type provinsiUncheckedCreateInput = {
    provinsi_id: number
    provinsi_nama: string
    kota?: kotaUncheckedCreateNestedManyWithoutProvinsiInput
  }

  export type provinsiUpdateInput = {
    provinsi_id?: IntFieldUpdateOperationsInput | number
    provinsi_nama?: StringFieldUpdateOperationsInput | string
    kota?: kotaUpdateManyWithoutProvinsiNestedInput
  }

  export type provinsiUncheckedUpdateInput = {
    provinsi_id?: IntFieldUpdateOperationsInput | number
    provinsi_nama?: StringFieldUpdateOperationsInput | string
    kota?: kotaUncheckedUpdateManyWithoutProvinsiNestedInput
  }

  export type provinsiCreateManyInput = {
    provinsi_id: number
    provinsi_nama: string
  }

  export type provinsiUpdateManyMutationInput = {
    provinsi_id?: IntFieldUpdateOperationsInput | number
    provinsi_nama?: StringFieldUpdateOperationsInput | string
  }

  export type provinsiUncheckedUpdateManyInput = {
    provinsi_id?: IntFieldUpdateOperationsInput | number
    provinsi_nama?: StringFieldUpdateOperationsInput | string
  }

  export type kotaCreateInput = {
    kota_id: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_asal?: sptCreateNestedManyWithoutKota_asalInput
    kota_tujuan?: sptCreateNestedManyWithoutKota_tujuanInput
    kota_tujuan2?: sptCreateNestedManyWithoutKota_tujuan2Input
    spt?: sptCreateNestedManyWithoutKotaInput
    provinsi?: provinsiCreateNestedOneWithoutKotaInput
    standard_asal?: standardCreateNestedManyWithoutKota_asalInput
    standard_tujuan?: standardCreateNestedManyWithoutKota_tujuanInput
  }

  export type kotaUncheckedCreateInput = {
    kota_id: number
    kota_provinsi: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_asal?: sptUncheckedCreateNestedManyWithoutKota_asalInput
    kota_tujuan?: sptUncheckedCreateNestedManyWithoutKota_tujuanInput
    kota_tujuan2?: sptUncheckedCreateNestedManyWithoutKota_tujuan2Input
    spt?: sptUncheckedCreateNestedManyWithoutKotaInput
    standard_asal?: standardUncheckedCreateNestedManyWithoutKota_asalInput
    standard_tujuan?: standardUncheckedCreateNestedManyWithoutKota_tujuanInput
  }

  export type kotaUpdateInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: sptUpdateManyWithoutKota_asalNestedInput
    kota_tujuan?: sptUpdateManyWithoutKota_tujuanNestedInput
    kota_tujuan2?: sptUpdateManyWithoutKota_tujuan2NestedInput
    spt?: sptUpdateManyWithoutKotaNestedInput
    provinsi?: provinsiUpdateOneWithoutKotaNestedInput
    standard_asal?: standardUpdateManyWithoutKota_asalNestedInput
    standard_tujuan?: standardUpdateManyWithoutKota_tujuanNestedInput
  }

  export type kotaUncheckedUpdateInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_provinsi?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: sptUncheckedUpdateManyWithoutKota_asalNestedInput
    kota_tujuan?: sptUncheckedUpdateManyWithoutKota_tujuanNestedInput
    kota_tujuan2?: sptUncheckedUpdateManyWithoutKota_tujuan2NestedInput
    spt?: sptUncheckedUpdateManyWithoutKotaNestedInput
    standard_asal?: standardUncheckedUpdateManyWithoutKota_asalNestedInput
    standard_tujuan?: standardUncheckedUpdateManyWithoutKota_tujuanNestedInput
  }

  export type kotaCreateManyInput = {
    kota_id: number
    kota_provinsi: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
  }

  export type kotaUpdateManyMutationInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type kotaUncheckedUpdateManyInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_provinsi?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type laporanCreateInput = {
    laporan_isi: string
    laporan_created?: Date | string
    laporan_updated?: Date | string
    spt_pegawai: spt_pegawaiCreateNestedOneWithoutLaporanInput
  }

  export type laporanUncheckedCreateInput = {
    laporan_id?: number
    laporan_spt_pegawai: number
    laporan_isi: string
    laporan_created?: Date | string
    laporan_updated?: Date | string
  }

  export type laporanUpdateInput = {
    laporan_isi?: StringFieldUpdateOperationsInput | string
    laporan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    laporan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_pegawai?: spt_pegawaiUpdateOneRequiredWithoutLaporanNestedInput
  }

  export type laporanUncheckedUpdateInput = {
    laporan_id?: IntFieldUpdateOperationsInput | number
    laporan_spt_pegawai?: IntFieldUpdateOperationsInput | number
    laporan_isi?: StringFieldUpdateOperationsInput | string
    laporan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    laporan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type laporanCreateManyInput = {
    laporan_id?: number
    laporan_spt_pegawai: number
    laporan_isi: string
    laporan_created?: Date | string
    laporan_updated?: Date | string
  }

  export type laporanUpdateManyMutationInput = {
    laporan_isi?: StringFieldUpdateOperationsInput | string
    laporan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    laporan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type laporanUncheckedUpdateManyInput = {
    laporan_id?: IntFieldUpdateOperationsInput | number
    laporan_spt_pegawai?: IntFieldUpdateOperationsInput | number
    laporan_isi?: StringFieldUpdateOperationsInput | string
    laporan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    laporan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type settingCreateInput = {
    setting_id: string
    setting_value: string
    setting_lastupdate?: Date | string
    opd: opdCreateNestedOneWithoutSettingInput
  }

  export type settingUncheckedCreateInput = {
    setting_id: string
    setting_opd: number
    setting_value: string
    setting_lastupdate?: Date | string
  }

  export type settingUpdateInput = {
    setting_id?: StringFieldUpdateOperationsInput | string
    setting_value?: StringFieldUpdateOperationsInput | string
    setting_lastupdate?: DateTimeFieldUpdateOperationsInput | Date | string
    opd?: opdUpdateOneRequiredWithoutSettingNestedInput
  }

  export type settingUncheckedUpdateInput = {
    setting_id?: StringFieldUpdateOperationsInput | string
    setting_opd?: IntFieldUpdateOperationsInput | number
    setting_value?: StringFieldUpdateOperationsInput | string
    setting_lastupdate?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type settingCreateManyInput = {
    setting_id: string
    setting_opd: number
    setting_value: string
    setting_lastupdate?: Date | string
  }

  export type settingUpdateManyMutationInput = {
    setting_id?: StringFieldUpdateOperationsInput | string
    setting_value?: StringFieldUpdateOperationsInput | string
    setting_lastupdate?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type settingUncheckedUpdateManyInput = {
    setting_id?: StringFieldUpdateOperationsInput | string
    setting_opd?: IntFieldUpdateOperationsInput | number
    setting_value?: StringFieldUpdateOperationsInput | string
    setting_lastupdate?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type kegiatanCreateInput = {
    kegiatan_kode: string
    kegiatan_program: string
    kegiatan_nama: string
    kegiatan_subkegiatan: string
    kegiatan_created?: Date | string
    kegiatan_updated?: Date | string
    kegiatan_deleted?: Date | string | null
    sumberdana?: sumberdanaCreateNestedManyWithoutKegiatanInput
    spt?: sptCreateNestedManyWithoutKegiatanInput
    opd: opdCreateNestedOneWithoutKegiatanInput
  }

  export type kegiatanUncheckedCreateInput = {
    kegiatan_id?: number
    kegiatan_opd: number
    kegiatan_kode: string
    kegiatan_program: string
    kegiatan_nama: string
    kegiatan_subkegiatan: string
    kegiatan_created?: Date | string
    kegiatan_updated?: Date | string
    kegiatan_deleted?: Date | string | null
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutKegiatanInput
    spt?: sptUncheckedCreateNestedManyWithoutKegiatanInput
  }

  export type kegiatanUpdateInput = {
    kegiatan_kode?: StringFieldUpdateOperationsInput | string
    kegiatan_program?: StringFieldUpdateOperationsInput | string
    kegiatan_nama?: StringFieldUpdateOperationsInput | string
    kegiatan_subkegiatan?: StringFieldUpdateOperationsInput | string
    kegiatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sumberdana?: sumberdanaUpdateManyWithoutKegiatanNestedInput
    spt?: sptUpdateManyWithoutKegiatanNestedInput
    opd?: opdUpdateOneRequiredWithoutKegiatanNestedInput
  }

  export type kegiatanUncheckedUpdateInput = {
    kegiatan_id?: IntFieldUpdateOperationsInput | number
    kegiatan_opd?: IntFieldUpdateOperationsInput | number
    kegiatan_kode?: StringFieldUpdateOperationsInput | string
    kegiatan_program?: StringFieldUpdateOperationsInput | string
    kegiatan_nama?: StringFieldUpdateOperationsInput | string
    kegiatan_subkegiatan?: StringFieldUpdateOperationsInput | string
    kegiatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutKegiatanNestedInput
    spt?: sptUncheckedUpdateManyWithoutKegiatanNestedInput
  }

  export type kegiatanCreateManyInput = {
    kegiatan_id?: number
    kegiatan_opd: number
    kegiatan_kode: string
    kegiatan_program: string
    kegiatan_nama: string
    kegiatan_subkegiatan: string
    kegiatan_created?: Date | string
    kegiatan_updated?: Date | string
    kegiatan_deleted?: Date | string | null
  }

  export type kegiatanUpdateManyMutationInput = {
    kegiatan_kode?: StringFieldUpdateOperationsInput | string
    kegiatan_program?: StringFieldUpdateOperationsInput | string
    kegiatan_nama?: StringFieldUpdateOperationsInput | string
    kegiatan_subkegiatan?: StringFieldUpdateOperationsInput | string
    kegiatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type kegiatanUncheckedUpdateManyInput = {
    kegiatan_id?: IntFieldUpdateOperationsInput | number
    kegiatan_opd?: IntFieldUpdateOperationsInput | number
    kegiatan_kode?: StringFieldUpdateOperationsInput | string
    kegiatan_program?: StringFieldUpdateOperationsInput | string
    kegiatan_nama?: StringFieldUpdateOperationsInput | string
    kegiatan_subkegiatan?: StringFieldUpdateOperationsInput | string
    kegiatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sumberdanaCreateInput = {
    sd_tahun: string
    sd_kode_rekening: string
    sd_nama: string
    sd_jumlah: bigint | number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    opd: opdCreateNestedOneWithoutSumberdanaInput
    kegiatan: kegiatanCreateNestedOneWithoutSumberdanaInput
    users: usersCreateNestedOneWithoutSumberdanaInput
    spt?: sptCreateNestedManyWithoutSumber_danaInput
    bendahara: usersCreateNestedOneWithoutSumberdana_bendaharaInput
    pengguna_anggaran: usersCreateNestedOneWithoutSumberdana_paInput
    ttd_gajian?: ttd_gajianCreateNestedManyWithoutSumberdanaInput
  }

  export type sumberdanaUncheckedCreateInput = {
    sd_id?: number
    sd_tahun: string
    sd_opd: number
    sd_kode_rekening: string
    sd_nama: string
    sd_kegiatan: number
    sd_jumlah: bigint | number
    sd_pptk: number
    sd_pa: number
    sd_bendahara: number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    spt?: sptUncheckedCreateNestedManyWithoutSumber_danaInput
    ttd_gajian?: ttd_gajianUncheckedCreateNestedManyWithoutSumberdanaInput
  }

  export type sumberdanaUpdateInput = {
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    opd?: opdUpdateOneRequiredWithoutSumberdanaNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSumberdanaNestedInput
    users?: usersUpdateOneRequiredWithoutSumberdanaNestedInput
    spt?: sptUpdateManyWithoutSumber_danaNestedInput
    bendahara?: usersUpdateOneRequiredWithoutSumberdana_bendaharaNestedInput
    pengguna_anggaran?: usersUpdateOneRequiredWithoutSumberdana_paNestedInput
    ttd_gajian?: ttd_gajianUpdateManyWithoutSumberdanaNestedInput
  }

  export type sumberdanaUncheckedUpdateInput = {
    sd_id?: IntFieldUpdateOperationsInput | number
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_opd?: IntFieldUpdateOperationsInput | number
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_kegiatan?: IntFieldUpdateOperationsInput | number
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_pptk?: IntFieldUpdateOperationsInput | number
    sd_pa?: IntFieldUpdateOperationsInput | number
    sd_bendahara?: IntFieldUpdateOperationsInput | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt?: sptUncheckedUpdateManyWithoutSumber_danaNestedInput
    ttd_gajian?: ttd_gajianUncheckedUpdateManyWithoutSumberdanaNestedInput
  }

  export type sumberdanaCreateManyInput = {
    sd_id?: number
    sd_tahun: string
    sd_opd: number
    sd_kode_rekening: string
    sd_nama: string
    sd_kegiatan: number
    sd_jumlah: bigint | number
    sd_pptk: number
    sd_pa: number
    sd_bendahara: number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
  }

  export type sumberdanaUpdateManyMutationInput = {
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sumberdanaUncheckedUpdateManyInput = {
    sd_id?: IntFieldUpdateOperationsInput | number
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_opd?: IntFieldUpdateOperationsInput | number
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_kegiatan?: IntFieldUpdateOperationsInput | number
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_pptk?: IntFieldUpdateOperationsInput | number
    sd_pa?: IntFieldUpdateOperationsInput | number
    sd_bendahara?: IntFieldUpdateOperationsInput | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type opdCreateInput = {
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
    users?: usersCreateNestedManyWithoutOpdInput
    spt?: sptCreateNestedManyWithoutOpdInput
    setting?: settingCreateNestedManyWithoutOpdInput
    sumberdana?: sumberdanaCreateNestedManyWithoutOpdInput
    standard?: standardCreateNestedManyWithoutOpdInput
    kegiatan?: kegiatanCreateNestedManyWithoutOpdInput
  }

  export type opdUncheckedCreateInput = {
    opd_id?: number
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
    users?: usersUncheckedCreateNestedManyWithoutOpdInput
    spt?: sptUncheckedCreateNestedManyWithoutOpdInput
    setting?: settingUncheckedCreateNestedManyWithoutOpdInput
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutOpdInput
    standard?: standardUncheckedCreateNestedManyWithoutOpdInput
    kegiatan?: kegiatanUncheckedCreateNestedManyWithoutOpdInput
  }

  export type opdUpdateInput = {
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateManyWithoutOpdNestedInput
    spt?: sptUpdateManyWithoutOpdNestedInput
    setting?: settingUpdateManyWithoutOpdNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutOpdNestedInput
    standard?: standardUpdateManyWithoutOpdNestedInput
    kegiatan?: kegiatanUpdateManyWithoutOpdNestedInput
  }

  export type opdUncheckedUpdateInput = {
    opd_id?: IntFieldUpdateOperationsInput | number
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUncheckedUpdateManyWithoutOpdNestedInput
    spt?: sptUncheckedUpdateManyWithoutOpdNestedInput
    setting?: settingUncheckedUpdateManyWithoutOpdNestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutOpdNestedInput
    standard?: standardUncheckedUpdateManyWithoutOpdNestedInput
    kegiatan?: kegiatanUncheckedUpdateManyWithoutOpdNestedInput
  }

  export type opdCreateManyInput = {
    opd_id?: number
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
  }

  export type opdUpdateManyMutationInput = {
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type opdUncheckedUpdateManyInput = {
    opd_id?: IntFieldUpdateOperationsInput | number
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type jabatanCreateInput = {
    jabatan_opd: number
    jabatan_nama: string
    jabatan_kop_surat?: number | null
    jabatan_kelas_biaya: number
    jabatan_kwitansi?: number | null
    jabatan_kelompok?: number | null
    jabatan_created?: Date | string
    jabatan_updated?: Date | string
    jabatan_deleted?: Date | string | null
    users?: usersCreateNestedManyWithoutJabatanInput
  }

  export type jabatanUncheckedCreateInput = {
    jabatan_id?: number
    jabatan_opd: number
    jabatan_nama: string
    jabatan_kop_surat?: number | null
    jabatan_kelas_biaya: number
    jabatan_kwitansi?: number | null
    jabatan_kelompok?: number | null
    jabatan_created?: Date | string
    jabatan_updated?: Date | string
    jabatan_deleted?: Date | string | null
    users?: usersUncheckedCreateNestedManyWithoutJabatanInput
  }

  export type jabatanUpdateInput = {
    jabatan_opd?: IntFieldUpdateOperationsInput | number
    jabatan_nama?: StringFieldUpdateOperationsInput | string
    jabatan_kop_surat?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_kelas_biaya?: IntFieldUpdateOperationsInput | number
    jabatan_kwitansi?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_kelompok?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    jabatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    jabatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateManyWithoutJabatanNestedInput
  }

  export type jabatanUncheckedUpdateInput = {
    jabatan_id?: IntFieldUpdateOperationsInput | number
    jabatan_opd?: IntFieldUpdateOperationsInput | number
    jabatan_nama?: StringFieldUpdateOperationsInput | string
    jabatan_kop_surat?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_kelas_biaya?: IntFieldUpdateOperationsInput | number
    jabatan_kwitansi?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_kelompok?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    jabatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    jabatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUncheckedUpdateManyWithoutJabatanNestedInput
  }

  export type jabatanCreateManyInput = {
    jabatan_id?: number
    jabatan_opd: number
    jabatan_nama: string
    jabatan_kop_surat?: number | null
    jabatan_kelas_biaya: number
    jabatan_kwitansi?: number | null
    jabatan_kelompok?: number | null
    jabatan_created?: Date | string
    jabatan_updated?: Date | string
    jabatan_deleted?: Date | string | null
  }

  export type jabatanUpdateManyMutationInput = {
    jabatan_opd?: IntFieldUpdateOperationsInput | number
    jabatan_nama?: StringFieldUpdateOperationsInput | string
    jabatan_kop_surat?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_kelas_biaya?: IntFieldUpdateOperationsInput | number
    jabatan_kwitansi?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_kelompok?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    jabatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    jabatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type jabatanUncheckedUpdateManyInput = {
    jabatan_id?: IntFieldUpdateOperationsInput | number
    jabatan_opd?: IntFieldUpdateOperationsInput | number
    jabatan_nama?: StringFieldUpdateOperationsInput | string
    jabatan_kop_surat?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_kelas_biaya?: IntFieldUpdateOperationsInput | number
    jabatan_kwitansi?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_kelompok?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    jabatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    jabatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type kwitansiCreateInput = {
    kwitansi_nomor: string
    kwitansi_opd: number
    kwitansi_created?: Date | string
    kwitansi_updated?: Date | string
    spt_pegawai: spt_pegawaiCreateNestedOneWithoutKwitansiInput
  }

  export type kwitansiUncheckedCreateInput = {
    kwitansi_spt_pegawai: number
    kwitansi_nomor: string
    kwitansi_opd: number
    kwitansi_created?: Date | string
    kwitansi_updated?: Date | string
  }

  export type kwitansiUpdateInput = {
    kwitansi_nomor?: StringFieldUpdateOperationsInput | string
    kwitansi_opd?: IntFieldUpdateOperationsInput | number
    kwitansi_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kwitansi_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_pegawai?: spt_pegawaiUpdateOneRequiredWithoutKwitansiNestedInput
  }

  export type kwitansiUncheckedUpdateInput = {
    kwitansi_spt_pegawai?: IntFieldUpdateOperationsInput | number
    kwitansi_nomor?: StringFieldUpdateOperationsInput | string
    kwitansi_opd?: IntFieldUpdateOperationsInput | number
    kwitansi_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kwitansi_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type kwitansiCreateManyInput = {
    kwitansi_spt_pegawai: number
    kwitansi_nomor: string
    kwitansi_opd: number
    kwitansi_created?: Date | string
    kwitansi_updated?: Date | string
  }

  export type kwitansiUpdateManyMutationInput = {
    kwitansi_nomor?: StringFieldUpdateOperationsInput | string
    kwitansi_opd?: IntFieldUpdateOperationsInput | number
    kwitansi_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kwitansi_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type kwitansiUncheckedUpdateManyInput = {
    kwitansi_spt_pegawai?: IntFieldUpdateOperationsInput | number
    kwitansi_nomor?: StringFieldUpdateOperationsInput | string
    kwitansi_opd?: IntFieldUpdateOperationsInput | number
    kwitansi_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kwitansi_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type kategoriCreateInput = {
    kategori_nama: string
    kategori_opd: number
    kategori_created?: Date | string
    kategori_updated?: Date | string
    kategori_deleted?: Date | string | null
    spt?: sptCreateNestedManyWithoutKategoriInput
  }

  export type kategoriUncheckedCreateInput = {
    kategori_id?: number
    kategori_nama: string
    kategori_opd: number
    kategori_created?: Date | string
    kategori_updated?: Date | string
    kategori_deleted?: Date | string | null
    spt?: sptUncheckedCreateNestedManyWithoutKategoriInput
  }

  export type kategoriUpdateInput = {
    kategori_nama?: StringFieldUpdateOperationsInput | string
    kategori_opd?: IntFieldUpdateOperationsInput | number
    kategori_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt?: sptUpdateManyWithoutKategoriNestedInput
  }

  export type kategoriUncheckedUpdateInput = {
    kategori_id?: IntFieldUpdateOperationsInput | number
    kategori_nama?: StringFieldUpdateOperationsInput | string
    kategori_opd?: IntFieldUpdateOperationsInput | number
    kategori_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt?: sptUncheckedUpdateManyWithoutKategoriNestedInput
  }

  export type kategoriCreateManyInput = {
    kategori_id?: number
    kategori_nama: string
    kategori_opd: number
    kategori_created?: Date | string
    kategori_updated?: Date | string
    kategori_deleted?: Date | string | null
  }

  export type kategoriUpdateManyMutationInput = {
    kategori_nama?: StringFieldUpdateOperationsInput | string
    kategori_opd?: IntFieldUpdateOperationsInput | number
    kategori_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type kategoriUncheckedUpdateManyInput = {
    kategori_id?: IntFieldUpdateOperationsInput | number
    kategori_nama?: StringFieldUpdateOperationsInput | string
    kategori_opd?: IntFieldUpdateOperationsInput | number
    kategori_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type standardCreateInput = {
    standard_kode: number
    standard_via: number
    standard_kelas: number
    standard_nominal: number
    standard_created?: Date | string
    standard_updated?: Date | string
    standard_deleted?: Date | string | null
    kota_asal?: kotaCreateNestedOneWithoutStandard_asalInput
    kota_tujuan?: kotaCreateNestedOneWithoutStandard_tujuanInput
    opd: opdCreateNestedOneWithoutStandardInput
  }

  export type standardUncheckedCreateInput = {
    standard_id?: number
    standard_kode: number
    standard_opd: number
    standard_kota_asal: number
    standard_kota_tujuan: number
    standard_via: number
    standard_kelas: number
    standard_nominal: number
    standard_created?: Date | string
    standard_updated?: Date | string
    standard_deleted?: Date | string | null
  }

  export type standardUpdateInput = {
    standard_kode?: IntFieldUpdateOperationsInput | number
    standard_via?: IntFieldUpdateOperationsInput | number
    standard_kelas?: IntFieldUpdateOperationsInput | number
    standard_nominal?: IntFieldUpdateOperationsInput | number
    standard_created?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: kotaUpdateOneWithoutStandard_asalNestedInput
    kota_tujuan?: kotaUpdateOneWithoutStandard_tujuanNestedInput
    opd?: opdUpdateOneRequiredWithoutStandardNestedInput
  }

  export type standardUncheckedUpdateInput = {
    standard_id?: IntFieldUpdateOperationsInput | number
    standard_kode?: IntFieldUpdateOperationsInput | number
    standard_opd?: IntFieldUpdateOperationsInput | number
    standard_kota_asal?: IntFieldUpdateOperationsInput | number
    standard_kota_tujuan?: IntFieldUpdateOperationsInput | number
    standard_via?: IntFieldUpdateOperationsInput | number
    standard_kelas?: IntFieldUpdateOperationsInput | number
    standard_nominal?: IntFieldUpdateOperationsInput | number
    standard_created?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type standardCreateManyInput = {
    standard_id?: number
    standard_kode: number
    standard_opd: number
    standard_kota_asal: number
    standard_kota_tujuan: number
    standard_via: number
    standard_kelas: number
    standard_nominal: number
    standard_created?: Date | string
    standard_updated?: Date | string
    standard_deleted?: Date | string | null
  }

  export type standardUpdateManyMutationInput = {
    standard_kode?: IntFieldUpdateOperationsInput | number
    standard_via?: IntFieldUpdateOperationsInput | number
    standard_kelas?: IntFieldUpdateOperationsInput | number
    standard_nominal?: IntFieldUpdateOperationsInput | number
    standard_created?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type standardUncheckedUpdateManyInput = {
    standard_id?: IntFieldUpdateOperationsInput | number
    standard_kode?: IntFieldUpdateOperationsInput | number
    standard_opd?: IntFieldUpdateOperationsInput | number
    standard_kota_asal?: IntFieldUpdateOperationsInput | number
    standard_kota_tujuan?: IntFieldUpdateOperationsInput | number
    standard_via?: IntFieldUpdateOperationsInput | number
    standard_kelas?: IntFieldUpdateOperationsInput | number
    standard_nominal?: IntFieldUpdateOperationsInput | number
    standard_created?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type bankCreateInput = {
    bank_name: number
    bank_account: string
    bank_number: string
    user: usersCreateNestedOneWithoutBankInput
  }

  export type bankUncheckedCreateInput = {
    bank_user: number
    bank_name: number
    bank_account: string
    bank_number: string
  }

  export type bankUpdateInput = {
    bank_name?: IntFieldUpdateOperationsInput | number
    bank_account?: StringFieldUpdateOperationsInput | string
    bank_number?: StringFieldUpdateOperationsInput | string
    user?: usersUpdateOneRequiredWithoutBankNestedInput
  }

  export type bankUncheckedUpdateInput = {
    bank_user?: IntFieldUpdateOperationsInput | number
    bank_name?: IntFieldUpdateOperationsInput | number
    bank_account?: StringFieldUpdateOperationsInput | string
    bank_number?: StringFieldUpdateOperationsInput | string
  }

  export type bankCreateManyInput = {
    bank_user: number
    bank_name: number
    bank_account: string
    bank_number: string
  }

  export type bankUpdateManyMutationInput = {
    bank_name?: IntFieldUpdateOperationsInput | number
    bank_account?: StringFieldUpdateOperationsInput | string
    bank_number?: StringFieldUpdateOperationsInput | string
  }

  export type bankUncheckedUpdateManyInput = {
    bank_user?: IntFieldUpdateOperationsInput | number
    bank_name?: IntFieldUpdateOperationsInput | number
    bank_account?: StringFieldUpdateOperationsInput | string
    bank_number?: StringFieldUpdateOperationsInput | string
  }

  export type tunjangan_potonganCreateInput = {
    tp_jenis: number
    tp_nama: string
    tp_urutan: number
    tp_kelompok: number
    tp_created?: Date | string
    tp_update?: Date | string
    tp_deleted?: Date | string | null
    gajian?: gajianCreateNestedManyWithoutTunjangan_potonganInput
  }

  export type tunjangan_potonganUncheckedCreateInput = {
    tp_id?: number
    tp_jenis: number
    tp_nama: string
    tp_urutan: number
    tp_kelompok: number
    tp_created?: Date | string
    tp_update?: Date | string
    tp_deleted?: Date | string | null
    gajian?: gajianUncheckedCreateNestedManyWithoutTunjangan_potonganInput
  }

  export type tunjangan_potonganUpdateInput = {
    tp_jenis?: IntFieldUpdateOperationsInput | number
    tp_nama?: StringFieldUpdateOperationsInput | string
    tp_urutan?: IntFieldUpdateOperationsInput | number
    tp_kelompok?: IntFieldUpdateOperationsInput | number
    tp_created?: DateTimeFieldUpdateOperationsInput | Date | string
    tp_update?: DateTimeFieldUpdateOperationsInput | Date | string
    tp_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gajian?: gajianUpdateManyWithoutTunjangan_potonganNestedInput
  }

  export type tunjangan_potonganUncheckedUpdateInput = {
    tp_id?: IntFieldUpdateOperationsInput | number
    tp_jenis?: IntFieldUpdateOperationsInput | number
    tp_nama?: StringFieldUpdateOperationsInput | string
    tp_urutan?: IntFieldUpdateOperationsInput | number
    tp_kelompok?: IntFieldUpdateOperationsInput | number
    tp_created?: DateTimeFieldUpdateOperationsInput | Date | string
    tp_update?: DateTimeFieldUpdateOperationsInput | Date | string
    tp_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gajian?: gajianUncheckedUpdateManyWithoutTunjangan_potonganNestedInput
  }

  export type tunjangan_potonganCreateManyInput = {
    tp_id?: number
    tp_jenis: number
    tp_nama: string
    tp_urutan: number
    tp_kelompok: number
    tp_created?: Date | string
    tp_update?: Date | string
    tp_deleted?: Date | string | null
  }

  export type tunjangan_potonganUpdateManyMutationInput = {
    tp_jenis?: IntFieldUpdateOperationsInput | number
    tp_nama?: StringFieldUpdateOperationsInput | string
    tp_urutan?: IntFieldUpdateOperationsInput | number
    tp_kelompok?: IntFieldUpdateOperationsInput | number
    tp_created?: DateTimeFieldUpdateOperationsInput | Date | string
    tp_update?: DateTimeFieldUpdateOperationsInput | Date | string
    tp_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tunjangan_potonganUncheckedUpdateManyInput = {
    tp_id?: IntFieldUpdateOperationsInput | number
    tp_jenis?: IntFieldUpdateOperationsInput | number
    tp_nama?: StringFieldUpdateOperationsInput | string
    tp_urutan?: IntFieldUpdateOperationsInput | number
    tp_kelompok?: IntFieldUpdateOperationsInput | number
    tp_created?: DateTimeFieldUpdateOperationsInput | Date | string
    tp_update?: DateTimeFieldUpdateOperationsInput | Date | string
    tp_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gajianCreateInput = {
    gajian_bulan: number
    gajian_tahun: number
    gajian_nominal: number
    gajian_created?: Date | string
    gajian_updated?: Date | string
    gajian_deleted?: Date | string | null
    users: usersCreateNestedOneWithoutGajianInput
    tunjangan_potongan: tunjangan_potonganCreateNestedOneWithoutGajianInput
  }

  export type gajianUncheckedCreateInput = {
    gajian_id?: number
    gajian_pegawai: number
    gajian_bulan: number
    gajian_tahun: number
    gajian_tunjangan_potongan: number
    gajian_nominal: number
    gajian_created?: Date | string
    gajian_updated?: Date | string
    gajian_deleted?: Date | string | null
  }

  export type gajianUpdateInput = {
    gajian_bulan?: IntFieldUpdateOperationsInput | number
    gajian_tahun?: IntFieldUpdateOperationsInput | number
    gajian_nominal?: IntFieldUpdateOperationsInput | number
    gajian_created?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutGajianNestedInput
    tunjangan_potongan?: tunjangan_potonganUpdateOneRequiredWithoutGajianNestedInput
  }

  export type gajianUncheckedUpdateInput = {
    gajian_id?: IntFieldUpdateOperationsInput | number
    gajian_pegawai?: IntFieldUpdateOperationsInput | number
    gajian_bulan?: IntFieldUpdateOperationsInput | number
    gajian_tahun?: IntFieldUpdateOperationsInput | number
    gajian_tunjangan_potongan?: IntFieldUpdateOperationsInput | number
    gajian_nominal?: IntFieldUpdateOperationsInput | number
    gajian_created?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gajianCreateManyInput = {
    gajian_id?: number
    gajian_pegawai: number
    gajian_bulan: number
    gajian_tahun: number
    gajian_tunjangan_potongan: number
    gajian_nominal: number
    gajian_created?: Date | string
    gajian_updated?: Date | string
    gajian_deleted?: Date | string | null
  }

  export type gajianUpdateManyMutationInput = {
    gajian_bulan?: IntFieldUpdateOperationsInput | number
    gajian_tahun?: IntFieldUpdateOperationsInput | number
    gajian_nominal?: IntFieldUpdateOperationsInput | number
    gajian_created?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gajianUncheckedUpdateManyInput = {
    gajian_id?: IntFieldUpdateOperationsInput | number
    gajian_pegawai?: IntFieldUpdateOperationsInput | number
    gajian_bulan?: IntFieldUpdateOperationsInput | number
    gajian_tahun?: IntFieldUpdateOperationsInput | number
    gajian_tunjangan_potongan?: IntFieldUpdateOperationsInput | number
    gajian_nominal?: IntFieldUpdateOperationsInput | number
    gajian_created?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ttd_gajianCreateInput = {
    ttd_bulan: number
    ttd_tahun: number
    ttd_created: Date | string
    ttd_updated?: Date | string
    ttd_deleted?: Date | string | null
    sumberdana: sumberdanaCreateNestedOneWithoutTtd_gajianInput
  }

  export type ttd_gajianUncheckedCreateInput = {
    ttd_id?: number
    ttd_bulan: number
    ttd_tahun: number
    ttd_sumberdana: number
    ttd_created: Date | string
    ttd_updated?: Date | string
    ttd_deleted?: Date | string | null
  }

  export type ttd_gajianUpdateInput = {
    ttd_bulan?: IntFieldUpdateOperationsInput | number
    ttd_tahun?: IntFieldUpdateOperationsInput | number
    ttd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    ttd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    ttd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sumberdana?: sumberdanaUpdateOneRequiredWithoutTtd_gajianNestedInput
  }

  export type ttd_gajianUncheckedUpdateInput = {
    ttd_id?: IntFieldUpdateOperationsInput | number
    ttd_bulan?: IntFieldUpdateOperationsInput | number
    ttd_tahun?: IntFieldUpdateOperationsInput | number
    ttd_sumberdana?: IntFieldUpdateOperationsInput | number
    ttd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    ttd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    ttd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ttd_gajianCreateManyInput = {
    ttd_id?: number
    ttd_bulan: number
    ttd_tahun: number
    ttd_sumberdana: number
    ttd_created: Date | string
    ttd_updated?: Date | string
    ttd_deleted?: Date | string | null
  }

  export type ttd_gajianUpdateManyMutationInput = {
    ttd_bulan?: IntFieldUpdateOperationsInput | number
    ttd_tahun?: IntFieldUpdateOperationsInput | number
    ttd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    ttd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    ttd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ttd_gajianUncheckedUpdateManyInput = {
    ttd_id?: IntFieldUpdateOperationsInput | number
    ttd_bulan?: IntFieldUpdateOperationsInput | number
    ttd_tahun?: IntFieldUpdateOperationsInput | number
    ttd_sumberdana?: IntFieldUpdateOperationsInput | number
    ttd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    ttd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    ttd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EnumJKFilter<$PrismaModel = never> = {
    equals?: $Enums.JK | EnumJKFieldRefInput<$PrismaModel>
    in?: $Enums.JK[]
    notIn?: $Enums.JK[]
    not?: NestedEnumJKFilter<$PrismaModel> | $Enums.JK
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type Spt_pegawaiListRelationFilter = {
    every?: spt_pegawaiWhereInput
    some?: spt_pegawaiWhereInput
    none?: spt_pegawaiWhereInput
  }

  export type SptListRelationFilter = {
    every?: sptWhereInput
    some?: sptWhereInput
    none?: sptWhereInput
  }

  export type OpdRelationFilter = {
    is?: opdWhereInput
    isNot?: opdWhereInput
  }

  export type JabatanRelationFilter = {
    is?: jabatanWhereInput
    isNot?: jabatanWhereInput
  }

  export type SumberdanaListRelationFilter = {
    every?: sumberdanaWhereInput
    some?: sumberdanaWhereInput
    none?: sumberdanaWhereInput
  }

  export type BankListRelationFilter = {
    every?: bankWhereInput
    some?: bankWhereInput
    none?: bankWhereInput
  }

  export type GajianListRelationFilter = {
    every?: gajianWhereInput
    some?: gajianWhereInput
    none?: gajianWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type spt_pegawaiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sptOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sumberdanaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type bankOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type gajianOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    user_id?: SortOrder
    user_opd?: SortOrder
    user_nama?: SortOrder
    user_nip?: SortOrder
    user_nik?: SortOrder
    user_name?: SortOrder
    user_pass?: SortOrder
    user_image?: SortOrder
    user_tmp_lahir?: SortOrder
    user_tgl_lahir?: SortOrder
    user_pendidikan_akhir?: SortOrder
    user_level?: SortOrder
    user_email?: SortOrder
    user_nohp?: SortOrder
    user_alamat?: SortOrder
    user_jk?: SortOrder
    user_ttd?: SortOrder
    user_jabatan?: SortOrder
    user_pangkat?: SortOrder
    user_jumlah_anak?: SortOrder
    user_active?: SortOrder
    user_external?: SortOrder
    user_lastip?: SortOrder
    user_lastlogin?: SortOrder
    user_created?: SortOrder
    user_updated?: SortOrder
    user_deleted?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    user_id?: SortOrder
    user_opd?: SortOrder
    user_pendidikan_akhir?: SortOrder
    user_level?: SortOrder
    user_jabatan?: SortOrder
    user_jumlah_anak?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    user_id?: SortOrder
    user_opd?: SortOrder
    user_nama?: SortOrder
    user_nip?: SortOrder
    user_nik?: SortOrder
    user_name?: SortOrder
    user_pass?: SortOrder
    user_image?: SortOrder
    user_tmp_lahir?: SortOrder
    user_tgl_lahir?: SortOrder
    user_pendidikan_akhir?: SortOrder
    user_level?: SortOrder
    user_email?: SortOrder
    user_nohp?: SortOrder
    user_alamat?: SortOrder
    user_jk?: SortOrder
    user_ttd?: SortOrder
    user_jabatan?: SortOrder
    user_pangkat?: SortOrder
    user_jumlah_anak?: SortOrder
    user_active?: SortOrder
    user_external?: SortOrder
    user_lastip?: SortOrder
    user_lastlogin?: SortOrder
    user_created?: SortOrder
    user_updated?: SortOrder
    user_deleted?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    user_id?: SortOrder
    user_opd?: SortOrder
    user_nama?: SortOrder
    user_nip?: SortOrder
    user_nik?: SortOrder
    user_name?: SortOrder
    user_pass?: SortOrder
    user_image?: SortOrder
    user_tmp_lahir?: SortOrder
    user_tgl_lahir?: SortOrder
    user_pendidikan_akhir?: SortOrder
    user_level?: SortOrder
    user_email?: SortOrder
    user_nohp?: SortOrder
    user_alamat?: SortOrder
    user_jk?: SortOrder
    user_ttd?: SortOrder
    user_jabatan?: SortOrder
    user_pangkat?: SortOrder
    user_jumlah_anak?: SortOrder
    user_active?: SortOrder
    user_external?: SortOrder
    user_lastip?: SortOrder
    user_lastlogin?: SortOrder
    user_created?: SortOrder
    user_updated?: SortOrder
    user_deleted?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    user_id?: SortOrder
    user_opd?: SortOrder
    user_pendidikan_akhir?: SortOrder
    user_level?: SortOrder
    user_jabatan?: SortOrder
    user_jumlah_anak?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumJKWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JK | EnumJKFieldRefInput<$PrismaModel>
    in?: $Enums.JK[]
    notIn?: $Enums.JK[]
    not?: NestedEnumJKWithAggregatesFilter<$PrismaModel> | $Enums.JK
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJKFilter<$PrismaModel>
    _max?: NestedEnumJKFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type dasarCountOrderByAggregateInput = {
    dasar_id?: SortOrder
    dasar_isi?: SortOrder
    dasar_opd?: SortOrder
    dasar_active?: SortOrder
    dasar_created?: SortOrder
    dasar_updated?: SortOrder
    dasar_deleted?: SortOrder
  }

  export type dasarAvgOrderByAggregateInput = {
    dasar_id?: SortOrder
    dasar_opd?: SortOrder
  }

  export type dasarMaxOrderByAggregateInput = {
    dasar_id?: SortOrder
    dasar_isi?: SortOrder
    dasar_opd?: SortOrder
    dasar_active?: SortOrder
    dasar_created?: SortOrder
    dasar_updated?: SortOrder
    dasar_deleted?: SortOrder
  }

  export type dasarMinOrderByAggregateInput = {
    dasar_id?: SortOrder
    dasar_isi?: SortOrder
    dasar_opd?: SortOrder
    dasar_active?: SortOrder
    dasar_created?: SortOrder
    dasar_updated?: SortOrder
    dasar_deleted?: SortOrder
  }

  export type dasarSumOrderByAggregateInput = {
    dasar_id?: SortOrder
    dasar_opd?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UsersRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type KotaRelationFilter = {
    is?: kotaWhereInput
    isNot?: kotaWhereInput
  }

  export type KotaNullableRelationFilter = {
    is?: kotaWhereInput | null
    isNot?: kotaWhereInput | null
  }

  export type KegiatanRelationFilter = {
    is?: kegiatanWhereInput
    isNot?: kegiatanWhereInput
  }

  export type SumberdanaRelationFilter = {
    is?: sumberdanaWhereInput
    isNot?: sumberdanaWhereInput
  }

  export type KategoriRelationFilter = {
    is?: kategoriWhereInput
    isNot?: kategoriWhereInput
  }

  export type sptSpt_nomorSpt_opdCompoundUniqueInput = {
    spt_nomor: string
    spt_opd: number
  }

  export type sptSptUniqueCompoundUniqueInput = {
    spt_seq: number
    spt_kegiatan: number
    spt_tahun: number
  }

  export type sptCountOrderByAggregateInput = {
    spt_id?: SortOrder
    spt_seq?: SortOrder
    spt_tahun?: SortOrder
    spt_nomor?: SortOrder
    spt_opd?: SortOrder
    spt_kota_asal?: SortOrder
    spt_kota_tujuan?: SortOrder
    spt_kota_tujuan2?: SortOrder
    spt_tempat_tujuan?: SortOrder
    spt_via?: SortOrder
    spt_tgl_brkt?: SortOrder
    spt_tgl_kembali?: SortOrder
    spt_lama?: SortOrder
    spt_perihal?: SortOrder
    spt_kategori?: SortOrder
    spt_kegiatan?: SortOrder
    spt_sumber_dana?: SortOrder
    spt_pj?: SortOrder
    spt_pj2?: SortOrder
    spt_dasar?: SortOrder
    spt_status?: SortOrder
    spt_created?: SortOrder
    spt_updated?: SortOrder
    spt_deleted?: SortOrder
    kotaKota_id?: SortOrder
  }

  export type sptAvgOrderByAggregateInput = {
    spt_id?: SortOrder
    spt_seq?: SortOrder
    spt_tahun?: SortOrder
    spt_opd?: SortOrder
    spt_kota_asal?: SortOrder
    spt_kota_tujuan?: SortOrder
    spt_kota_tujuan2?: SortOrder
    spt_via?: SortOrder
    spt_lama?: SortOrder
    spt_kategori?: SortOrder
    spt_kegiatan?: SortOrder
    spt_sumber_dana?: SortOrder
    spt_pj?: SortOrder
    spt_pj2?: SortOrder
    spt_status?: SortOrder
    kotaKota_id?: SortOrder
  }

  export type sptMaxOrderByAggregateInput = {
    spt_id?: SortOrder
    spt_seq?: SortOrder
    spt_tahun?: SortOrder
    spt_nomor?: SortOrder
    spt_opd?: SortOrder
    spt_kota_asal?: SortOrder
    spt_kota_tujuan?: SortOrder
    spt_kota_tujuan2?: SortOrder
    spt_tempat_tujuan?: SortOrder
    spt_via?: SortOrder
    spt_tgl_brkt?: SortOrder
    spt_tgl_kembali?: SortOrder
    spt_lama?: SortOrder
    spt_perihal?: SortOrder
    spt_kategori?: SortOrder
    spt_kegiatan?: SortOrder
    spt_sumber_dana?: SortOrder
    spt_pj?: SortOrder
    spt_pj2?: SortOrder
    spt_dasar?: SortOrder
    spt_status?: SortOrder
    spt_created?: SortOrder
    spt_updated?: SortOrder
    spt_deleted?: SortOrder
    kotaKota_id?: SortOrder
  }

  export type sptMinOrderByAggregateInput = {
    spt_id?: SortOrder
    spt_seq?: SortOrder
    spt_tahun?: SortOrder
    spt_nomor?: SortOrder
    spt_opd?: SortOrder
    spt_kota_asal?: SortOrder
    spt_kota_tujuan?: SortOrder
    spt_kota_tujuan2?: SortOrder
    spt_tempat_tujuan?: SortOrder
    spt_via?: SortOrder
    spt_tgl_brkt?: SortOrder
    spt_tgl_kembali?: SortOrder
    spt_lama?: SortOrder
    spt_perihal?: SortOrder
    spt_kategori?: SortOrder
    spt_kegiatan?: SortOrder
    spt_sumber_dana?: SortOrder
    spt_pj?: SortOrder
    spt_pj2?: SortOrder
    spt_dasar?: SortOrder
    spt_status?: SortOrder
    spt_created?: SortOrder
    spt_updated?: SortOrder
    spt_deleted?: SortOrder
    kotaKota_id?: SortOrder
  }

  export type sptSumOrderByAggregateInput = {
    spt_id?: SortOrder
    spt_seq?: SortOrder
    spt_tahun?: SortOrder
    spt_opd?: SortOrder
    spt_kota_asal?: SortOrder
    spt_kota_tujuan?: SortOrder
    spt_kota_tujuan2?: SortOrder
    spt_via?: SortOrder
    spt_lama?: SortOrder
    spt_kategori?: SortOrder
    spt_kegiatan?: SortOrder
    spt_sumber_dana?: SortOrder
    spt_pj?: SortOrder
    spt_pj2?: SortOrder
    spt_status?: SortOrder
    kotaKota_id?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type SptRelationFilter = {
    is?: sptWhereInput
    isNot?: sptWhereInput
  }

  export type BiayaListRelationFilter = {
    every?: biayaWhereInput
    some?: biayaWhereInput
    none?: biayaWhereInput
  }

  export type NpdListRelationFilter = {
    every?: npdWhereInput
    some?: npdWhereInput
    none?: npdWhereInput
  }

  export type LaporanNullableRelationFilter = {
    is?: laporanWhereInput | null
    isNot?: laporanWhereInput | null
  }

  export type KwitansiNullableRelationFilter = {
    is?: kwitansiWhereInput | null
    isNot?: kwitansiWhereInput | null
  }

  export type biayaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type npdOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type spt_pegawaiSp_sptSp_userCompoundUniqueInput = {
    sp_spt: number
    sp_user: number
  }

  export type spt_pegawaiCountOrderByAggregateInput = {
    sp_id?: SortOrder
    sp_spt?: SortOrder
    sp_user?: SortOrder
    sp_nomor_sppd?: SortOrder
    sp_seq?: SortOrder
  }

  export type spt_pegawaiAvgOrderByAggregateInput = {
    sp_id?: SortOrder
    sp_spt?: SortOrder
    sp_user?: SortOrder
    sp_seq?: SortOrder
  }

  export type spt_pegawaiMaxOrderByAggregateInput = {
    sp_id?: SortOrder
    sp_spt?: SortOrder
    sp_user?: SortOrder
    sp_nomor_sppd?: SortOrder
    sp_seq?: SortOrder
  }

  export type spt_pegawaiMinOrderByAggregateInput = {
    sp_id?: SortOrder
    sp_spt?: SortOrder
    sp_user?: SortOrder
    sp_nomor_sppd?: SortOrder
    sp_seq?: SortOrder
  }

  export type spt_pegawaiSumOrderByAggregateInput = {
    sp_id?: SortOrder
    sp_spt?: SortOrder
    sp_user?: SortOrder
    sp_seq?: SortOrder
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type Spt_pegawaiRelationFilter = {
    is?: spt_pegawaiWhereInput
    isNot?: spt_pegawaiWhereInput
  }

  export type npdCountOrderByAggregateInput = {
    npd_spt_pegawai?: SortOrder
    npd_tgl?: SortOrder
    npd_nominal?: SortOrder
    npd_created?: SortOrder
    npd_updated?: SortOrder
  }

  export type npdAvgOrderByAggregateInput = {
    npd_spt_pegawai?: SortOrder
    npd_nominal?: SortOrder
  }

  export type npdMaxOrderByAggregateInput = {
    npd_spt_pegawai?: SortOrder
    npd_tgl?: SortOrder
    npd_nominal?: SortOrder
    npd_created?: SortOrder
    npd_updated?: SortOrder
  }

  export type npdMinOrderByAggregateInput = {
    npd_spt_pegawai?: SortOrder
    npd_tgl?: SortOrder
    npd_nominal?: SortOrder
    npd_created?: SortOrder
    npd_updated?: SortOrder
  }

  export type npdSumOrderByAggregateInput = {
    npd_spt_pegawai?: SortOrder
    npd_nominal?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type biayaBiaya_komponenBiaya_spt_pegawaiCompoundUniqueInput = {
    biaya_komponen: number
    biaya_spt_pegawai: number
  }

  export type biayaCountOrderByAggregateInput = {
    biaya_komponen?: SortOrder
    biaya_standard?: SortOrder
    biaya_nilai?: SortOrder
    biaya_keterangan1?: SortOrder
    biaya_keterangan2?: SortOrder
    biaya_keterangan3?: SortOrder
    biaya_keterangan4?: SortOrder
    biaya_bukti?: SortOrder
    biaya_created?: SortOrder
    biaya_updated?: SortOrder
    biaya_spt_pegawai?: SortOrder
  }

  export type biayaAvgOrderByAggregateInput = {
    biaya_komponen?: SortOrder
    biaya_standard?: SortOrder
    biaya_nilai?: SortOrder
    biaya_spt_pegawai?: SortOrder
  }

  export type biayaMaxOrderByAggregateInput = {
    biaya_komponen?: SortOrder
    biaya_standard?: SortOrder
    biaya_nilai?: SortOrder
    biaya_keterangan1?: SortOrder
    biaya_keterangan2?: SortOrder
    biaya_keterangan3?: SortOrder
    biaya_keterangan4?: SortOrder
    biaya_bukti?: SortOrder
    biaya_created?: SortOrder
    biaya_updated?: SortOrder
    biaya_spt_pegawai?: SortOrder
  }

  export type biayaMinOrderByAggregateInput = {
    biaya_komponen?: SortOrder
    biaya_standard?: SortOrder
    biaya_nilai?: SortOrder
    biaya_keterangan1?: SortOrder
    biaya_keterangan2?: SortOrder
    biaya_keterangan3?: SortOrder
    biaya_keterangan4?: SortOrder
    biaya_bukti?: SortOrder
    biaya_created?: SortOrder
    biaya_updated?: SortOrder
    biaya_spt_pegawai?: SortOrder
  }

  export type biayaSumOrderByAggregateInput = {
    biaya_komponen?: SortOrder
    biaya_standard?: SortOrder
    biaya_nilai?: SortOrder
    biaya_spt_pegawai?: SortOrder
  }

  export type KotaListRelationFilter = {
    every?: kotaWhereInput
    some?: kotaWhereInput
    none?: kotaWhereInput
  }

  export type kotaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type provinsiCountOrderByAggregateInput = {
    provinsi_id?: SortOrder
    provinsi_nama?: SortOrder
  }

  export type provinsiAvgOrderByAggregateInput = {
    provinsi_id?: SortOrder
  }

  export type provinsiMaxOrderByAggregateInput = {
    provinsi_id?: SortOrder
    provinsi_nama?: SortOrder
  }

  export type provinsiMinOrderByAggregateInput = {
    provinsi_id?: SortOrder
    provinsi_nama?: SortOrder
  }

  export type provinsiSumOrderByAggregateInput = {
    provinsi_id?: SortOrder
  }

  export type ProvinsiNullableRelationFilter = {
    is?: provinsiWhereInput | null
    isNot?: provinsiWhereInput | null
  }

  export type StandardListRelationFilter = {
    every?: standardWhereInput
    some?: standardWhereInput
    none?: standardWhereInput
  }

  export type standardOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type kotaCountOrderByAggregateInput = {
    kota_id?: SortOrder
    kota_provinsi?: SortOrder
    kota_nama?: SortOrder
    kota_dalam_daerah?: SortOrder
    kota_created?: SortOrder
    kota_updated?: SortOrder
    kota_deleted?: SortOrder
  }

  export type kotaAvgOrderByAggregateInput = {
    kota_id?: SortOrder
    kota_provinsi?: SortOrder
  }

  export type kotaMaxOrderByAggregateInput = {
    kota_id?: SortOrder
    kota_provinsi?: SortOrder
    kota_nama?: SortOrder
    kota_dalam_daerah?: SortOrder
    kota_created?: SortOrder
    kota_updated?: SortOrder
    kota_deleted?: SortOrder
  }

  export type kotaMinOrderByAggregateInput = {
    kota_id?: SortOrder
    kota_provinsi?: SortOrder
    kota_nama?: SortOrder
    kota_dalam_daerah?: SortOrder
    kota_created?: SortOrder
    kota_updated?: SortOrder
    kota_deleted?: SortOrder
  }

  export type kotaSumOrderByAggregateInput = {
    kota_id?: SortOrder
    kota_provinsi?: SortOrder
  }

  export type laporanCountOrderByAggregateInput = {
    laporan_id?: SortOrder
    laporan_spt_pegawai?: SortOrder
    laporan_isi?: SortOrder
    laporan_created?: SortOrder
    laporan_updated?: SortOrder
  }

  export type laporanAvgOrderByAggregateInput = {
    laporan_id?: SortOrder
    laporan_spt_pegawai?: SortOrder
  }

  export type laporanMaxOrderByAggregateInput = {
    laporan_id?: SortOrder
    laporan_spt_pegawai?: SortOrder
    laporan_isi?: SortOrder
    laporan_created?: SortOrder
    laporan_updated?: SortOrder
  }

  export type laporanMinOrderByAggregateInput = {
    laporan_id?: SortOrder
    laporan_spt_pegawai?: SortOrder
    laporan_isi?: SortOrder
    laporan_created?: SortOrder
    laporan_updated?: SortOrder
  }

  export type laporanSumOrderByAggregateInput = {
    laporan_id?: SortOrder
    laporan_spt_pegawai?: SortOrder
  }

  export type settingSetting_idSetting_opdCompoundUniqueInput = {
    setting_id: string
    setting_opd: number
  }

  export type settingCountOrderByAggregateInput = {
    setting_id?: SortOrder
    setting_opd?: SortOrder
    setting_value?: SortOrder
    setting_lastupdate?: SortOrder
  }

  export type settingAvgOrderByAggregateInput = {
    setting_opd?: SortOrder
  }

  export type settingMaxOrderByAggregateInput = {
    setting_id?: SortOrder
    setting_opd?: SortOrder
    setting_value?: SortOrder
    setting_lastupdate?: SortOrder
  }

  export type settingMinOrderByAggregateInput = {
    setting_id?: SortOrder
    setting_opd?: SortOrder
    setting_value?: SortOrder
    setting_lastupdate?: SortOrder
  }

  export type settingSumOrderByAggregateInput = {
    setting_opd?: SortOrder
  }

  export type kegiatanCountOrderByAggregateInput = {
    kegiatan_id?: SortOrder
    kegiatan_opd?: SortOrder
    kegiatan_kode?: SortOrder
    kegiatan_program?: SortOrder
    kegiatan_nama?: SortOrder
    kegiatan_subkegiatan?: SortOrder
    kegiatan_created?: SortOrder
    kegiatan_updated?: SortOrder
    kegiatan_deleted?: SortOrder
  }

  export type kegiatanAvgOrderByAggregateInput = {
    kegiatan_id?: SortOrder
    kegiatan_opd?: SortOrder
  }

  export type kegiatanMaxOrderByAggregateInput = {
    kegiatan_id?: SortOrder
    kegiatan_opd?: SortOrder
    kegiatan_kode?: SortOrder
    kegiatan_program?: SortOrder
    kegiatan_nama?: SortOrder
    kegiatan_subkegiatan?: SortOrder
    kegiatan_created?: SortOrder
    kegiatan_updated?: SortOrder
    kegiatan_deleted?: SortOrder
  }

  export type kegiatanMinOrderByAggregateInput = {
    kegiatan_id?: SortOrder
    kegiatan_opd?: SortOrder
    kegiatan_kode?: SortOrder
    kegiatan_program?: SortOrder
    kegiatan_nama?: SortOrder
    kegiatan_subkegiatan?: SortOrder
    kegiatan_created?: SortOrder
    kegiatan_updated?: SortOrder
    kegiatan_deleted?: SortOrder
  }

  export type kegiatanSumOrderByAggregateInput = {
    kegiatan_id?: SortOrder
    kegiatan_opd?: SortOrder
  }

  export type Ttd_gajianListRelationFilter = {
    every?: ttd_gajianWhereInput
    some?: ttd_gajianWhereInput
    none?: ttd_gajianWhereInput
  }

  export type ttd_gajianOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sumberdanaCountOrderByAggregateInput = {
    sd_id?: SortOrder
    sd_tahun?: SortOrder
    sd_opd?: SortOrder
    sd_kode_rekening?: SortOrder
    sd_nama?: SortOrder
    sd_kegiatan?: SortOrder
    sd_jumlah?: SortOrder
    sd_pptk?: SortOrder
    sd_pa?: SortOrder
    sd_bendahara?: SortOrder
    sd_active?: SortOrder
    sd_app?: SortOrder
    sd_created?: SortOrder
    sd_updated?: SortOrder
    sd_deleted?: SortOrder
  }

  export type sumberdanaAvgOrderByAggregateInput = {
    sd_id?: SortOrder
    sd_opd?: SortOrder
    sd_kegiatan?: SortOrder
    sd_jumlah?: SortOrder
    sd_pptk?: SortOrder
    sd_pa?: SortOrder
    sd_bendahara?: SortOrder
  }

  export type sumberdanaMaxOrderByAggregateInput = {
    sd_id?: SortOrder
    sd_tahun?: SortOrder
    sd_opd?: SortOrder
    sd_kode_rekening?: SortOrder
    sd_nama?: SortOrder
    sd_kegiatan?: SortOrder
    sd_jumlah?: SortOrder
    sd_pptk?: SortOrder
    sd_pa?: SortOrder
    sd_bendahara?: SortOrder
    sd_active?: SortOrder
    sd_app?: SortOrder
    sd_created?: SortOrder
    sd_updated?: SortOrder
    sd_deleted?: SortOrder
  }

  export type sumberdanaMinOrderByAggregateInput = {
    sd_id?: SortOrder
    sd_tahun?: SortOrder
    sd_opd?: SortOrder
    sd_kode_rekening?: SortOrder
    sd_nama?: SortOrder
    sd_kegiatan?: SortOrder
    sd_jumlah?: SortOrder
    sd_pptk?: SortOrder
    sd_pa?: SortOrder
    sd_bendahara?: SortOrder
    sd_active?: SortOrder
    sd_app?: SortOrder
    sd_created?: SortOrder
    sd_updated?: SortOrder
    sd_deleted?: SortOrder
  }

  export type sumberdanaSumOrderByAggregateInput = {
    sd_id?: SortOrder
    sd_opd?: SortOrder
    sd_kegiatan?: SortOrder
    sd_jumlah?: SortOrder
    sd_pptk?: SortOrder
    sd_pa?: SortOrder
    sd_bendahara?: SortOrder
  }

  export type UsersListRelationFilter = {
    every?: usersWhereInput
    some?: usersWhereInput
    none?: usersWhereInput
  }

  export type SettingListRelationFilter = {
    every?: settingWhereInput
    some?: settingWhereInput
    none?: settingWhereInput
  }

  export type KegiatanListRelationFilter = {
    every?: kegiatanWhereInput
    some?: kegiatanWhereInput
    none?: kegiatanWhereInput
  }

  export type usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type settingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type kegiatanOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type opdCountOrderByAggregateInput = {
    opd_id?: SortOrder
    opd_nama?: SortOrder
    opd_alamat?: SortOrder
    opd_email?: SortOrder
    opd_telp?: SortOrder
    opd_kota?: SortOrder
    opd_created?: SortOrder
    opd_updated?: SortOrder
    opd_deleted?: SortOrder
  }

  export type opdAvgOrderByAggregateInput = {
    opd_id?: SortOrder
  }

  export type opdMaxOrderByAggregateInput = {
    opd_id?: SortOrder
    opd_nama?: SortOrder
    opd_alamat?: SortOrder
    opd_email?: SortOrder
    opd_telp?: SortOrder
    opd_kota?: SortOrder
    opd_created?: SortOrder
    opd_updated?: SortOrder
    opd_deleted?: SortOrder
  }

  export type opdMinOrderByAggregateInput = {
    opd_id?: SortOrder
    opd_nama?: SortOrder
    opd_alamat?: SortOrder
    opd_email?: SortOrder
    opd_telp?: SortOrder
    opd_kota?: SortOrder
    opd_created?: SortOrder
    opd_updated?: SortOrder
    opd_deleted?: SortOrder
  }

  export type opdSumOrderByAggregateInput = {
    opd_id?: SortOrder
  }

  export type jabatanCountOrderByAggregateInput = {
    jabatan_id?: SortOrder
    jabatan_opd?: SortOrder
    jabatan_nama?: SortOrder
    jabatan_kop_surat?: SortOrder
    jabatan_kelas_biaya?: SortOrder
    jabatan_kwitansi?: SortOrder
    jabatan_kelompok?: SortOrder
    jabatan_created?: SortOrder
    jabatan_updated?: SortOrder
    jabatan_deleted?: SortOrder
  }

  export type jabatanAvgOrderByAggregateInput = {
    jabatan_id?: SortOrder
    jabatan_opd?: SortOrder
    jabatan_kop_surat?: SortOrder
    jabatan_kelas_biaya?: SortOrder
    jabatan_kwitansi?: SortOrder
    jabatan_kelompok?: SortOrder
  }

  export type jabatanMaxOrderByAggregateInput = {
    jabatan_id?: SortOrder
    jabatan_opd?: SortOrder
    jabatan_nama?: SortOrder
    jabatan_kop_surat?: SortOrder
    jabatan_kelas_biaya?: SortOrder
    jabatan_kwitansi?: SortOrder
    jabatan_kelompok?: SortOrder
    jabatan_created?: SortOrder
    jabatan_updated?: SortOrder
    jabatan_deleted?: SortOrder
  }

  export type jabatanMinOrderByAggregateInput = {
    jabatan_id?: SortOrder
    jabatan_opd?: SortOrder
    jabatan_nama?: SortOrder
    jabatan_kop_surat?: SortOrder
    jabatan_kelas_biaya?: SortOrder
    jabatan_kwitansi?: SortOrder
    jabatan_kelompok?: SortOrder
    jabatan_created?: SortOrder
    jabatan_updated?: SortOrder
    jabatan_deleted?: SortOrder
  }

  export type jabatanSumOrderByAggregateInput = {
    jabatan_id?: SortOrder
    jabatan_opd?: SortOrder
    jabatan_kop_surat?: SortOrder
    jabatan_kelas_biaya?: SortOrder
    jabatan_kwitansi?: SortOrder
    jabatan_kelompok?: SortOrder
  }

  export type kwitansiKwitansi_nomorKwitansi_opdCompoundUniqueInput = {
    kwitansi_nomor: string
    kwitansi_opd: number
  }

  export type kwitansiCountOrderByAggregateInput = {
    kwitansi_spt_pegawai?: SortOrder
    kwitansi_nomor?: SortOrder
    kwitansi_opd?: SortOrder
    kwitansi_created?: SortOrder
    kwitansi_updated?: SortOrder
  }

  export type kwitansiAvgOrderByAggregateInput = {
    kwitansi_spt_pegawai?: SortOrder
    kwitansi_opd?: SortOrder
  }

  export type kwitansiMaxOrderByAggregateInput = {
    kwitansi_spt_pegawai?: SortOrder
    kwitansi_nomor?: SortOrder
    kwitansi_opd?: SortOrder
    kwitansi_created?: SortOrder
    kwitansi_updated?: SortOrder
  }

  export type kwitansiMinOrderByAggregateInput = {
    kwitansi_spt_pegawai?: SortOrder
    kwitansi_nomor?: SortOrder
    kwitansi_opd?: SortOrder
    kwitansi_created?: SortOrder
    kwitansi_updated?: SortOrder
  }

  export type kwitansiSumOrderByAggregateInput = {
    kwitansi_spt_pegawai?: SortOrder
    kwitansi_opd?: SortOrder
  }

  export type kategoriCountOrderByAggregateInput = {
    kategori_id?: SortOrder
    kategori_nama?: SortOrder
    kategori_opd?: SortOrder
    kategori_created?: SortOrder
    kategori_updated?: SortOrder
    kategori_deleted?: SortOrder
  }

  export type kategoriAvgOrderByAggregateInput = {
    kategori_id?: SortOrder
    kategori_opd?: SortOrder
  }

  export type kategoriMaxOrderByAggregateInput = {
    kategori_id?: SortOrder
    kategori_nama?: SortOrder
    kategori_opd?: SortOrder
    kategori_created?: SortOrder
    kategori_updated?: SortOrder
    kategori_deleted?: SortOrder
  }

  export type kategoriMinOrderByAggregateInput = {
    kategori_id?: SortOrder
    kategori_nama?: SortOrder
    kategori_opd?: SortOrder
    kategori_created?: SortOrder
    kategori_updated?: SortOrder
    kategori_deleted?: SortOrder
  }

  export type kategoriSumOrderByAggregateInput = {
    kategori_id?: SortOrder
    kategori_opd?: SortOrder
  }

  export type standardStandardUniqueCompoundUniqueInput = {
    standard_kode: number
    standard_opd: number
    standard_kota_asal: number
    standard_kota_tujuan: number
    standard_via: number
    standard_kelas: number
  }

  export type standardCountOrderByAggregateInput = {
    standard_id?: SortOrder
    standard_kode?: SortOrder
    standard_opd?: SortOrder
    standard_kota_asal?: SortOrder
    standard_kota_tujuan?: SortOrder
    standard_via?: SortOrder
    standard_kelas?: SortOrder
    standard_nominal?: SortOrder
    standard_created?: SortOrder
    standard_updated?: SortOrder
    standard_deleted?: SortOrder
  }

  export type standardAvgOrderByAggregateInput = {
    standard_id?: SortOrder
    standard_kode?: SortOrder
    standard_opd?: SortOrder
    standard_kota_asal?: SortOrder
    standard_kota_tujuan?: SortOrder
    standard_via?: SortOrder
    standard_kelas?: SortOrder
    standard_nominal?: SortOrder
  }

  export type standardMaxOrderByAggregateInput = {
    standard_id?: SortOrder
    standard_kode?: SortOrder
    standard_opd?: SortOrder
    standard_kota_asal?: SortOrder
    standard_kota_tujuan?: SortOrder
    standard_via?: SortOrder
    standard_kelas?: SortOrder
    standard_nominal?: SortOrder
    standard_created?: SortOrder
    standard_updated?: SortOrder
    standard_deleted?: SortOrder
  }

  export type standardMinOrderByAggregateInput = {
    standard_id?: SortOrder
    standard_kode?: SortOrder
    standard_opd?: SortOrder
    standard_kota_asal?: SortOrder
    standard_kota_tujuan?: SortOrder
    standard_via?: SortOrder
    standard_kelas?: SortOrder
    standard_nominal?: SortOrder
    standard_created?: SortOrder
    standard_updated?: SortOrder
    standard_deleted?: SortOrder
  }

  export type standardSumOrderByAggregateInput = {
    standard_id?: SortOrder
    standard_kode?: SortOrder
    standard_opd?: SortOrder
    standard_kota_asal?: SortOrder
    standard_kota_tujuan?: SortOrder
    standard_via?: SortOrder
    standard_kelas?: SortOrder
    standard_nominal?: SortOrder
  }

  export type bankCountOrderByAggregateInput = {
    bank_user?: SortOrder
    bank_name?: SortOrder
    bank_account?: SortOrder
    bank_number?: SortOrder
  }

  export type bankAvgOrderByAggregateInput = {
    bank_user?: SortOrder
    bank_name?: SortOrder
  }

  export type bankMaxOrderByAggregateInput = {
    bank_user?: SortOrder
    bank_name?: SortOrder
    bank_account?: SortOrder
    bank_number?: SortOrder
  }

  export type bankMinOrderByAggregateInput = {
    bank_user?: SortOrder
    bank_name?: SortOrder
    bank_account?: SortOrder
    bank_number?: SortOrder
  }

  export type bankSumOrderByAggregateInput = {
    bank_user?: SortOrder
    bank_name?: SortOrder
  }

  export type tunjangan_potonganCountOrderByAggregateInput = {
    tp_id?: SortOrder
    tp_jenis?: SortOrder
    tp_nama?: SortOrder
    tp_urutan?: SortOrder
    tp_kelompok?: SortOrder
    tp_created?: SortOrder
    tp_update?: SortOrder
    tp_deleted?: SortOrder
  }

  export type tunjangan_potonganAvgOrderByAggregateInput = {
    tp_id?: SortOrder
    tp_jenis?: SortOrder
    tp_urutan?: SortOrder
    tp_kelompok?: SortOrder
  }

  export type tunjangan_potonganMaxOrderByAggregateInput = {
    tp_id?: SortOrder
    tp_jenis?: SortOrder
    tp_nama?: SortOrder
    tp_urutan?: SortOrder
    tp_kelompok?: SortOrder
    tp_created?: SortOrder
    tp_update?: SortOrder
    tp_deleted?: SortOrder
  }

  export type tunjangan_potonganMinOrderByAggregateInput = {
    tp_id?: SortOrder
    tp_jenis?: SortOrder
    tp_nama?: SortOrder
    tp_urutan?: SortOrder
    tp_kelompok?: SortOrder
    tp_created?: SortOrder
    tp_update?: SortOrder
    tp_deleted?: SortOrder
  }

  export type tunjangan_potonganSumOrderByAggregateInput = {
    tp_id?: SortOrder
    tp_jenis?: SortOrder
    tp_urutan?: SortOrder
    tp_kelompok?: SortOrder
  }

  export type Tunjangan_potonganRelationFilter = {
    is?: tunjangan_potonganWhereInput
    isNot?: tunjangan_potonganWhereInput
  }

  export type gajianGajianUniqueCompoundUniqueInput = {
    gajian_pegawai: number
    gajian_bulan: number
    gajian_tahun: number
    gajian_tunjangan_potongan: number
  }

  export type gajianCountOrderByAggregateInput = {
    gajian_id?: SortOrder
    gajian_pegawai?: SortOrder
    gajian_bulan?: SortOrder
    gajian_tahun?: SortOrder
    gajian_tunjangan_potongan?: SortOrder
    gajian_nominal?: SortOrder
    gajian_created?: SortOrder
    gajian_updated?: SortOrder
    gajian_deleted?: SortOrder
  }

  export type gajianAvgOrderByAggregateInput = {
    gajian_id?: SortOrder
    gajian_pegawai?: SortOrder
    gajian_bulan?: SortOrder
    gajian_tahun?: SortOrder
    gajian_tunjangan_potongan?: SortOrder
    gajian_nominal?: SortOrder
  }

  export type gajianMaxOrderByAggregateInput = {
    gajian_id?: SortOrder
    gajian_pegawai?: SortOrder
    gajian_bulan?: SortOrder
    gajian_tahun?: SortOrder
    gajian_tunjangan_potongan?: SortOrder
    gajian_nominal?: SortOrder
    gajian_created?: SortOrder
    gajian_updated?: SortOrder
    gajian_deleted?: SortOrder
  }

  export type gajianMinOrderByAggregateInput = {
    gajian_id?: SortOrder
    gajian_pegawai?: SortOrder
    gajian_bulan?: SortOrder
    gajian_tahun?: SortOrder
    gajian_tunjangan_potongan?: SortOrder
    gajian_nominal?: SortOrder
    gajian_created?: SortOrder
    gajian_updated?: SortOrder
    gajian_deleted?: SortOrder
  }

  export type gajianSumOrderByAggregateInput = {
    gajian_id?: SortOrder
    gajian_pegawai?: SortOrder
    gajian_bulan?: SortOrder
    gajian_tahun?: SortOrder
    gajian_tunjangan_potongan?: SortOrder
    gajian_nominal?: SortOrder
  }

  export type ttd_gajianTtdUniqueCompoundUniqueInput = {
    ttd_bulan: number
    ttd_tahun: number
  }

  export type ttd_gajianCountOrderByAggregateInput = {
    ttd_id?: SortOrder
    ttd_bulan?: SortOrder
    ttd_tahun?: SortOrder
    ttd_sumberdana?: SortOrder
    ttd_created?: SortOrder
    ttd_updated?: SortOrder
    ttd_deleted?: SortOrder
  }

  export type ttd_gajianAvgOrderByAggregateInput = {
    ttd_id?: SortOrder
    ttd_bulan?: SortOrder
    ttd_tahun?: SortOrder
    ttd_sumberdana?: SortOrder
  }

  export type ttd_gajianMaxOrderByAggregateInput = {
    ttd_id?: SortOrder
    ttd_bulan?: SortOrder
    ttd_tahun?: SortOrder
    ttd_sumberdana?: SortOrder
    ttd_created?: SortOrder
    ttd_updated?: SortOrder
    ttd_deleted?: SortOrder
  }

  export type ttd_gajianMinOrderByAggregateInput = {
    ttd_id?: SortOrder
    ttd_bulan?: SortOrder
    ttd_tahun?: SortOrder
    ttd_sumberdana?: SortOrder
    ttd_created?: SortOrder
    ttd_updated?: SortOrder
    ttd_deleted?: SortOrder
  }

  export type ttd_gajianSumOrderByAggregateInput = {
    ttd_id?: SortOrder
    ttd_bulan?: SortOrder
    ttd_tahun?: SortOrder
    ttd_sumberdana?: SortOrder
  }

  export type spt_pegawaiCreateNestedManyWithoutUsersInput = {
    create?: XOR<spt_pegawaiCreateWithoutUsersInput, spt_pegawaiUncheckedCreateWithoutUsersInput> | spt_pegawaiCreateWithoutUsersInput[] | spt_pegawaiUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutUsersInput | spt_pegawaiCreateOrConnectWithoutUsersInput[]
    createMany?: spt_pegawaiCreateManyUsersInputEnvelope
    connect?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
  }

  export type sptCreateNestedManyWithoutUsers_pjInput = {
    create?: XOR<sptCreateWithoutUsers_pjInput, sptUncheckedCreateWithoutUsers_pjInput> | sptCreateWithoutUsers_pjInput[] | sptUncheckedCreateWithoutUsers_pjInput[]
    connectOrCreate?: sptCreateOrConnectWithoutUsers_pjInput | sptCreateOrConnectWithoutUsers_pjInput[]
    createMany?: sptCreateManyUsers_pjInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type sptCreateNestedManyWithoutUsers_pj2Input = {
    create?: XOR<sptCreateWithoutUsers_pj2Input, sptUncheckedCreateWithoutUsers_pj2Input> | sptCreateWithoutUsers_pj2Input[] | sptUncheckedCreateWithoutUsers_pj2Input[]
    connectOrCreate?: sptCreateOrConnectWithoutUsers_pj2Input | sptCreateOrConnectWithoutUsers_pj2Input[]
    createMany?: sptCreateManyUsers_pj2InputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type opdCreateNestedOneWithoutUsersInput = {
    create?: XOR<opdCreateWithoutUsersInput, opdUncheckedCreateWithoutUsersInput>
    connectOrCreate?: opdCreateOrConnectWithoutUsersInput
    connect?: opdWhereUniqueInput
  }

  export type jabatanCreateNestedOneWithoutUsersInput = {
    create?: XOR<jabatanCreateWithoutUsersInput, jabatanUncheckedCreateWithoutUsersInput>
    connectOrCreate?: jabatanCreateOrConnectWithoutUsersInput
    connect?: jabatanWhereUniqueInput
  }

  export type sumberdanaCreateNestedManyWithoutUsersInput = {
    create?: XOR<sumberdanaCreateWithoutUsersInput, sumberdanaUncheckedCreateWithoutUsersInput> | sumberdanaCreateWithoutUsersInput[] | sumberdanaUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutUsersInput | sumberdanaCreateOrConnectWithoutUsersInput[]
    createMany?: sumberdanaCreateManyUsersInputEnvelope
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
  }

  export type sumberdanaCreateNestedManyWithoutBendaharaInput = {
    create?: XOR<sumberdanaCreateWithoutBendaharaInput, sumberdanaUncheckedCreateWithoutBendaharaInput> | sumberdanaCreateWithoutBendaharaInput[] | sumberdanaUncheckedCreateWithoutBendaharaInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutBendaharaInput | sumberdanaCreateOrConnectWithoutBendaharaInput[]
    createMany?: sumberdanaCreateManyBendaharaInputEnvelope
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
  }

  export type sumberdanaCreateNestedManyWithoutPengguna_anggaranInput = {
    create?: XOR<sumberdanaCreateWithoutPengguna_anggaranInput, sumberdanaUncheckedCreateWithoutPengguna_anggaranInput> | sumberdanaCreateWithoutPengguna_anggaranInput[] | sumberdanaUncheckedCreateWithoutPengguna_anggaranInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutPengguna_anggaranInput | sumberdanaCreateOrConnectWithoutPengguna_anggaranInput[]
    createMany?: sumberdanaCreateManyPengguna_anggaranInputEnvelope
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
  }

  export type bankCreateNestedManyWithoutUserInput = {
    create?: XOR<bankCreateWithoutUserInput, bankUncheckedCreateWithoutUserInput> | bankCreateWithoutUserInput[] | bankUncheckedCreateWithoutUserInput[]
    connectOrCreate?: bankCreateOrConnectWithoutUserInput | bankCreateOrConnectWithoutUserInput[]
    createMany?: bankCreateManyUserInputEnvelope
    connect?: bankWhereUniqueInput | bankWhereUniqueInput[]
  }

  export type gajianCreateNestedManyWithoutUsersInput = {
    create?: XOR<gajianCreateWithoutUsersInput, gajianUncheckedCreateWithoutUsersInput> | gajianCreateWithoutUsersInput[] | gajianUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: gajianCreateOrConnectWithoutUsersInput | gajianCreateOrConnectWithoutUsersInput[]
    createMany?: gajianCreateManyUsersInputEnvelope
    connect?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
  }

  export type spt_pegawaiUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<spt_pegawaiCreateWithoutUsersInput, spt_pegawaiUncheckedCreateWithoutUsersInput> | spt_pegawaiCreateWithoutUsersInput[] | spt_pegawaiUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutUsersInput | spt_pegawaiCreateOrConnectWithoutUsersInput[]
    createMany?: spt_pegawaiCreateManyUsersInputEnvelope
    connect?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
  }

  export type sptUncheckedCreateNestedManyWithoutUsers_pjInput = {
    create?: XOR<sptCreateWithoutUsers_pjInput, sptUncheckedCreateWithoutUsers_pjInput> | sptCreateWithoutUsers_pjInput[] | sptUncheckedCreateWithoutUsers_pjInput[]
    connectOrCreate?: sptCreateOrConnectWithoutUsers_pjInput | sptCreateOrConnectWithoutUsers_pjInput[]
    createMany?: sptCreateManyUsers_pjInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type sptUncheckedCreateNestedManyWithoutUsers_pj2Input = {
    create?: XOR<sptCreateWithoutUsers_pj2Input, sptUncheckedCreateWithoutUsers_pj2Input> | sptCreateWithoutUsers_pj2Input[] | sptUncheckedCreateWithoutUsers_pj2Input[]
    connectOrCreate?: sptCreateOrConnectWithoutUsers_pj2Input | sptCreateOrConnectWithoutUsers_pj2Input[]
    createMany?: sptCreateManyUsers_pj2InputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type sumberdanaUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<sumberdanaCreateWithoutUsersInput, sumberdanaUncheckedCreateWithoutUsersInput> | sumberdanaCreateWithoutUsersInput[] | sumberdanaUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutUsersInput | sumberdanaCreateOrConnectWithoutUsersInput[]
    createMany?: sumberdanaCreateManyUsersInputEnvelope
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
  }

  export type sumberdanaUncheckedCreateNestedManyWithoutBendaharaInput = {
    create?: XOR<sumberdanaCreateWithoutBendaharaInput, sumberdanaUncheckedCreateWithoutBendaharaInput> | sumberdanaCreateWithoutBendaharaInput[] | sumberdanaUncheckedCreateWithoutBendaharaInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutBendaharaInput | sumberdanaCreateOrConnectWithoutBendaharaInput[]
    createMany?: sumberdanaCreateManyBendaharaInputEnvelope
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
  }

  export type sumberdanaUncheckedCreateNestedManyWithoutPengguna_anggaranInput = {
    create?: XOR<sumberdanaCreateWithoutPengguna_anggaranInput, sumberdanaUncheckedCreateWithoutPengguna_anggaranInput> | sumberdanaCreateWithoutPengguna_anggaranInput[] | sumberdanaUncheckedCreateWithoutPengguna_anggaranInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutPengguna_anggaranInput | sumberdanaCreateOrConnectWithoutPengguna_anggaranInput[]
    createMany?: sumberdanaCreateManyPengguna_anggaranInputEnvelope
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
  }

  export type bankUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<bankCreateWithoutUserInput, bankUncheckedCreateWithoutUserInput> | bankCreateWithoutUserInput[] | bankUncheckedCreateWithoutUserInput[]
    connectOrCreate?: bankCreateOrConnectWithoutUserInput | bankCreateOrConnectWithoutUserInput[]
    createMany?: bankCreateManyUserInputEnvelope
    connect?: bankWhereUniqueInput | bankWhereUniqueInput[]
  }

  export type gajianUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<gajianCreateWithoutUsersInput, gajianUncheckedCreateWithoutUsersInput> | gajianCreateWithoutUsersInput[] | gajianUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: gajianCreateOrConnectWithoutUsersInput | gajianCreateOrConnectWithoutUsersInput[]
    createMany?: gajianCreateManyUsersInputEnvelope
    connect?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumJKFieldUpdateOperationsInput = {
    set?: $Enums.JK
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type spt_pegawaiUpdateManyWithoutUsersNestedInput = {
    create?: XOR<spt_pegawaiCreateWithoutUsersInput, spt_pegawaiUncheckedCreateWithoutUsersInput> | spt_pegawaiCreateWithoutUsersInput[] | spt_pegawaiUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutUsersInput | spt_pegawaiCreateOrConnectWithoutUsersInput[]
    upsert?: spt_pegawaiUpsertWithWhereUniqueWithoutUsersInput | spt_pegawaiUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: spt_pegawaiCreateManyUsersInputEnvelope
    set?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    disconnect?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    delete?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    connect?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    update?: spt_pegawaiUpdateWithWhereUniqueWithoutUsersInput | spt_pegawaiUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: spt_pegawaiUpdateManyWithWhereWithoutUsersInput | spt_pegawaiUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: spt_pegawaiScalarWhereInput | spt_pegawaiScalarWhereInput[]
  }

  export type sptUpdateManyWithoutUsers_pjNestedInput = {
    create?: XOR<sptCreateWithoutUsers_pjInput, sptUncheckedCreateWithoutUsers_pjInput> | sptCreateWithoutUsers_pjInput[] | sptUncheckedCreateWithoutUsers_pjInput[]
    connectOrCreate?: sptCreateOrConnectWithoutUsers_pjInput | sptCreateOrConnectWithoutUsers_pjInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutUsers_pjInput | sptUpsertWithWhereUniqueWithoutUsers_pjInput[]
    createMany?: sptCreateManyUsers_pjInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutUsers_pjInput | sptUpdateWithWhereUniqueWithoutUsers_pjInput[]
    updateMany?: sptUpdateManyWithWhereWithoutUsers_pjInput | sptUpdateManyWithWhereWithoutUsers_pjInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type sptUpdateManyWithoutUsers_pj2NestedInput = {
    create?: XOR<sptCreateWithoutUsers_pj2Input, sptUncheckedCreateWithoutUsers_pj2Input> | sptCreateWithoutUsers_pj2Input[] | sptUncheckedCreateWithoutUsers_pj2Input[]
    connectOrCreate?: sptCreateOrConnectWithoutUsers_pj2Input | sptCreateOrConnectWithoutUsers_pj2Input[]
    upsert?: sptUpsertWithWhereUniqueWithoutUsers_pj2Input | sptUpsertWithWhereUniqueWithoutUsers_pj2Input[]
    createMany?: sptCreateManyUsers_pj2InputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutUsers_pj2Input | sptUpdateWithWhereUniqueWithoutUsers_pj2Input[]
    updateMany?: sptUpdateManyWithWhereWithoutUsers_pj2Input | sptUpdateManyWithWhereWithoutUsers_pj2Input[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type opdUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<opdCreateWithoutUsersInput, opdUncheckedCreateWithoutUsersInput>
    connectOrCreate?: opdCreateOrConnectWithoutUsersInput
    upsert?: opdUpsertWithoutUsersInput
    connect?: opdWhereUniqueInput
    update?: XOR<XOR<opdUpdateToOneWithWhereWithoutUsersInput, opdUpdateWithoutUsersInput>, opdUncheckedUpdateWithoutUsersInput>
  }

  export type jabatanUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<jabatanCreateWithoutUsersInput, jabatanUncheckedCreateWithoutUsersInput>
    connectOrCreate?: jabatanCreateOrConnectWithoutUsersInput
    upsert?: jabatanUpsertWithoutUsersInput
    connect?: jabatanWhereUniqueInput
    update?: XOR<XOR<jabatanUpdateToOneWithWhereWithoutUsersInput, jabatanUpdateWithoutUsersInput>, jabatanUncheckedUpdateWithoutUsersInput>
  }

  export type sumberdanaUpdateManyWithoutUsersNestedInput = {
    create?: XOR<sumberdanaCreateWithoutUsersInput, sumberdanaUncheckedCreateWithoutUsersInput> | sumberdanaCreateWithoutUsersInput[] | sumberdanaUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutUsersInput | sumberdanaCreateOrConnectWithoutUsersInput[]
    upsert?: sumberdanaUpsertWithWhereUniqueWithoutUsersInput | sumberdanaUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: sumberdanaCreateManyUsersInputEnvelope
    set?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    disconnect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    delete?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    update?: sumberdanaUpdateWithWhereUniqueWithoutUsersInput | sumberdanaUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: sumberdanaUpdateManyWithWhereWithoutUsersInput | sumberdanaUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: sumberdanaScalarWhereInput | sumberdanaScalarWhereInput[]
  }

  export type sumberdanaUpdateManyWithoutBendaharaNestedInput = {
    create?: XOR<sumberdanaCreateWithoutBendaharaInput, sumberdanaUncheckedCreateWithoutBendaharaInput> | sumberdanaCreateWithoutBendaharaInput[] | sumberdanaUncheckedCreateWithoutBendaharaInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutBendaharaInput | sumberdanaCreateOrConnectWithoutBendaharaInput[]
    upsert?: sumberdanaUpsertWithWhereUniqueWithoutBendaharaInput | sumberdanaUpsertWithWhereUniqueWithoutBendaharaInput[]
    createMany?: sumberdanaCreateManyBendaharaInputEnvelope
    set?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    disconnect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    delete?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    update?: sumberdanaUpdateWithWhereUniqueWithoutBendaharaInput | sumberdanaUpdateWithWhereUniqueWithoutBendaharaInput[]
    updateMany?: sumberdanaUpdateManyWithWhereWithoutBendaharaInput | sumberdanaUpdateManyWithWhereWithoutBendaharaInput[]
    deleteMany?: sumberdanaScalarWhereInput | sumberdanaScalarWhereInput[]
  }

  export type sumberdanaUpdateManyWithoutPengguna_anggaranNestedInput = {
    create?: XOR<sumberdanaCreateWithoutPengguna_anggaranInput, sumberdanaUncheckedCreateWithoutPengguna_anggaranInput> | sumberdanaCreateWithoutPengguna_anggaranInput[] | sumberdanaUncheckedCreateWithoutPengguna_anggaranInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutPengguna_anggaranInput | sumberdanaCreateOrConnectWithoutPengguna_anggaranInput[]
    upsert?: sumberdanaUpsertWithWhereUniqueWithoutPengguna_anggaranInput | sumberdanaUpsertWithWhereUniqueWithoutPengguna_anggaranInput[]
    createMany?: sumberdanaCreateManyPengguna_anggaranInputEnvelope
    set?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    disconnect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    delete?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    update?: sumberdanaUpdateWithWhereUniqueWithoutPengguna_anggaranInput | sumberdanaUpdateWithWhereUniqueWithoutPengguna_anggaranInput[]
    updateMany?: sumberdanaUpdateManyWithWhereWithoutPengguna_anggaranInput | sumberdanaUpdateManyWithWhereWithoutPengguna_anggaranInput[]
    deleteMany?: sumberdanaScalarWhereInput | sumberdanaScalarWhereInput[]
  }

  export type bankUpdateManyWithoutUserNestedInput = {
    create?: XOR<bankCreateWithoutUserInput, bankUncheckedCreateWithoutUserInput> | bankCreateWithoutUserInput[] | bankUncheckedCreateWithoutUserInput[]
    connectOrCreate?: bankCreateOrConnectWithoutUserInput | bankCreateOrConnectWithoutUserInput[]
    upsert?: bankUpsertWithWhereUniqueWithoutUserInput | bankUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: bankCreateManyUserInputEnvelope
    set?: bankWhereUniqueInput | bankWhereUniqueInput[]
    disconnect?: bankWhereUniqueInput | bankWhereUniqueInput[]
    delete?: bankWhereUniqueInput | bankWhereUniqueInput[]
    connect?: bankWhereUniqueInput | bankWhereUniqueInput[]
    update?: bankUpdateWithWhereUniqueWithoutUserInput | bankUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: bankUpdateManyWithWhereWithoutUserInput | bankUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: bankScalarWhereInput | bankScalarWhereInput[]
  }

  export type gajianUpdateManyWithoutUsersNestedInput = {
    create?: XOR<gajianCreateWithoutUsersInput, gajianUncheckedCreateWithoutUsersInput> | gajianCreateWithoutUsersInput[] | gajianUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: gajianCreateOrConnectWithoutUsersInput | gajianCreateOrConnectWithoutUsersInput[]
    upsert?: gajianUpsertWithWhereUniqueWithoutUsersInput | gajianUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: gajianCreateManyUsersInputEnvelope
    set?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    disconnect?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    delete?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    connect?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    update?: gajianUpdateWithWhereUniqueWithoutUsersInput | gajianUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: gajianUpdateManyWithWhereWithoutUsersInput | gajianUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: gajianScalarWhereInput | gajianScalarWhereInput[]
  }

  export type spt_pegawaiUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<spt_pegawaiCreateWithoutUsersInput, spt_pegawaiUncheckedCreateWithoutUsersInput> | spt_pegawaiCreateWithoutUsersInput[] | spt_pegawaiUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutUsersInput | spt_pegawaiCreateOrConnectWithoutUsersInput[]
    upsert?: spt_pegawaiUpsertWithWhereUniqueWithoutUsersInput | spt_pegawaiUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: spt_pegawaiCreateManyUsersInputEnvelope
    set?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    disconnect?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    delete?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    connect?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    update?: spt_pegawaiUpdateWithWhereUniqueWithoutUsersInput | spt_pegawaiUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: spt_pegawaiUpdateManyWithWhereWithoutUsersInput | spt_pegawaiUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: spt_pegawaiScalarWhereInput | spt_pegawaiScalarWhereInput[]
  }

  export type sptUncheckedUpdateManyWithoutUsers_pjNestedInput = {
    create?: XOR<sptCreateWithoutUsers_pjInput, sptUncheckedCreateWithoutUsers_pjInput> | sptCreateWithoutUsers_pjInput[] | sptUncheckedCreateWithoutUsers_pjInput[]
    connectOrCreate?: sptCreateOrConnectWithoutUsers_pjInput | sptCreateOrConnectWithoutUsers_pjInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutUsers_pjInput | sptUpsertWithWhereUniqueWithoutUsers_pjInput[]
    createMany?: sptCreateManyUsers_pjInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutUsers_pjInput | sptUpdateWithWhereUniqueWithoutUsers_pjInput[]
    updateMany?: sptUpdateManyWithWhereWithoutUsers_pjInput | sptUpdateManyWithWhereWithoutUsers_pjInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type sptUncheckedUpdateManyWithoutUsers_pj2NestedInput = {
    create?: XOR<sptCreateWithoutUsers_pj2Input, sptUncheckedCreateWithoutUsers_pj2Input> | sptCreateWithoutUsers_pj2Input[] | sptUncheckedCreateWithoutUsers_pj2Input[]
    connectOrCreate?: sptCreateOrConnectWithoutUsers_pj2Input | sptCreateOrConnectWithoutUsers_pj2Input[]
    upsert?: sptUpsertWithWhereUniqueWithoutUsers_pj2Input | sptUpsertWithWhereUniqueWithoutUsers_pj2Input[]
    createMany?: sptCreateManyUsers_pj2InputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutUsers_pj2Input | sptUpdateWithWhereUniqueWithoutUsers_pj2Input[]
    updateMany?: sptUpdateManyWithWhereWithoutUsers_pj2Input | sptUpdateManyWithWhereWithoutUsers_pj2Input[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type sumberdanaUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<sumberdanaCreateWithoutUsersInput, sumberdanaUncheckedCreateWithoutUsersInput> | sumberdanaCreateWithoutUsersInput[] | sumberdanaUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutUsersInput | sumberdanaCreateOrConnectWithoutUsersInput[]
    upsert?: sumberdanaUpsertWithWhereUniqueWithoutUsersInput | sumberdanaUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: sumberdanaCreateManyUsersInputEnvelope
    set?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    disconnect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    delete?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    update?: sumberdanaUpdateWithWhereUniqueWithoutUsersInput | sumberdanaUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: sumberdanaUpdateManyWithWhereWithoutUsersInput | sumberdanaUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: sumberdanaScalarWhereInput | sumberdanaScalarWhereInput[]
  }

  export type sumberdanaUncheckedUpdateManyWithoutBendaharaNestedInput = {
    create?: XOR<sumberdanaCreateWithoutBendaharaInput, sumberdanaUncheckedCreateWithoutBendaharaInput> | sumberdanaCreateWithoutBendaharaInput[] | sumberdanaUncheckedCreateWithoutBendaharaInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutBendaharaInput | sumberdanaCreateOrConnectWithoutBendaharaInput[]
    upsert?: sumberdanaUpsertWithWhereUniqueWithoutBendaharaInput | sumberdanaUpsertWithWhereUniqueWithoutBendaharaInput[]
    createMany?: sumberdanaCreateManyBendaharaInputEnvelope
    set?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    disconnect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    delete?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    update?: sumberdanaUpdateWithWhereUniqueWithoutBendaharaInput | sumberdanaUpdateWithWhereUniqueWithoutBendaharaInput[]
    updateMany?: sumberdanaUpdateManyWithWhereWithoutBendaharaInput | sumberdanaUpdateManyWithWhereWithoutBendaharaInput[]
    deleteMany?: sumberdanaScalarWhereInput | sumberdanaScalarWhereInput[]
  }

  export type sumberdanaUncheckedUpdateManyWithoutPengguna_anggaranNestedInput = {
    create?: XOR<sumberdanaCreateWithoutPengguna_anggaranInput, sumberdanaUncheckedCreateWithoutPengguna_anggaranInput> | sumberdanaCreateWithoutPengguna_anggaranInput[] | sumberdanaUncheckedCreateWithoutPengguna_anggaranInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutPengguna_anggaranInput | sumberdanaCreateOrConnectWithoutPengguna_anggaranInput[]
    upsert?: sumberdanaUpsertWithWhereUniqueWithoutPengguna_anggaranInput | sumberdanaUpsertWithWhereUniqueWithoutPengguna_anggaranInput[]
    createMany?: sumberdanaCreateManyPengguna_anggaranInputEnvelope
    set?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    disconnect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    delete?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    update?: sumberdanaUpdateWithWhereUniqueWithoutPengguna_anggaranInput | sumberdanaUpdateWithWhereUniqueWithoutPengguna_anggaranInput[]
    updateMany?: sumberdanaUpdateManyWithWhereWithoutPengguna_anggaranInput | sumberdanaUpdateManyWithWhereWithoutPengguna_anggaranInput[]
    deleteMany?: sumberdanaScalarWhereInput | sumberdanaScalarWhereInput[]
  }

  export type bankUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<bankCreateWithoutUserInput, bankUncheckedCreateWithoutUserInput> | bankCreateWithoutUserInput[] | bankUncheckedCreateWithoutUserInput[]
    connectOrCreate?: bankCreateOrConnectWithoutUserInput | bankCreateOrConnectWithoutUserInput[]
    upsert?: bankUpsertWithWhereUniqueWithoutUserInput | bankUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: bankCreateManyUserInputEnvelope
    set?: bankWhereUniqueInput | bankWhereUniqueInput[]
    disconnect?: bankWhereUniqueInput | bankWhereUniqueInput[]
    delete?: bankWhereUniqueInput | bankWhereUniqueInput[]
    connect?: bankWhereUniqueInput | bankWhereUniqueInput[]
    update?: bankUpdateWithWhereUniqueWithoutUserInput | bankUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: bankUpdateManyWithWhereWithoutUserInput | bankUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: bankScalarWhereInput | bankScalarWhereInput[]
  }

  export type gajianUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<gajianCreateWithoutUsersInput, gajianUncheckedCreateWithoutUsersInput> | gajianCreateWithoutUsersInput[] | gajianUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: gajianCreateOrConnectWithoutUsersInput | gajianCreateOrConnectWithoutUsersInput[]
    upsert?: gajianUpsertWithWhereUniqueWithoutUsersInput | gajianUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: gajianCreateManyUsersInputEnvelope
    set?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    disconnect?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    delete?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    connect?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    update?: gajianUpdateWithWhereUniqueWithoutUsersInput | gajianUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: gajianUpdateManyWithWhereWithoutUsersInput | gajianUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: gajianScalarWhereInput | gajianScalarWhereInput[]
  }

  export type spt_pegawaiCreateNestedManyWithoutSptInput = {
    create?: XOR<spt_pegawaiCreateWithoutSptInput, spt_pegawaiUncheckedCreateWithoutSptInput> | spt_pegawaiCreateWithoutSptInput[] | spt_pegawaiUncheckedCreateWithoutSptInput[]
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutSptInput | spt_pegawaiCreateOrConnectWithoutSptInput[]
    createMany?: spt_pegawaiCreateManySptInputEnvelope
    connect?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutPjInput = {
    create?: XOR<usersCreateWithoutPjInput, usersUncheckedCreateWithoutPjInput>
    connectOrCreate?: usersCreateOrConnectWithoutPjInput
    connect?: usersWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutPj2Input = {
    create?: XOR<usersCreateWithoutPj2Input, usersUncheckedCreateWithoutPj2Input>
    connectOrCreate?: usersCreateOrConnectWithoutPj2Input
    connect?: usersWhereUniqueInput
  }

  export type kotaCreateNestedOneWithoutKota_asalInput = {
    create?: XOR<kotaCreateWithoutKota_asalInput, kotaUncheckedCreateWithoutKota_asalInput>
    connectOrCreate?: kotaCreateOrConnectWithoutKota_asalInput
    connect?: kotaWhereUniqueInput
  }

  export type kotaCreateNestedOneWithoutKota_tujuanInput = {
    create?: XOR<kotaCreateWithoutKota_tujuanInput, kotaUncheckedCreateWithoutKota_tujuanInput>
    connectOrCreate?: kotaCreateOrConnectWithoutKota_tujuanInput
    connect?: kotaWhereUniqueInput
  }

  export type kotaCreateNestedOneWithoutKota_tujuan2Input = {
    create?: XOR<kotaCreateWithoutKota_tujuan2Input, kotaUncheckedCreateWithoutKota_tujuan2Input>
    connectOrCreate?: kotaCreateOrConnectWithoutKota_tujuan2Input
    connect?: kotaWhereUniqueInput
  }

  export type opdCreateNestedOneWithoutSptInput = {
    create?: XOR<opdCreateWithoutSptInput, opdUncheckedCreateWithoutSptInput>
    connectOrCreate?: opdCreateOrConnectWithoutSptInput
    connect?: opdWhereUniqueInput
  }

  export type kegiatanCreateNestedOneWithoutSptInput = {
    create?: XOR<kegiatanCreateWithoutSptInput, kegiatanUncheckedCreateWithoutSptInput>
    connectOrCreate?: kegiatanCreateOrConnectWithoutSptInput
    connect?: kegiatanWhereUniqueInput
  }

  export type sumberdanaCreateNestedOneWithoutSptInput = {
    create?: XOR<sumberdanaCreateWithoutSptInput, sumberdanaUncheckedCreateWithoutSptInput>
    connectOrCreate?: sumberdanaCreateOrConnectWithoutSptInput
    connect?: sumberdanaWhereUniqueInput
  }

  export type kategoriCreateNestedOneWithoutSptInput = {
    create?: XOR<kategoriCreateWithoutSptInput, kategoriUncheckedCreateWithoutSptInput>
    connectOrCreate?: kategoriCreateOrConnectWithoutSptInput
    connect?: kategoriWhereUniqueInput
  }

  export type kotaCreateNestedOneWithoutSptInput = {
    create?: XOR<kotaCreateWithoutSptInput, kotaUncheckedCreateWithoutSptInput>
    connectOrCreate?: kotaCreateOrConnectWithoutSptInput
    connect?: kotaWhereUniqueInput
  }

  export type spt_pegawaiUncheckedCreateNestedManyWithoutSptInput = {
    create?: XOR<spt_pegawaiCreateWithoutSptInput, spt_pegawaiUncheckedCreateWithoutSptInput> | spt_pegawaiCreateWithoutSptInput[] | spt_pegawaiUncheckedCreateWithoutSptInput[]
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutSptInput | spt_pegawaiCreateOrConnectWithoutSptInput[]
    createMany?: spt_pegawaiCreateManySptInputEnvelope
    connect?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
  }

  export type spt_pegawaiUpdateManyWithoutSptNestedInput = {
    create?: XOR<spt_pegawaiCreateWithoutSptInput, spt_pegawaiUncheckedCreateWithoutSptInput> | spt_pegawaiCreateWithoutSptInput[] | spt_pegawaiUncheckedCreateWithoutSptInput[]
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutSptInput | spt_pegawaiCreateOrConnectWithoutSptInput[]
    upsert?: spt_pegawaiUpsertWithWhereUniqueWithoutSptInput | spt_pegawaiUpsertWithWhereUniqueWithoutSptInput[]
    createMany?: spt_pegawaiCreateManySptInputEnvelope
    set?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    disconnect?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    delete?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    connect?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    update?: spt_pegawaiUpdateWithWhereUniqueWithoutSptInput | spt_pegawaiUpdateWithWhereUniqueWithoutSptInput[]
    updateMany?: spt_pegawaiUpdateManyWithWhereWithoutSptInput | spt_pegawaiUpdateManyWithWhereWithoutSptInput[]
    deleteMany?: spt_pegawaiScalarWhereInput | spt_pegawaiScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutPjNestedInput = {
    create?: XOR<usersCreateWithoutPjInput, usersUncheckedCreateWithoutPjInput>
    connectOrCreate?: usersCreateOrConnectWithoutPjInput
    upsert?: usersUpsertWithoutPjInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutPjInput, usersUpdateWithoutPjInput>, usersUncheckedUpdateWithoutPjInput>
  }

  export type usersUpdateOneRequiredWithoutPj2NestedInput = {
    create?: XOR<usersCreateWithoutPj2Input, usersUncheckedCreateWithoutPj2Input>
    connectOrCreate?: usersCreateOrConnectWithoutPj2Input
    upsert?: usersUpsertWithoutPj2Input
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutPj2Input, usersUpdateWithoutPj2Input>, usersUncheckedUpdateWithoutPj2Input>
  }

  export type kotaUpdateOneRequiredWithoutKota_asalNestedInput = {
    create?: XOR<kotaCreateWithoutKota_asalInput, kotaUncheckedCreateWithoutKota_asalInput>
    connectOrCreate?: kotaCreateOrConnectWithoutKota_asalInput
    upsert?: kotaUpsertWithoutKota_asalInput
    connect?: kotaWhereUniqueInput
    update?: XOR<XOR<kotaUpdateToOneWithWhereWithoutKota_asalInput, kotaUpdateWithoutKota_asalInput>, kotaUncheckedUpdateWithoutKota_asalInput>
  }

  export type kotaUpdateOneRequiredWithoutKota_tujuanNestedInput = {
    create?: XOR<kotaCreateWithoutKota_tujuanInput, kotaUncheckedCreateWithoutKota_tujuanInput>
    connectOrCreate?: kotaCreateOrConnectWithoutKota_tujuanInput
    upsert?: kotaUpsertWithoutKota_tujuanInput
    connect?: kotaWhereUniqueInput
    update?: XOR<XOR<kotaUpdateToOneWithWhereWithoutKota_tujuanInput, kotaUpdateWithoutKota_tujuanInput>, kotaUncheckedUpdateWithoutKota_tujuanInput>
  }

  export type kotaUpdateOneWithoutKota_tujuan2NestedInput = {
    create?: XOR<kotaCreateWithoutKota_tujuan2Input, kotaUncheckedCreateWithoutKota_tujuan2Input>
    connectOrCreate?: kotaCreateOrConnectWithoutKota_tujuan2Input
    upsert?: kotaUpsertWithoutKota_tujuan2Input
    disconnect?: kotaWhereInput | boolean
    delete?: kotaWhereInput | boolean
    connect?: kotaWhereUniqueInput
    update?: XOR<XOR<kotaUpdateToOneWithWhereWithoutKota_tujuan2Input, kotaUpdateWithoutKota_tujuan2Input>, kotaUncheckedUpdateWithoutKota_tujuan2Input>
  }

  export type opdUpdateOneRequiredWithoutSptNestedInput = {
    create?: XOR<opdCreateWithoutSptInput, opdUncheckedCreateWithoutSptInput>
    connectOrCreate?: opdCreateOrConnectWithoutSptInput
    upsert?: opdUpsertWithoutSptInput
    connect?: opdWhereUniqueInput
    update?: XOR<XOR<opdUpdateToOneWithWhereWithoutSptInput, opdUpdateWithoutSptInput>, opdUncheckedUpdateWithoutSptInput>
  }

  export type kegiatanUpdateOneRequiredWithoutSptNestedInput = {
    create?: XOR<kegiatanCreateWithoutSptInput, kegiatanUncheckedCreateWithoutSptInput>
    connectOrCreate?: kegiatanCreateOrConnectWithoutSptInput
    upsert?: kegiatanUpsertWithoutSptInput
    connect?: kegiatanWhereUniqueInput
    update?: XOR<XOR<kegiatanUpdateToOneWithWhereWithoutSptInput, kegiatanUpdateWithoutSptInput>, kegiatanUncheckedUpdateWithoutSptInput>
  }

  export type sumberdanaUpdateOneRequiredWithoutSptNestedInput = {
    create?: XOR<sumberdanaCreateWithoutSptInput, sumberdanaUncheckedCreateWithoutSptInput>
    connectOrCreate?: sumberdanaCreateOrConnectWithoutSptInput
    upsert?: sumberdanaUpsertWithoutSptInput
    connect?: sumberdanaWhereUniqueInput
    update?: XOR<XOR<sumberdanaUpdateToOneWithWhereWithoutSptInput, sumberdanaUpdateWithoutSptInput>, sumberdanaUncheckedUpdateWithoutSptInput>
  }

  export type kategoriUpdateOneRequiredWithoutSptNestedInput = {
    create?: XOR<kategoriCreateWithoutSptInput, kategoriUncheckedCreateWithoutSptInput>
    connectOrCreate?: kategoriCreateOrConnectWithoutSptInput
    upsert?: kategoriUpsertWithoutSptInput
    connect?: kategoriWhereUniqueInput
    update?: XOR<XOR<kategoriUpdateToOneWithWhereWithoutSptInput, kategoriUpdateWithoutSptInput>, kategoriUncheckedUpdateWithoutSptInput>
  }

  export type kotaUpdateOneWithoutSptNestedInput = {
    create?: XOR<kotaCreateWithoutSptInput, kotaUncheckedCreateWithoutSptInput>
    connectOrCreate?: kotaCreateOrConnectWithoutSptInput
    upsert?: kotaUpsertWithoutSptInput
    disconnect?: kotaWhereInput | boolean
    delete?: kotaWhereInput | boolean
    connect?: kotaWhereUniqueInput
    update?: XOR<XOR<kotaUpdateToOneWithWhereWithoutSptInput, kotaUpdateWithoutSptInput>, kotaUncheckedUpdateWithoutSptInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type spt_pegawaiUncheckedUpdateManyWithoutSptNestedInput = {
    create?: XOR<spt_pegawaiCreateWithoutSptInput, spt_pegawaiUncheckedCreateWithoutSptInput> | spt_pegawaiCreateWithoutSptInput[] | spt_pegawaiUncheckedCreateWithoutSptInput[]
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutSptInput | spt_pegawaiCreateOrConnectWithoutSptInput[]
    upsert?: spt_pegawaiUpsertWithWhereUniqueWithoutSptInput | spt_pegawaiUpsertWithWhereUniqueWithoutSptInput[]
    createMany?: spt_pegawaiCreateManySptInputEnvelope
    set?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    disconnect?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    delete?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    connect?: spt_pegawaiWhereUniqueInput | spt_pegawaiWhereUniqueInput[]
    update?: spt_pegawaiUpdateWithWhereUniqueWithoutSptInput | spt_pegawaiUpdateWithWhereUniqueWithoutSptInput[]
    updateMany?: spt_pegawaiUpdateManyWithWhereWithoutSptInput | spt_pegawaiUpdateManyWithWhereWithoutSptInput[]
    deleteMany?: spt_pegawaiScalarWhereInput | spt_pegawaiScalarWhereInput[]
  }

  export type sptCreateNestedOneWithoutSpt_pegawaiInput = {
    create?: XOR<sptCreateWithoutSpt_pegawaiInput, sptUncheckedCreateWithoutSpt_pegawaiInput>
    connectOrCreate?: sptCreateOrConnectWithoutSpt_pegawaiInput
    connect?: sptWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutSpt_pegawaiInput = {
    create?: XOR<usersCreateWithoutSpt_pegawaiInput, usersUncheckedCreateWithoutSpt_pegawaiInput>
    connectOrCreate?: usersCreateOrConnectWithoutSpt_pegawaiInput
    connect?: usersWhereUniqueInput
  }

  export type biayaCreateNestedManyWithoutSpt_pegawaiInput = {
    create?: XOR<biayaCreateWithoutSpt_pegawaiInput, biayaUncheckedCreateWithoutSpt_pegawaiInput> | biayaCreateWithoutSpt_pegawaiInput[] | biayaUncheckedCreateWithoutSpt_pegawaiInput[]
    connectOrCreate?: biayaCreateOrConnectWithoutSpt_pegawaiInput | biayaCreateOrConnectWithoutSpt_pegawaiInput[]
    createMany?: biayaCreateManySpt_pegawaiInputEnvelope
    connect?: biayaWhereUniqueInput | biayaWhereUniqueInput[]
  }

  export type npdCreateNestedManyWithoutSpt_pegawaiInput = {
    create?: XOR<npdCreateWithoutSpt_pegawaiInput, npdUncheckedCreateWithoutSpt_pegawaiInput> | npdCreateWithoutSpt_pegawaiInput[] | npdUncheckedCreateWithoutSpt_pegawaiInput[]
    connectOrCreate?: npdCreateOrConnectWithoutSpt_pegawaiInput | npdCreateOrConnectWithoutSpt_pegawaiInput[]
    createMany?: npdCreateManySpt_pegawaiInputEnvelope
    connect?: npdWhereUniqueInput | npdWhereUniqueInput[]
  }

  export type laporanCreateNestedOneWithoutSpt_pegawaiInput = {
    create?: XOR<laporanCreateWithoutSpt_pegawaiInput, laporanUncheckedCreateWithoutSpt_pegawaiInput>
    connectOrCreate?: laporanCreateOrConnectWithoutSpt_pegawaiInput
    connect?: laporanWhereUniqueInput
  }

  export type kwitansiCreateNestedOneWithoutSpt_pegawaiInput = {
    create?: XOR<kwitansiCreateWithoutSpt_pegawaiInput, kwitansiUncheckedCreateWithoutSpt_pegawaiInput>
    connectOrCreate?: kwitansiCreateOrConnectWithoutSpt_pegawaiInput
    connect?: kwitansiWhereUniqueInput
  }

  export type biayaUncheckedCreateNestedManyWithoutSpt_pegawaiInput = {
    create?: XOR<biayaCreateWithoutSpt_pegawaiInput, biayaUncheckedCreateWithoutSpt_pegawaiInput> | biayaCreateWithoutSpt_pegawaiInput[] | biayaUncheckedCreateWithoutSpt_pegawaiInput[]
    connectOrCreate?: biayaCreateOrConnectWithoutSpt_pegawaiInput | biayaCreateOrConnectWithoutSpt_pegawaiInput[]
    createMany?: biayaCreateManySpt_pegawaiInputEnvelope
    connect?: biayaWhereUniqueInput | biayaWhereUniqueInput[]
  }

  export type npdUncheckedCreateNestedManyWithoutSpt_pegawaiInput = {
    create?: XOR<npdCreateWithoutSpt_pegawaiInput, npdUncheckedCreateWithoutSpt_pegawaiInput> | npdCreateWithoutSpt_pegawaiInput[] | npdUncheckedCreateWithoutSpt_pegawaiInput[]
    connectOrCreate?: npdCreateOrConnectWithoutSpt_pegawaiInput | npdCreateOrConnectWithoutSpt_pegawaiInput[]
    createMany?: npdCreateManySpt_pegawaiInputEnvelope
    connect?: npdWhereUniqueInput | npdWhereUniqueInput[]
  }

  export type laporanUncheckedCreateNestedOneWithoutSpt_pegawaiInput = {
    create?: XOR<laporanCreateWithoutSpt_pegawaiInput, laporanUncheckedCreateWithoutSpt_pegawaiInput>
    connectOrCreate?: laporanCreateOrConnectWithoutSpt_pegawaiInput
    connect?: laporanWhereUniqueInput
  }

  export type kwitansiUncheckedCreateNestedOneWithoutSpt_pegawaiInput = {
    create?: XOR<kwitansiCreateWithoutSpt_pegawaiInput, kwitansiUncheckedCreateWithoutSpt_pegawaiInput>
    connectOrCreate?: kwitansiCreateOrConnectWithoutSpt_pegawaiInput
    connect?: kwitansiWhereUniqueInput
  }

  export type sptUpdateOneRequiredWithoutSpt_pegawaiNestedInput = {
    create?: XOR<sptCreateWithoutSpt_pegawaiInput, sptUncheckedCreateWithoutSpt_pegawaiInput>
    connectOrCreate?: sptCreateOrConnectWithoutSpt_pegawaiInput
    upsert?: sptUpsertWithoutSpt_pegawaiInput
    connect?: sptWhereUniqueInput
    update?: XOR<XOR<sptUpdateToOneWithWhereWithoutSpt_pegawaiInput, sptUpdateWithoutSpt_pegawaiInput>, sptUncheckedUpdateWithoutSpt_pegawaiInput>
  }

  export type usersUpdateOneRequiredWithoutSpt_pegawaiNestedInput = {
    create?: XOR<usersCreateWithoutSpt_pegawaiInput, usersUncheckedCreateWithoutSpt_pegawaiInput>
    connectOrCreate?: usersCreateOrConnectWithoutSpt_pegawaiInput
    upsert?: usersUpsertWithoutSpt_pegawaiInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutSpt_pegawaiInput, usersUpdateWithoutSpt_pegawaiInput>, usersUncheckedUpdateWithoutSpt_pegawaiInput>
  }

  export type biayaUpdateManyWithoutSpt_pegawaiNestedInput = {
    create?: XOR<biayaCreateWithoutSpt_pegawaiInput, biayaUncheckedCreateWithoutSpt_pegawaiInput> | biayaCreateWithoutSpt_pegawaiInput[] | biayaUncheckedCreateWithoutSpt_pegawaiInput[]
    connectOrCreate?: biayaCreateOrConnectWithoutSpt_pegawaiInput | biayaCreateOrConnectWithoutSpt_pegawaiInput[]
    upsert?: biayaUpsertWithWhereUniqueWithoutSpt_pegawaiInput | biayaUpsertWithWhereUniqueWithoutSpt_pegawaiInput[]
    createMany?: biayaCreateManySpt_pegawaiInputEnvelope
    set?: biayaWhereUniqueInput | biayaWhereUniqueInput[]
    disconnect?: biayaWhereUniqueInput | biayaWhereUniqueInput[]
    delete?: biayaWhereUniqueInput | biayaWhereUniqueInput[]
    connect?: biayaWhereUniqueInput | biayaWhereUniqueInput[]
    update?: biayaUpdateWithWhereUniqueWithoutSpt_pegawaiInput | biayaUpdateWithWhereUniqueWithoutSpt_pegawaiInput[]
    updateMany?: biayaUpdateManyWithWhereWithoutSpt_pegawaiInput | biayaUpdateManyWithWhereWithoutSpt_pegawaiInput[]
    deleteMany?: biayaScalarWhereInput | biayaScalarWhereInput[]
  }

  export type npdUpdateManyWithoutSpt_pegawaiNestedInput = {
    create?: XOR<npdCreateWithoutSpt_pegawaiInput, npdUncheckedCreateWithoutSpt_pegawaiInput> | npdCreateWithoutSpt_pegawaiInput[] | npdUncheckedCreateWithoutSpt_pegawaiInput[]
    connectOrCreate?: npdCreateOrConnectWithoutSpt_pegawaiInput | npdCreateOrConnectWithoutSpt_pegawaiInput[]
    upsert?: npdUpsertWithWhereUniqueWithoutSpt_pegawaiInput | npdUpsertWithWhereUniqueWithoutSpt_pegawaiInput[]
    createMany?: npdCreateManySpt_pegawaiInputEnvelope
    set?: npdWhereUniqueInput | npdWhereUniqueInput[]
    disconnect?: npdWhereUniqueInput | npdWhereUniqueInput[]
    delete?: npdWhereUniqueInput | npdWhereUniqueInput[]
    connect?: npdWhereUniqueInput | npdWhereUniqueInput[]
    update?: npdUpdateWithWhereUniqueWithoutSpt_pegawaiInput | npdUpdateWithWhereUniqueWithoutSpt_pegawaiInput[]
    updateMany?: npdUpdateManyWithWhereWithoutSpt_pegawaiInput | npdUpdateManyWithWhereWithoutSpt_pegawaiInput[]
    deleteMany?: npdScalarWhereInput | npdScalarWhereInput[]
  }

  export type laporanUpdateOneWithoutSpt_pegawaiNestedInput = {
    create?: XOR<laporanCreateWithoutSpt_pegawaiInput, laporanUncheckedCreateWithoutSpt_pegawaiInput>
    connectOrCreate?: laporanCreateOrConnectWithoutSpt_pegawaiInput
    upsert?: laporanUpsertWithoutSpt_pegawaiInput
    disconnect?: laporanWhereInput | boolean
    delete?: laporanWhereInput | boolean
    connect?: laporanWhereUniqueInput
    update?: XOR<XOR<laporanUpdateToOneWithWhereWithoutSpt_pegawaiInput, laporanUpdateWithoutSpt_pegawaiInput>, laporanUncheckedUpdateWithoutSpt_pegawaiInput>
  }

  export type kwitansiUpdateOneWithoutSpt_pegawaiNestedInput = {
    create?: XOR<kwitansiCreateWithoutSpt_pegawaiInput, kwitansiUncheckedCreateWithoutSpt_pegawaiInput>
    connectOrCreate?: kwitansiCreateOrConnectWithoutSpt_pegawaiInput
    upsert?: kwitansiUpsertWithoutSpt_pegawaiInput
    disconnect?: kwitansiWhereInput | boolean
    delete?: kwitansiWhereInput | boolean
    connect?: kwitansiWhereUniqueInput
    update?: XOR<XOR<kwitansiUpdateToOneWithWhereWithoutSpt_pegawaiInput, kwitansiUpdateWithoutSpt_pegawaiInput>, kwitansiUncheckedUpdateWithoutSpt_pegawaiInput>
  }

  export type biayaUncheckedUpdateManyWithoutSpt_pegawaiNestedInput = {
    create?: XOR<biayaCreateWithoutSpt_pegawaiInput, biayaUncheckedCreateWithoutSpt_pegawaiInput> | biayaCreateWithoutSpt_pegawaiInput[] | biayaUncheckedCreateWithoutSpt_pegawaiInput[]
    connectOrCreate?: biayaCreateOrConnectWithoutSpt_pegawaiInput | biayaCreateOrConnectWithoutSpt_pegawaiInput[]
    upsert?: biayaUpsertWithWhereUniqueWithoutSpt_pegawaiInput | biayaUpsertWithWhereUniqueWithoutSpt_pegawaiInput[]
    createMany?: biayaCreateManySpt_pegawaiInputEnvelope
    set?: biayaWhereUniqueInput | biayaWhereUniqueInput[]
    disconnect?: biayaWhereUniqueInput | biayaWhereUniqueInput[]
    delete?: biayaWhereUniqueInput | biayaWhereUniqueInput[]
    connect?: biayaWhereUniqueInput | biayaWhereUniqueInput[]
    update?: biayaUpdateWithWhereUniqueWithoutSpt_pegawaiInput | biayaUpdateWithWhereUniqueWithoutSpt_pegawaiInput[]
    updateMany?: biayaUpdateManyWithWhereWithoutSpt_pegawaiInput | biayaUpdateManyWithWhereWithoutSpt_pegawaiInput[]
    deleteMany?: biayaScalarWhereInput | biayaScalarWhereInput[]
  }

  export type npdUncheckedUpdateManyWithoutSpt_pegawaiNestedInput = {
    create?: XOR<npdCreateWithoutSpt_pegawaiInput, npdUncheckedCreateWithoutSpt_pegawaiInput> | npdCreateWithoutSpt_pegawaiInput[] | npdUncheckedCreateWithoutSpt_pegawaiInput[]
    connectOrCreate?: npdCreateOrConnectWithoutSpt_pegawaiInput | npdCreateOrConnectWithoutSpt_pegawaiInput[]
    upsert?: npdUpsertWithWhereUniqueWithoutSpt_pegawaiInput | npdUpsertWithWhereUniqueWithoutSpt_pegawaiInput[]
    createMany?: npdCreateManySpt_pegawaiInputEnvelope
    set?: npdWhereUniqueInput | npdWhereUniqueInput[]
    disconnect?: npdWhereUniqueInput | npdWhereUniqueInput[]
    delete?: npdWhereUniqueInput | npdWhereUniqueInput[]
    connect?: npdWhereUniqueInput | npdWhereUniqueInput[]
    update?: npdUpdateWithWhereUniqueWithoutSpt_pegawaiInput | npdUpdateWithWhereUniqueWithoutSpt_pegawaiInput[]
    updateMany?: npdUpdateManyWithWhereWithoutSpt_pegawaiInput | npdUpdateManyWithWhereWithoutSpt_pegawaiInput[]
    deleteMany?: npdScalarWhereInput | npdScalarWhereInput[]
  }

  export type laporanUncheckedUpdateOneWithoutSpt_pegawaiNestedInput = {
    create?: XOR<laporanCreateWithoutSpt_pegawaiInput, laporanUncheckedCreateWithoutSpt_pegawaiInput>
    connectOrCreate?: laporanCreateOrConnectWithoutSpt_pegawaiInput
    upsert?: laporanUpsertWithoutSpt_pegawaiInput
    disconnect?: laporanWhereInput | boolean
    delete?: laporanWhereInput | boolean
    connect?: laporanWhereUniqueInput
    update?: XOR<XOR<laporanUpdateToOneWithWhereWithoutSpt_pegawaiInput, laporanUpdateWithoutSpt_pegawaiInput>, laporanUncheckedUpdateWithoutSpt_pegawaiInput>
  }

  export type kwitansiUncheckedUpdateOneWithoutSpt_pegawaiNestedInput = {
    create?: XOR<kwitansiCreateWithoutSpt_pegawaiInput, kwitansiUncheckedCreateWithoutSpt_pegawaiInput>
    connectOrCreate?: kwitansiCreateOrConnectWithoutSpt_pegawaiInput
    upsert?: kwitansiUpsertWithoutSpt_pegawaiInput
    disconnect?: kwitansiWhereInput | boolean
    delete?: kwitansiWhereInput | boolean
    connect?: kwitansiWhereUniqueInput
    update?: XOR<XOR<kwitansiUpdateToOneWithWhereWithoutSpt_pegawaiInput, kwitansiUpdateWithoutSpt_pegawaiInput>, kwitansiUncheckedUpdateWithoutSpt_pegawaiInput>
  }

  export type spt_pegawaiCreateNestedOneWithoutNpdInput = {
    create?: XOR<spt_pegawaiCreateWithoutNpdInput, spt_pegawaiUncheckedCreateWithoutNpdInput>
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutNpdInput
    connect?: spt_pegawaiWhereUniqueInput
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type spt_pegawaiUpdateOneRequiredWithoutNpdNestedInput = {
    create?: XOR<spt_pegawaiCreateWithoutNpdInput, spt_pegawaiUncheckedCreateWithoutNpdInput>
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutNpdInput
    upsert?: spt_pegawaiUpsertWithoutNpdInput
    connect?: spt_pegawaiWhereUniqueInput
    update?: XOR<XOR<spt_pegawaiUpdateToOneWithWhereWithoutNpdInput, spt_pegawaiUpdateWithoutNpdInput>, spt_pegawaiUncheckedUpdateWithoutNpdInput>
  }

  export type spt_pegawaiCreateNestedOneWithoutBiayaInput = {
    create?: XOR<spt_pegawaiCreateWithoutBiayaInput, spt_pegawaiUncheckedCreateWithoutBiayaInput>
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutBiayaInput
    connect?: spt_pegawaiWhereUniqueInput
  }

  export type spt_pegawaiUpdateOneRequiredWithoutBiayaNestedInput = {
    create?: XOR<spt_pegawaiCreateWithoutBiayaInput, spt_pegawaiUncheckedCreateWithoutBiayaInput>
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutBiayaInput
    upsert?: spt_pegawaiUpsertWithoutBiayaInput
    connect?: spt_pegawaiWhereUniqueInput
    update?: XOR<XOR<spt_pegawaiUpdateToOneWithWhereWithoutBiayaInput, spt_pegawaiUpdateWithoutBiayaInput>, spt_pegawaiUncheckedUpdateWithoutBiayaInput>
  }

  export type kotaCreateNestedManyWithoutProvinsiInput = {
    create?: XOR<kotaCreateWithoutProvinsiInput, kotaUncheckedCreateWithoutProvinsiInput> | kotaCreateWithoutProvinsiInput[] | kotaUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: kotaCreateOrConnectWithoutProvinsiInput | kotaCreateOrConnectWithoutProvinsiInput[]
    createMany?: kotaCreateManyProvinsiInputEnvelope
    connect?: kotaWhereUniqueInput | kotaWhereUniqueInput[]
  }

  export type kotaUncheckedCreateNestedManyWithoutProvinsiInput = {
    create?: XOR<kotaCreateWithoutProvinsiInput, kotaUncheckedCreateWithoutProvinsiInput> | kotaCreateWithoutProvinsiInput[] | kotaUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: kotaCreateOrConnectWithoutProvinsiInput | kotaCreateOrConnectWithoutProvinsiInput[]
    createMany?: kotaCreateManyProvinsiInputEnvelope
    connect?: kotaWhereUniqueInput | kotaWhereUniqueInput[]
  }

  export type kotaUpdateManyWithoutProvinsiNestedInput = {
    create?: XOR<kotaCreateWithoutProvinsiInput, kotaUncheckedCreateWithoutProvinsiInput> | kotaCreateWithoutProvinsiInput[] | kotaUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: kotaCreateOrConnectWithoutProvinsiInput | kotaCreateOrConnectWithoutProvinsiInput[]
    upsert?: kotaUpsertWithWhereUniqueWithoutProvinsiInput | kotaUpsertWithWhereUniqueWithoutProvinsiInput[]
    createMany?: kotaCreateManyProvinsiInputEnvelope
    set?: kotaWhereUniqueInput | kotaWhereUniqueInput[]
    disconnect?: kotaWhereUniqueInput | kotaWhereUniqueInput[]
    delete?: kotaWhereUniqueInput | kotaWhereUniqueInput[]
    connect?: kotaWhereUniqueInput | kotaWhereUniqueInput[]
    update?: kotaUpdateWithWhereUniqueWithoutProvinsiInput | kotaUpdateWithWhereUniqueWithoutProvinsiInput[]
    updateMany?: kotaUpdateManyWithWhereWithoutProvinsiInput | kotaUpdateManyWithWhereWithoutProvinsiInput[]
    deleteMany?: kotaScalarWhereInput | kotaScalarWhereInput[]
  }

  export type kotaUncheckedUpdateManyWithoutProvinsiNestedInput = {
    create?: XOR<kotaCreateWithoutProvinsiInput, kotaUncheckedCreateWithoutProvinsiInput> | kotaCreateWithoutProvinsiInput[] | kotaUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: kotaCreateOrConnectWithoutProvinsiInput | kotaCreateOrConnectWithoutProvinsiInput[]
    upsert?: kotaUpsertWithWhereUniqueWithoutProvinsiInput | kotaUpsertWithWhereUniqueWithoutProvinsiInput[]
    createMany?: kotaCreateManyProvinsiInputEnvelope
    set?: kotaWhereUniqueInput | kotaWhereUniqueInput[]
    disconnect?: kotaWhereUniqueInput | kotaWhereUniqueInput[]
    delete?: kotaWhereUniqueInput | kotaWhereUniqueInput[]
    connect?: kotaWhereUniqueInput | kotaWhereUniqueInput[]
    update?: kotaUpdateWithWhereUniqueWithoutProvinsiInput | kotaUpdateWithWhereUniqueWithoutProvinsiInput[]
    updateMany?: kotaUpdateManyWithWhereWithoutProvinsiInput | kotaUpdateManyWithWhereWithoutProvinsiInput[]
    deleteMany?: kotaScalarWhereInput | kotaScalarWhereInput[]
  }

  export type sptCreateNestedManyWithoutKota_asalInput = {
    create?: XOR<sptCreateWithoutKota_asalInput, sptUncheckedCreateWithoutKota_asalInput> | sptCreateWithoutKota_asalInput[] | sptUncheckedCreateWithoutKota_asalInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKota_asalInput | sptCreateOrConnectWithoutKota_asalInput[]
    createMany?: sptCreateManyKota_asalInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type sptCreateNestedManyWithoutKota_tujuanInput = {
    create?: XOR<sptCreateWithoutKota_tujuanInput, sptUncheckedCreateWithoutKota_tujuanInput> | sptCreateWithoutKota_tujuanInput[] | sptUncheckedCreateWithoutKota_tujuanInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKota_tujuanInput | sptCreateOrConnectWithoutKota_tujuanInput[]
    createMany?: sptCreateManyKota_tujuanInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type sptCreateNestedManyWithoutKota_tujuan2Input = {
    create?: XOR<sptCreateWithoutKota_tujuan2Input, sptUncheckedCreateWithoutKota_tujuan2Input> | sptCreateWithoutKota_tujuan2Input[] | sptUncheckedCreateWithoutKota_tujuan2Input[]
    connectOrCreate?: sptCreateOrConnectWithoutKota_tujuan2Input | sptCreateOrConnectWithoutKota_tujuan2Input[]
    createMany?: sptCreateManyKota_tujuan2InputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type sptCreateNestedManyWithoutKotaInput = {
    create?: XOR<sptCreateWithoutKotaInput, sptUncheckedCreateWithoutKotaInput> | sptCreateWithoutKotaInput[] | sptUncheckedCreateWithoutKotaInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKotaInput | sptCreateOrConnectWithoutKotaInput[]
    createMany?: sptCreateManyKotaInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type provinsiCreateNestedOneWithoutKotaInput = {
    create?: XOR<provinsiCreateWithoutKotaInput, provinsiUncheckedCreateWithoutKotaInput>
    connectOrCreate?: provinsiCreateOrConnectWithoutKotaInput
    connect?: provinsiWhereUniqueInput
  }

  export type standardCreateNestedManyWithoutKota_asalInput = {
    create?: XOR<standardCreateWithoutKota_asalInput, standardUncheckedCreateWithoutKota_asalInput> | standardCreateWithoutKota_asalInput[] | standardUncheckedCreateWithoutKota_asalInput[]
    connectOrCreate?: standardCreateOrConnectWithoutKota_asalInput | standardCreateOrConnectWithoutKota_asalInput[]
    createMany?: standardCreateManyKota_asalInputEnvelope
    connect?: standardWhereUniqueInput | standardWhereUniqueInput[]
  }

  export type standardCreateNestedManyWithoutKota_tujuanInput = {
    create?: XOR<standardCreateWithoutKota_tujuanInput, standardUncheckedCreateWithoutKota_tujuanInput> | standardCreateWithoutKota_tujuanInput[] | standardUncheckedCreateWithoutKota_tujuanInput[]
    connectOrCreate?: standardCreateOrConnectWithoutKota_tujuanInput | standardCreateOrConnectWithoutKota_tujuanInput[]
    createMany?: standardCreateManyKota_tujuanInputEnvelope
    connect?: standardWhereUniqueInput | standardWhereUniqueInput[]
  }

  export type sptUncheckedCreateNestedManyWithoutKota_asalInput = {
    create?: XOR<sptCreateWithoutKota_asalInput, sptUncheckedCreateWithoutKota_asalInput> | sptCreateWithoutKota_asalInput[] | sptUncheckedCreateWithoutKota_asalInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKota_asalInput | sptCreateOrConnectWithoutKota_asalInput[]
    createMany?: sptCreateManyKota_asalInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type sptUncheckedCreateNestedManyWithoutKota_tujuanInput = {
    create?: XOR<sptCreateWithoutKota_tujuanInput, sptUncheckedCreateWithoutKota_tujuanInput> | sptCreateWithoutKota_tujuanInput[] | sptUncheckedCreateWithoutKota_tujuanInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKota_tujuanInput | sptCreateOrConnectWithoutKota_tujuanInput[]
    createMany?: sptCreateManyKota_tujuanInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type sptUncheckedCreateNestedManyWithoutKota_tujuan2Input = {
    create?: XOR<sptCreateWithoutKota_tujuan2Input, sptUncheckedCreateWithoutKota_tujuan2Input> | sptCreateWithoutKota_tujuan2Input[] | sptUncheckedCreateWithoutKota_tujuan2Input[]
    connectOrCreate?: sptCreateOrConnectWithoutKota_tujuan2Input | sptCreateOrConnectWithoutKota_tujuan2Input[]
    createMany?: sptCreateManyKota_tujuan2InputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type sptUncheckedCreateNestedManyWithoutKotaInput = {
    create?: XOR<sptCreateWithoutKotaInput, sptUncheckedCreateWithoutKotaInput> | sptCreateWithoutKotaInput[] | sptUncheckedCreateWithoutKotaInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKotaInput | sptCreateOrConnectWithoutKotaInput[]
    createMany?: sptCreateManyKotaInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type standardUncheckedCreateNestedManyWithoutKota_asalInput = {
    create?: XOR<standardCreateWithoutKota_asalInput, standardUncheckedCreateWithoutKota_asalInput> | standardCreateWithoutKota_asalInput[] | standardUncheckedCreateWithoutKota_asalInput[]
    connectOrCreate?: standardCreateOrConnectWithoutKota_asalInput | standardCreateOrConnectWithoutKota_asalInput[]
    createMany?: standardCreateManyKota_asalInputEnvelope
    connect?: standardWhereUniqueInput | standardWhereUniqueInput[]
  }

  export type standardUncheckedCreateNestedManyWithoutKota_tujuanInput = {
    create?: XOR<standardCreateWithoutKota_tujuanInput, standardUncheckedCreateWithoutKota_tujuanInput> | standardCreateWithoutKota_tujuanInput[] | standardUncheckedCreateWithoutKota_tujuanInput[]
    connectOrCreate?: standardCreateOrConnectWithoutKota_tujuanInput | standardCreateOrConnectWithoutKota_tujuanInput[]
    createMany?: standardCreateManyKota_tujuanInputEnvelope
    connect?: standardWhereUniqueInput | standardWhereUniqueInput[]
  }

  export type sptUpdateManyWithoutKota_asalNestedInput = {
    create?: XOR<sptCreateWithoutKota_asalInput, sptUncheckedCreateWithoutKota_asalInput> | sptCreateWithoutKota_asalInput[] | sptUncheckedCreateWithoutKota_asalInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKota_asalInput | sptCreateOrConnectWithoutKota_asalInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutKota_asalInput | sptUpsertWithWhereUniqueWithoutKota_asalInput[]
    createMany?: sptCreateManyKota_asalInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutKota_asalInput | sptUpdateWithWhereUniqueWithoutKota_asalInput[]
    updateMany?: sptUpdateManyWithWhereWithoutKota_asalInput | sptUpdateManyWithWhereWithoutKota_asalInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type sptUpdateManyWithoutKota_tujuanNestedInput = {
    create?: XOR<sptCreateWithoutKota_tujuanInput, sptUncheckedCreateWithoutKota_tujuanInput> | sptCreateWithoutKota_tujuanInput[] | sptUncheckedCreateWithoutKota_tujuanInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKota_tujuanInput | sptCreateOrConnectWithoutKota_tujuanInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutKota_tujuanInput | sptUpsertWithWhereUniqueWithoutKota_tujuanInput[]
    createMany?: sptCreateManyKota_tujuanInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutKota_tujuanInput | sptUpdateWithWhereUniqueWithoutKota_tujuanInput[]
    updateMany?: sptUpdateManyWithWhereWithoutKota_tujuanInput | sptUpdateManyWithWhereWithoutKota_tujuanInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type sptUpdateManyWithoutKota_tujuan2NestedInput = {
    create?: XOR<sptCreateWithoutKota_tujuan2Input, sptUncheckedCreateWithoutKota_tujuan2Input> | sptCreateWithoutKota_tujuan2Input[] | sptUncheckedCreateWithoutKota_tujuan2Input[]
    connectOrCreate?: sptCreateOrConnectWithoutKota_tujuan2Input | sptCreateOrConnectWithoutKota_tujuan2Input[]
    upsert?: sptUpsertWithWhereUniqueWithoutKota_tujuan2Input | sptUpsertWithWhereUniqueWithoutKota_tujuan2Input[]
    createMany?: sptCreateManyKota_tujuan2InputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutKota_tujuan2Input | sptUpdateWithWhereUniqueWithoutKota_tujuan2Input[]
    updateMany?: sptUpdateManyWithWhereWithoutKota_tujuan2Input | sptUpdateManyWithWhereWithoutKota_tujuan2Input[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type sptUpdateManyWithoutKotaNestedInput = {
    create?: XOR<sptCreateWithoutKotaInput, sptUncheckedCreateWithoutKotaInput> | sptCreateWithoutKotaInput[] | sptUncheckedCreateWithoutKotaInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKotaInput | sptCreateOrConnectWithoutKotaInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutKotaInput | sptUpsertWithWhereUniqueWithoutKotaInput[]
    createMany?: sptCreateManyKotaInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutKotaInput | sptUpdateWithWhereUniqueWithoutKotaInput[]
    updateMany?: sptUpdateManyWithWhereWithoutKotaInput | sptUpdateManyWithWhereWithoutKotaInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type provinsiUpdateOneWithoutKotaNestedInput = {
    create?: XOR<provinsiCreateWithoutKotaInput, provinsiUncheckedCreateWithoutKotaInput>
    connectOrCreate?: provinsiCreateOrConnectWithoutKotaInput
    upsert?: provinsiUpsertWithoutKotaInput
    disconnect?: provinsiWhereInput | boolean
    delete?: provinsiWhereInput | boolean
    connect?: provinsiWhereUniqueInput
    update?: XOR<XOR<provinsiUpdateToOneWithWhereWithoutKotaInput, provinsiUpdateWithoutKotaInput>, provinsiUncheckedUpdateWithoutKotaInput>
  }

  export type standardUpdateManyWithoutKota_asalNestedInput = {
    create?: XOR<standardCreateWithoutKota_asalInput, standardUncheckedCreateWithoutKota_asalInput> | standardCreateWithoutKota_asalInput[] | standardUncheckedCreateWithoutKota_asalInput[]
    connectOrCreate?: standardCreateOrConnectWithoutKota_asalInput | standardCreateOrConnectWithoutKota_asalInput[]
    upsert?: standardUpsertWithWhereUniqueWithoutKota_asalInput | standardUpsertWithWhereUniqueWithoutKota_asalInput[]
    createMany?: standardCreateManyKota_asalInputEnvelope
    set?: standardWhereUniqueInput | standardWhereUniqueInput[]
    disconnect?: standardWhereUniqueInput | standardWhereUniqueInput[]
    delete?: standardWhereUniqueInput | standardWhereUniqueInput[]
    connect?: standardWhereUniqueInput | standardWhereUniqueInput[]
    update?: standardUpdateWithWhereUniqueWithoutKota_asalInput | standardUpdateWithWhereUniqueWithoutKota_asalInput[]
    updateMany?: standardUpdateManyWithWhereWithoutKota_asalInput | standardUpdateManyWithWhereWithoutKota_asalInput[]
    deleteMany?: standardScalarWhereInput | standardScalarWhereInput[]
  }

  export type standardUpdateManyWithoutKota_tujuanNestedInput = {
    create?: XOR<standardCreateWithoutKota_tujuanInput, standardUncheckedCreateWithoutKota_tujuanInput> | standardCreateWithoutKota_tujuanInput[] | standardUncheckedCreateWithoutKota_tujuanInput[]
    connectOrCreate?: standardCreateOrConnectWithoutKota_tujuanInput | standardCreateOrConnectWithoutKota_tujuanInput[]
    upsert?: standardUpsertWithWhereUniqueWithoutKota_tujuanInput | standardUpsertWithWhereUniqueWithoutKota_tujuanInput[]
    createMany?: standardCreateManyKota_tujuanInputEnvelope
    set?: standardWhereUniqueInput | standardWhereUniqueInput[]
    disconnect?: standardWhereUniqueInput | standardWhereUniqueInput[]
    delete?: standardWhereUniqueInput | standardWhereUniqueInput[]
    connect?: standardWhereUniqueInput | standardWhereUniqueInput[]
    update?: standardUpdateWithWhereUniqueWithoutKota_tujuanInput | standardUpdateWithWhereUniqueWithoutKota_tujuanInput[]
    updateMany?: standardUpdateManyWithWhereWithoutKota_tujuanInput | standardUpdateManyWithWhereWithoutKota_tujuanInput[]
    deleteMany?: standardScalarWhereInput | standardScalarWhereInput[]
  }

  export type sptUncheckedUpdateManyWithoutKota_asalNestedInput = {
    create?: XOR<sptCreateWithoutKota_asalInput, sptUncheckedCreateWithoutKota_asalInput> | sptCreateWithoutKota_asalInput[] | sptUncheckedCreateWithoutKota_asalInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKota_asalInput | sptCreateOrConnectWithoutKota_asalInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutKota_asalInput | sptUpsertWithWhereUniqueWithoutKota_asalInput[]
    createMany?: sptCreateManyKota_asalInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutKota_asalInput | sptUpdateWithWhereUniqueWithoutKota_asalInput[]
    updateMany?: sptUpdateManyWithWhereWithoutKota_asalInput | sptUpdateManyWithWhereWithoutKota_asalInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type sptUncheckedUpdateManyWithoutKota_tujuanNestedInput = {
    create?: XOR<sptCreateWithoutKota_tujuanInput, sptUncheckedCreateWithoutKota_tujuanInput> | sptCreateWithoutKota_tujuanInput[] | sptUncheckedCreateWithoutKota_tujuanInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKota_tujuanInput | sptCreateOrConnectWithoutKota_tujuanInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutKota_tujuanInput | sptUpsertWithWhereUniqueWithoutKota_tujuanInput[]
    createMany?: sptCreateManyKota_tujuanInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutKota_tujuanInput | sptUpdateWithWhereUniqueWithoutKota_tujuanInput[]
    updateMany?: sptUpdateManyWithWhereWithoutKota_tujuanInput | sptUpdateManyWithWhereWithoutKota_tujuanInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type sptUncheckedUpdateManyWithoutKota_tujuan2NestedInput = {
    create?: XOR<sptCreateWithoutKota_tujuan2Input, sptUncheckedCreateWithoutKota_tujuan2Input> | sptCreateWithoutKota_tujuan2Input[] | sptUncheckedCreateWithoutKota_tujuan2Input[]
    connectOrCreate?: sptCreateOrConnectWithoutKota_tujuan2Input | sptCreateOrConnectWithoutKota_tujuan2Input[]
    upsert?: sptUpsertWithWhereUniqueWithoutKota_tujuan2Input | sptUpsertWithWhereUniqueWithoutKota_tujuan2Input[]
    createMany?: sptCreateManyKota_tujuan2InputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutKota_tujuan2Input | sptUpdateWithWhereUniqueWithoutKota_tujuan2Input[]
    updateMany?: sptUpdateManyWithWhereWithoutKota_tujuan2Input | sptUpdateManyWithWhereWithoutKota_tujuan2Input[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type sptUncheckedUpdateManyWithoutKotaNestedInput = {
    create?: XOR<sptCreateWithoutKotaInput, sptUncheckedCreateWithoutKotaInput> | sptCreateWithoutKotaInput[] | sptUncheckedCreateWithoutKotaInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKotaInput | sptCreateOrConnectWithoutKotaInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutKotaInput | sptUpsertWithWhereUniqueWithoutKotaInput[]
    createMany?: sptCreateManyKotaInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutKotaInput | sptUpdateWithWhereUniqueWithoutKotaInput[]
    updateMany?: sptUpdateManyWithWhereWithoutKotaInput | sptUpdateManyWithWhereWithoutKotaInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type standardUncheckedUpdateManyWithoutKota_asalNestedInput = {
    create?: XOR<standardCreateWithoutKota_asalInput, standardUncheckedCreateWithoutKota_asalInput> | standardCreateWithoutKota_asalInput[] | standardUncheckedCreateWithoutKota_asalInput[]
    connectOrCreate?: standardCreateOrConnectWithoutKota_asalInput | standardCreateOrConnectWithoutKota_asalInput[]
    upsert?: standardUpsertWithWhereUniqueWithoutKota_asalInput | standardUpsertWithWhereUniqueWithoutKota_asalInput[]
    createMany?: standardCreateManyKota_asalInputEnvelope
    set?: standardWhereUniqueInput | standardWhereUniqueInput[]
    disconnect?: standardWhereUniqueInput | standardWhereUniqueInput[]
    delete?: standardWhereUniqueInput | standardWhereUniqueInput[]
    connect?: standardWhereUniqueInput | standardWhereUniqueInput[]
    update?: standardUpdateWithWhereUniqueWithoutKota_asalInput | standardUpdateWithWhereUniqueWithoutKota_asalInput[]
    updateMany?: standardUpdateManyWithWhereWithoutKota_asalInput | standardUpdateManyWithWhereWithoutKota_asalInput[]
    deleteMany?: standardScalarWhereInput | standardScalarWhereInput[]
  }

  export type standardUncheckedUpdateManyWithoutKota_tujuanNestedInput = {
    create?: XOR<standardCreateWithoutKota_tujuanInput, standardUncheckedCreateWithoutKota_tujuanInput> | standardCreateWithoutKota_tujuanInput[] | standardUncheckedCreateWithoutKota_tujuanInput[]
    connectOrCreate?: standardCreateOrConnectWithoutKota_tujuanInput | standardCreateOrConnectWithoutKota_tujuanInput[]
    upsert?: standardUpsertWithWhereUniqueWithoutKota_tujuanInput | standardUpsertWithWhereUniqueWithoutKota_tujuanInput[]
    createMany?: standardCreateManyKota_tujuanInputEnvelope
    set?: standardWhereUniqueInput | standardWhereUniqueInput[]
    disconnect?: standardWhereUniqueInput | standardWhereUniqueInput[]
    delete?: standardWhereUniqueInput | standardWhereUniqueInput[]
    connect?: standardWhereUniqueInput | standardWhereUniqueInput[]
    update?: standardUpdateWithWhereUniqueWithoutKota_tujuanInput | standardUpdateWithWhereUniqueWithoutKota_tujuanInput[]
    updateMany?: standardUpdateManyWithWhereWithoutKota_tujuanInput | standardUpdateManyWithWhereWithoutKota_tujuanInput[]
    deleteMany?: standardScalarWhereInput | standardScalarWhereInput[]
  }

  export type spt_pegawaiCreateNestedOneWithoutLaporanInput = {
    create?: XOR<spt_pegawaiCreateWithoutLaporanInput, spt_pegawaiUncheckedCreateWithoutLaporanInput>
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutLaporanInput
    connect?: spt_pegawaiWhereUniqueInput
  }

  export type spt_pegawaiUpdateOneRequiredWithoutLaporanNestedInput = {
    create?: XOR<spt_pegawaiCreateWithoutLaporanInput, spt_pegawaiUncheckedCreateWithoutLaporanInput>
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutLaporanInput
    upsert?: spt_pegawaiUpsertWithoutLaporanInput
    connect?: spt_pegawaiWhereUniqueInput
    update?: XOR<XOR<spt_pegawaiUpdateToOneWithWhereWithoutLaporanInput, spt_pegawaiUpdateWithoutLaporanInput>, spt_pegawaiUncheckedUpdateWithoutLaporanInput>
  }

  export type opdCreateNestedOneWithoutSettingInput = {
    create?: XOR<opdCreateWithoutSettingInput, opdUncheckedCreateWithoutSettingInput>
    connectOrCreate?: opdCreateOrConnectWithoutSettingInput
    connect?: opdWhereUniqueInput
  }

  export type opdUpdateOneRequiredWithoutSettingNestedInput = {
    create?: XOR<opdCreateWithoutSettingInput, opdUncheckedCreateWithoutSettingInput>
    connectOrCreate?: opdCreateOrConnectWithoutSettingInput
    upsert?: opdUpsertWithoutSettingInput
    connect?: opdWhereUniqueInput
    update?: XOR<XOR<opdUpdateToOneWithWhereWithoutSettingInput, opdUpdateWithoutSettingInput>, opdUncheckedUpdateWithoutSettingInput>
  }

  export type sumberdanaCreateNestedManyWithoutKegiatanInput = {
    create?: XOR<sumberdanaCreateWithoutKegiatanInput, sumberdanaUncheckedCreateWithoutKegiatanInput> | sumberdanaCreateWithoutKegiatanInput[] | sumberdanaUncheckedCreateWithoutKegiatanInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutKegiatanInput | sumberdanaCreateOrConnectWithoutKegiatanInput[]
    createMany?: sumberdanaCreateManyKegiatanInputEnvelope
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
  }

  export type sptCreateNestedManyWithoutKegiatanInput = {
    create?: XOR<sptCreateWithoutKegiatanInput, sptUncheckedCreateWithoutKegiatanInput> | sptCreateWithoutKegiatanInput[] | sptUncheckedCreateWithoutKegiatanInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKegiatanInput | sptCreateOrConnectWithoutKegiatanInput[]
    createMany?: sptCreateManyKegiatanInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type opdCreateNestedOneWithoutKegiatanInput = {
    create?: XOR<opdCreateWithoutKegiatanInput, opdUncheckedCreateWithoutKegiatanInput>
    connectOrCreate?: opdCreateOrConnectWithoutKegiatanInput
    connect?: opdWhereUniqueInput
  }

  export type sumberdanaUncheckedCreateNestedManyWithoutKegiatanInput = {
    create?: XOR<sumberdanaCreateWithoutKegiatanInput, sumberdanaUncheckedCreateWithoutKegiatanInput> | sumberdanaCreateWithoutKegiatanInput[] | sumberdanaUncheckedCreateWithoutKegiatanInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutKegiatanInput | sumberdanaCreateOrConnectWithoutKegiatanInput[]
    createMany?: sumberdanaCreateManyKegiatanInputEnvelope
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
  }

  export type sptUncheckedCreateNestedManyWithoutKegiatanInput = {
    create?: XOR<sptCreateWithoutKegiatanInput, sptUncheckedCreateWithoutKegiatanInput> | sptCreateWithoutKegiatanInput[] | sptUncheckedCreateWithoutKegiatanInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKegiatanInput | sptCreateOrConnectWithoutKegiatanInput[]
    createMany?: sptCreateManyKegiatanInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type sumberdanaUpdateManyWithoutKegiatanNestedInput = {
    create?: XOR<sumberdanaCreateWithoutKegiatanInput, sumberdanaUncheckedCreateWithoutKegiatanInput> | sumberdanaCreateWithoutKegiatanInput[] | sumberdanaUncheckedCreateWithoutKegiatanInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutKegiatanInput | sumberdanaCreateOrConnectWithoutKegiatanInput[]
    upsert?: sumberdanaUpsertWithWhereUniqueWithoutKegiatanInput | sumberdanaUpsertWithWhereUniqueWithoutKegiatanInput[]
    createMany?: sumberdanaCreateManyKegiatanInputEnvelope
    set?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    disconnect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    delete?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    update?: sumberdanaUpdateWithWhereUniqueWithoutKegiatanInput | sumberdanaUpdateWithWhereUniqueWithoutKegiatanInput[]
    updateMany?: sumberdanaUpdateManyWithWhereWithoutKegiatanInput | sumberdanaUpdateManyWithWhereWithoutKegiatanInput[]
    deleteMany?: sumberdanaScalarWhereInput | sumberdanaScalarWhereInput[]
  }

  export type sptUpdateManyWithoutKegiatanNestedInput = {
    create?: XOR<sptCreateWithoutKegiatanInput, sptUncheckedCreateWithoutKegiatanInput> | sptCreateWithoutKegiatanInput[] | sptUncheckedCreateWithoutKegiatanInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKegiatanInput | sptCreateOrConnectWithoutKegiatanInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutKegiatanInput | sptUpsertWithWhereUniqueWithoutKegiatanInput[]
    createMany?: sptCreateManyKegiatanInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutKegiatanInput | sptUpdateWithWhereUniqueWithoutKegiatanInput[]
    updateMany?: sptUpdateManyWithWhereWithoutKegiatanInput | sptUpdateManyWithWhereWithoutKegiatanInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type opdUpdateOneRequiredWithoutKegiatanNestedInput = {
    create?: XOR<opdCreateWithoutKegiatanInput, opdUncheckedCreateWithoutKegiatanInput>
    connectOrCreate?: opdCreateOrConnectWithoutKegiatanInput
    upsert?: opdUpsertWithoutKegiatanInput
    connect?: opdWhereUniqueInput
    update?: XOR<XOR<opdUpdateToOneWithWhereWithoutKegiatanInput, opdUpdateWithoutKegiatanInput>, opdUncheckedUpdateWithoutKegiatanInput>
  }

  export type sumberdanaUncheckedUpdateManyWithoutKegiatanNestedInput = {
    create?: XOR<sumberdanaCreateWithoutKegiatanInput, sumberdanaUncheckedCreateWithoutKegiatanInput> | sumberdanaCreateWithoutKegiatanInput[] | sumberdanaUncheckedCreateWithoutKegiatanInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutKegiatanInput | sumberdanaCreateOrConnectWithoutKegiatanInput[]
    upsert?: sumberdanaUpsertWithWhereUniqueWithoutKegiatanInput | sumberdanaUpsertWithWhereUniqueWithoutKegiatanInput[]
    createMany?: sumberdanaCreateManyKegiatanInputEnvelope
    set?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    disconnect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    delete?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    update?: sumberdanaUpdateWithWhereUniqueWithoutKegiatanInput | sumberdanaUpdateWithWhereUniqueWithoutKegiatanInput[]
    updateMany?: sumberdanaUpdateManyWithWhereWithoutKegiatanInput | sumberdanaUpdateManyWithWhereWithoutKegiatanInput[]
    deleteMany?: sumberdanaScalarWhereInput | sumberdanaScalarWhereInput[]
  }

  export type sptUncheckedUpdateManyWithoutKegiatanNestedInput = {
    create?: XOR<sptCreateWithoutKegiatanInput, sptUncheckedCreateWithoutKegiatanInput> | sptCreateWithoutKegiatanInput[] | sptUncheckedCreateWithoutKegiatanInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKegiatanInput | sptCreateOrConnectWithoutKegiatanInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutKegiatanInput | sptUpsertWithWhereUniqueWithoutKegiatanInput[]
    createMany?: sptCreateManyKegiatanInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutKegiatanInput | sptUpdateWithWhereUniqueWithoutKegiatanInput[]
    updateMany?: sptUpdateManyWithWhereWithoutKegiatanInput | sptUpdateManyWithWhereWithoutKegiatanInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type opdCreateNestedOneWithoutSumberdanaInput = {
    create?: XOR<opdCreateWithoutSumberdanaInput, opdUncheckedCreateWithoutSumberdanaInput>
    connectOrCreate?: opdCreateOrConnectWithoutSumberdanaInput
    connect?: opdWhereUniqueInput
  }

  export type kegiatanCreateNestedOneWithoutSumberdanaInput = {
    create?: XOR<kegiatanCreateWithoutSumberdanaInput, kegiatanUncheckedCreateWithoutSumberdanaInput>
    connectOrCreate?: kegiatanCreateOrConnectWithoutSumberdanaInput
    connect?: kegiatanWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutSumberdanaInput = {
    create?: XOR<usersCreateWithoutSumberdanaInput, usersUncheckedCreateWithoutSumberdanaInput>
    connectOrCreate?: usersCreateOrConnectWithoutSumberdanaInput
    connect?: usersWhereUniqueInput
  }

  export type sptCreateNestedManyWithoutSumber_danaInput = {
    create?: XOR<sptCreateWithoutSumber_danaInput, sptUncheckedCreateWithoutSumber_danaInput> | sptCreateWithoutSumber_danaInput[] | sptUncheckedCreateWithoutSumber_danaInput[]
    connectOrCreate?: sptCreateOrConnectWithoutSumber_danaInput | sptCreateOrConnectWithoutSumber_danaInput[]
    createMany?: sptCreateManySumber_danaInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutSumberdana_bendaharaInput = {
    create?: XOR<usersCreateWithoutSumberdana_bendaharaInput, usersUncheckedCreateWithoutSumberdana_bendaharaInput>
    connectOrCreate?: usersCreateOrConnectWithoutSumberdana_bendaharaInput
    connect?: usersWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutSumberdana_paInput = {
    create?: XOR<usersCreateWithoutSumberdana_paInput, usersUncheckedCreateWithoutSumberdana_paInput>
    connectOrCreate?: usersCreateOrConnectWithoutSumberdana_paInput
    connect?: usersWhereUniqueInput
  }

  export type ttd_gajianCreateNestedManyWithoutSumberdanaInput = {
    create?: XOR<ttd_gajianCreateWithoutSumberdanaInput, ttd_gajianUncheckedCreateWithoutSumberdanaInput> | ttd_gajianCreateWithoutSumberdanaInput[] | ttd_gajianUncheckedCreateWithoutSumberdanaInput[]
    connectOrCreate?: ttd_gajianCreateOrConnectWithoutSumberdanaInput | ttd_gajianCreateOrConnectWithoutSumberdanaInput[]
    createMany?: ttd_gajianCreateManySumberdanaInputEnvelope
    connect?: ttd_gajianWhereUniqueInput | ttd_gajianWhereUniqueInput[]
  }

  export type sptUncheckedCreateNestedManyWithoutSumber_danaInput = {
    create?: XOR<sptCreateWithoutSumber_danaInput, sptUncheckedCreateWithoutSumber_danaInput> | sptCreateWithoutSumber_danaInput[] | sptUncheckedCreateWithoutSumber_danaInput[]
    connectOrCreate?: sptCreateOrConnectWithoutSumber_danaInput | sptCreateOrConnectWithoutSumber_danaInput[]
    createMany?: sptCreateManySumber_danaInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type ttd_gajianUncheckedCreateNestedManyWithoutSumberdanaInput = {
    create?: XOR<ttd_gajianCreateWithoutSumberdanaInput, ttd_gajianUncheckedCreateWithoutSumberdanaInput> | ttd_gajianCreateWithoutSumberdanaInput[] | ttd_gajianUncheckedCreateWithoutSumberdanaInput[]
    connectOrCreate?: ttd_gajianCreateOrConnectWithoutSumberdanaInput | ttd_gajianCreateOrConnectWithoutSumberdanaInput[]
    createMany?: ttd_gajianCreateManySumberdanaInputEnvelope
    connect?: ttd_gajianWhereUniqueInput | ttd_gajianWhereUniqueInput[]
  }

  export type opdUpdateOneRequiredWithoutSumberdanaNestedInput = {
    create?: XOR<opdCreateWithoutSumberdanaInput, opdUncheckedCreateWithoutSumberdanaInput>
    connectOrCreate?: opdCreateOrConnectWithoutSumberdanaInput
    upsert?: opdUpsertWithoutSumberdanaInput
    connect?: opdWhereUniqueInput
    update?: XOR<XOR<opdUpdateToOneWithWhereWithoutSumberdanaInput, opdUpdateWithoutSumberdanaInput>, opdUncheckedUpdateWithoutSumberdanaInput>
  }

  export type kegiatanUpdateOneRequiredWithoutSumberdanaNestedInput = {
    create?: XOR<kegiatanCreateWithoutSumberdanaInput, kegiatanUncheckedCreateWithoutSumberdanaInput>
    connectOrCreate?: kegiatanCreateOrConnectWithoutSumberdanaInput
    upsert?: kegiatanUpsertWithoutSumberdanaInput
    connect?: kegiatanWhereUniqueInput
    update?: XOR<XOR<kegiatanUpdateToOneWithWhereWithoutSumberdanaInput, kegiatanUpdateWithoutSumberdanaInput>, kegiatanUncheckedUpdateWithoutSumberdanaInput>
  }

  export type usersUpdateOneRequiredWithoutSumberdanaNestedInput = {
    create?: XOR<usersCreateWithoutSumberdanaInput, usersUncheckedCreateWithoutSumberdanaInput>
    connectOrCreate?: usersCreateOrConnectWithoutSumberdanaInput
    upsert?: usersUpsertWithoutSumberdanaInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutSumberdanaInput, usersUpdateWithoutSumberdanaInput>, usersUncheckedUpdateWithoutSumberdanaInput>
  }

  export type sptUpdateManyWithoutSumber_danaNestedInput = {
    create?: XOR<sptCreateWithoutSumber_danaInput, sptUncheckedCreateWithoutSumber_danaInput> | sptCreateWithoutSumber_danaInput[] | sptUncheckedCreateWithoutSumber_danaInput[]
    connectOrCreate?: sptCreateOrConnectWithoutSumber_danaInput | sptCreateOrConnectWithoutSumber_danaInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutSumber_danaInput | sptUpsertWithWhereUniqueWithoutSumber_danaInput[]
    createMany?: sptCreateManySumber_danaInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutSumber_danaInput | sptUpdateWithWhereUniqueWithoutSumber_danaInput[]
    updateMany?: sptUpdateManyWithWhereWithoutSumber_danaInput | sptUpdateManyWithWhereWithoutSumber_danaInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutSumberdana_bendaharaNestedInput = {
    create?: XOR<usersCreateWithoutSumberdana_bendaharaInput, usersUncheckedCreateWithoutSumberdana_bendaharaInput>
    connectOrCreate?: usersCreateOrConnectWithoutSumberdana_bendaharaInput
    upsert?: usersUpsertWithoutSumberdana_bendaharaInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutSumberdana_bendaharaInput, usersUpdateWithoutSumberdana_bendaharaInput>, usersUncheckedUpdateWithoutSumberdana_bendaharaInput>
  }

  export type usersUpdateOneRequiredWithoutSumberdana_paNestedInput = {
    create?: XOR<usersCreateWithoutSumberdana_paInput, usersUncheckedCreateWithoutSumberdana_paInput>
    connectOrCreate?: usersCreateOrConnectWithoutSumberdana_paInput
    upsert?: usersUpsertWithoutSumberdana_paInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutSumberdana_paInput, usersUpdateWithoutSumberdana_paInput>, usersUncheckedUpdateWithoutSumberdana_paInput>
  }

  export type ttd_gajianUpdateManyWithoutSumberdanaNestedInput = {
    create?: XOR<ttd_gajianCreateWithoutSumberdanaInput, ttd_gajianUncheckedCreateWithoutSumberdanaInput> | ttd_gajianCreateWithoutSumberdanaInput[] | ttd_gajianUncheckedCreateWithoutSumberdanaInput[]
    connectOrCreate?: ttd_gajianCreateOrConnectWithoutSumberdanaInput | ttd_gajianCreateOrConnectWithoutSumberdanaInput[]
    upsert?: ttd_gajianUpsertWithWhereUniqueWithoutSumberdanaInput | ttd_gajianUpsertWithWhereUniqueWithoutSumberdanaInput[]
    createMany?: ttd_gajianCreateManySumberdanaInputEnvelope
    set?: ttd_gajianWhereUniqueInput | ttd_gajianWhereUniqueInput[]
    disconnect?: ttd_gajianWhereUniqueInput | ttd_gajianWhereUniqueInput[]
    delete?: ttd_gajianWhereUniqueInput | ttd_gajianWhereUniqueInput[]
    connect?: ttd_gajianWhereUniqueInput | ttd_gajianWhereUniqueInput[]
    update?: ttd_gajianUpdateWithWhereUniqueWithoutSumberdanaInput | ttd_gajianUpdateWithWhereUniqueWithoutSumberdanaInput[]
    updateMany?: ttd_gajianUpdateManyWithWhereWithoutSumberdanaInput | ttd_gajianUpdateManyWithWhereWithoutSumberdanaInput[]
    deleteMany?: ttd_gajianScalarWhereInput | ttd_gajianScalarWhereInput[]
  }

  export type sptUncheckedUpdateManyWithoutSumber_danaNestedInput = {
    create?: XOR<sptCreateWithoutSumber_danaInput, sptUncheckedCreateWithoutSumber_danaInput> | sptCreateWithoutSumber_danaInput[] | sptUncheckedCreateWithoutSumber_danaInput[]
    connectOrCreate?: sptCreateOrConnectWithoutSumber_danaInput | sptCreateOrConnectWithoutSumber_danaInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutSumber_danaInput | sptUpsertWithWhereUniqueWithoutSumber_danaInput[]
    createMany?: sptCreateManySumber_danaInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutSumber_danaInput | sptUpdateWithWhereUniqueWithoutSumber_danaInput[]
    updateMany?: sptUpdateManyWithWhereWithoutSumber_danaInput | sptUpdateManyWithWhereWithoutSumber_danaInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type ttd_gajianUncheckedUpdateManyWithoutSumberdanaNestedInput = {
    create?: XOR<ttd_gajianCreateWithoutSumberdanaInput, ttd_gajianUncheckedCreateWithoutSumberdanaInput> | ttd_gajianCreateWithoutSumberdanaInput[] | ttd_gajianUncheckedCreateWithoutSumberdanaInput[]
    connectOrCreate?: ttd_gajianCreateOrConnectWithoutSumberdanaInput | ttd_gajianCreateOrConnectWithoutSumberdanaInput[]
    upsert?: ttd_gajianUpsertWithWhereUniqueWithoutSumberdanaInput | ttd_gajianUpsertWithWhereUniqueWithoutSumberdanaInput[]
    createMany?: ttd_gajianCreateManySumberdanaInputEnvelope
    set?: ttd_gajianWhereUniqueInput | ttd_gajianWhereUniqueInput[]
    disconnect?: ttd_gajianWhereUniqueInput | ttd_gajianWhereUniqueInput[]
    delete?: ttd_gajianWhereUniqueInput | ttd_gajianWhereUniqueInput[]
    connect?: ttd_gajianWhereUniqueInput | ttd_gajianWhereUniqueInput[]
    update?: ttd_gajianUpdateWithWhereUniqueWithoutSumberdanaInput | ttd_gajianUpdateWithWhereUniqueWithoutSumberdanaInput[]
    updateMany?: ttd_gajianUpdateManyWithWhereWithoutSumberdanaInput | ttd_gajianUpdateManyWithWhereWithoutSumberdanaInput[]
    deleteMany?: ttd_gajianScalarWhereInput | ttd_gajianScalarWhereInput[]
  }

  export type usersCreateNestedManyWithoutOpdInput = {
    create?: XOR<usersCreateWithoutOpdInput, usersUncheckedCreateWithoutOpdInput> | usersCreateWithoutOpdInput[] | usersUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: usersCreateOrConnectWithoutOpdInput | usersCreateOrConnectWithoutOpdInput[]
    createMany?: usersCreateManyOpdInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type sptCreateNestedManyWithoutOpdInput = {
    create?: XOR<sptCreateWithoutOpdInput, sptUncheckedCreateWithoutOpdInput> | sptCreateWithoutOpdInput[] | sptUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: sptCreateOrConnectWithoutOpdInput | sptCreateOrConnectWithoutOpdInput[]
    createMany?: sptCreateManyOpdInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type settingCreateNestedManyWithoutOpdInput = {
    create?: XOR<settingCreateWithoutOpdInput, settingUncheckedCreateWithoutOpdInput> | settingCreateWithoutOpdInput[] | settingUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: settingCreateOrConnectWithoutOpdInput | settingCreateOrConnectWithoutOpdInput[]
    createMany?: settingCreateManyOpdInputEnvelope
    connect?: settingWhereUniqueInput | settingWhereUniqueInput[]
  }

  export type sumberdanaCreateNestedManyWithoutOpdInput = {
    create?: XOR<sumberdanaCreateWithoutOpdInput, sumberdanaUncheckedCreateWithoutOpdInput> | sumberdanaCreateWithoutOpdInput[] | sumberdanaUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutOpdInput | sumberdanaCreateOrConnectWithoutOpdInput[]
    createMany?: sumberdanaCreateManyOpdInputEnvelope
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
  }

  export type standardCreateNestedManyWithoutOpdInput = {
    create?: XOR<standardCreateWithoutOpdInput, standardUncheckedCreateWithoutOpdInput> | standardCreateWithoutOpdInput[] | standardUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: standardCreateOrConnectWithoutOpdInput | standardCreateOrConnectWithoutOpdInput[]
    createMany?: standardCreateManyOpdInputEnvelope
    connect?: standardWhereUniqueInput | standardWhereUniqueInput[]
  }

  export type kegiatanCreateNestedManyWithoutOpdInput = {
    create?: XOR<kegiatanCreateWithoutOpdInput, kegiatanUncheckedCreateWithoutOpdInput> | kegiatanCreateWithoutOpdInput[] | kegiatanUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: kegiatanCreateOrConnectWithoutOpdInput | kegiatanCreateOrConnectWithoutOpdInput[]
    createMany?: kegiatanCreateManyOpdInputEnvelope
    connect?: kegiatanWhereUniqueInput | kegiatanWhereUniqueInput[]
  }

  export type usersUncheckedCreateNestedManyWithoutOpdInput = {
    create?: XOR<usersCreateWithoutOpdInput, usersUncheckedCreateWithoutOpdInput> | usersCreateWithoutOpdInput[] | usersUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: usersCreateOrConnectWithoutOpdInput | usersCreateOrConnectWithoutOpdInput[]
    createMany?: usersCreateManyOpdInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type sptUncheckedCreateNestedManyWithoutOpdInput = {
    create?: XOR<sptCreateWithoutOpdInput, sptUncheckedCreateWithoutOpdInput> | sptCreateWithoutOpdInput[] | sptUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: sptCreateOrConnectWithoutOpdInput | sptCreateOrConnectWithoutOpdInput[]
    createMany?: sptCreateManyOpdInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type settingUncheckedCreateNestedManyWithoutOpdInput = {
    create?: XOR<settingCreateWithoutOpdInput, settingUncheckedCreateWithoutOpdInput> | settingCreateWithoutOpdInput[] | settingUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: settingCreateOrConnectWithoutOpdInput | settingCreateOrConnectWithoutOpdInput[]
    createMany?: settingCreateManyOpdInputEnvelope
    connect?: settingWhereUniqueInput | settingWhereUniqueInput[]
  }

  export type sumberdanaUncheckedCreateNestedManyWithoutOpdInput = {
    create?: XOR<sumberdanaCreateWithoutOpdInput, sumberdanaUncheckedCreateWithoutOpdInput> | sumberdanaCreateWithoutOpdInput[] | sumberdanaUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutOpdInput | sumberdanaCreateOrConnectWithoutOpdInput[]
    createMany?: sumberdanaCreateManyOpdInputEnvelope
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
  }

  export type standardUncheckedCreateNestedManyWithoutOpdInput = {
    create?: XOR<standardCreateWithoutOpdInput, standardUncheckedCreateWithoutOpdInput> | standardCreateWithoutOpdInput[] | standardUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: standardCreateOrConnectWithoutOpdInput | standardCreateOrConnectWithoutOpdInput[]
    createMany?: standardCreateManyOpdInputEnvelope
    connect?: standardWhereUniqueInput | standardWhereUniqueInput[]
  }

  export type kegiatanUncheckedCreateNestedManyWithoutOpdInput = {
    create?: XOR<kegiatanCreateWithoutOpdInput, kegiatanUncheckedCreateWithoutOpdInput> | kegiatanCreateWithoutOpdInput[] | kegiatanUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: kegiatanCreateOrConnectWithoutOpdInput | kegiatanCreateOrConnectWithoutOpdInput[]
    createMany?: kegiatanCreateManyOpdInputEnvelope
    connect?: kegiatanWhereUniqueInput | kegiatanWhereUniqueInput[]
  }

  export type usersUpdateManyWithoutOpdNestedInput = {
    create?: XOR<usersCreateWithoutOpdInput, usersUncheckedCreateWithoutOpdInput> | usersCreateWithoutOpdInput[] | usersUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: usersCreateOrConnectWithoutOpdInput | usersCreateOrConnectWithoutOpdInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutOpdInput | usersUpsertWithWhereUniqueWithoutOpdInput[]
    createMany?: usersCreateManyOpdInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutOpdInput | usersUpdateWithWhereUniqueWithoutOpdInput[]
    updateMany?: usersUpdateManyWithWhereWithoutOpdInput | usersUpdateManyWithWhereWithoutOpdInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type sptUpdateManyWithoutOpdNestedInput = {
    create?: XOR<sptCreateWithoutOpdInput, sptUncheckedCreateWithoutOpdInput> | sptCreateWithoutOpdInput[] | sptUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: sptCreateOrConnectWithoutOpdInput | sptCreateOrConnectWithoutOpdInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutOpdInput | sptUpsertWithWhereUniqueWithoutOpdInput[]
    createMany?: sptCreateManyOpdInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutOpdInput | sptUpdateWithWhereUniqueWithoutOpdInput[]
    updateMany?: sptUpdateManyWithWhereWithoutOpdInput | sptUpdateManyWithWhereWithoutOpdInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type settingUpdateManyWithoutOpdNestedInput = {
    create?: XOR<settingCreateWithoutOpdInput, settingUncheckedCreateWithoutOpdInput> | settingCreateWithoutOpdInput[] | settingUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: settingCreateOrConnectWithoutOpdInput | settingCreateOrConnectWithoutOpdInput[]
    upsert?: settingUpsertWithWhereUniqueWithoutOpdInput | settingUpsertWithWhereUniqueWithoutOpdInput[]
    createMany?: settingCreateManyOpdInputEnvelope
    set?: settingWhereUniqueInput | settingWhereUniqueInput[]
    disconnect?: settingWhereUniqueInput | settingWhereUniqueInput[]
    delete?: settingWhereUniqueInput | settingWhereUniqueInput[]
    connect?: settingWhereUniqueInput | settingWhereUniqueInput[]
    update?: settingUpdateWithWhereUniqueWithoutOpdInput | settingUpdateWithWhereUniqueWithoutOpdInput[]
    updateMany?: settingUpdateManyWithWhereWithoutOpdInput | settingUpdateManyWithWhereWithoutOpdInput[]
    deleteMany?: settingScalarWhereInput | settingScalarWhereInput[]
  }

  export type sumberdanaUpdateManyWithoutOpdNestedInput = {
    create?: XOR<sumberdanaCreateWithoutOpdInput, sumberdanaUncheckedCreateWithoutOpdInput> | sumberdanaCreateWithoutOpdInput[] | sumberdanaUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutOpdInput | sumberdanaCreateOrConnectWithoutOpdInput[]
    upsert?: sumberdanaUpsertWithWhereUniqueWithoutOpdInput | sumberdanaUpsertWithWhereUniqueWithoutOpdInput[]
    createMany?: sumberdanaCreateManyOpdInputEnvelope
    set?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    disconnect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    delete?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    update?: sumberdanaUpdateWithWhereUniqueWithoutOpdInput | sumberdanaUpdateWithWhereUniqueWithoutOpdInput[]
    updateMany?: sumberdanaUpdateManyWithWhereWithoutOpdInput | sumberdanaUpdateManyWithWhereWithoutOpdInput[]
    deleteMany?: sumberdanaScalarWhereInput | sumberdanaScalarWhereInput[]
  }

  export type standardUpdateManyWithoutOpdNestedInput = {
    create?: XOR<standardCreateWithoutOpdInput, standardUncheckedCreateWithoutOpdInput> | standardCreateWithoutOpdInput[] | standardUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: standardCreateOrConnectWithoutOpdInput | standardCreateOrConnectWithoutOpdInput[]
    upsert?: standardUpsertWithWhereUniqueWithoutOpdInput | standardUpsertWithWhereUniqueWithoutOpdInput[]
    createMany?: standardCreateManyOpdInputEnvelope
    set?: standardWhereUniqueInput | standardWhereUniqueInput[]
    disconnect?: standardWhereUniqueInput | standardWhereUniqueInput[]
    delete?: standardWhereUniqueInput | standardWhereUniqueInput[]
    connect?: standardWhereUniqueInput | standardWhereUniqueInput[]
    update?: standardUpdateWithWhereUniqueWithoutOpdInput | standardUpdateWithWhereUniqueWithoutOpdInput[]
    updateMany?: standardUpdateManyWithWhereWithoutOpdInput | standardUpdateManyWithWhereWithoutOpdInput[]
    deleteMany?: standardScalarWhereInput | standardScalarWhereInput[]
  }

  export type kegiatanUpdateManyWithoutOpdNestedInput = {
    create?: XOR<kegiatanCreateWithoutOpdInput, kegiatanUncheckedCreateWithoutOpdInput> | kegiatanCreateWithoutOpdInput[] | kegiatanUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: kegiatanCreateOrConnectWithoutOpdInput | kegiatanCreateOrConnectWithoutOpdInput[]
    upsert?: kegiatanUpsertWithWhereUniqueWithoutOpdInput | kegiatanUpsertWithWhereUniqueWithoutOpdInput[]
    createMany?: kegiatanCreateManyOpdInputEnvelope
    set?: kegiatanWhereUniqueInput | kegiatanWhereUniqueInput[]
    disconnect?: kegiatanWhereUniqueInput | kegiatanWhereUniqueInput[]
    delete?: kegiatanWhereUniqueInput | kegiatanWhereUniqueInput[]
    connect?: kegiatanWhereUniqueInput | kegiatanWhereUniqueInput[]
    update?: kegiatanUpdateWithWhereUniqueWithoutOpdInput | kegiatanUpdateWithWhereUniqueWithoutOpdInput[]
    updateMany?: kegiatanUpdateManyWithWhereWithoutOpdInput | kegiatanUpdateManyWithWhereWithoutOpdInput[]
    deleteMany?: kegiatanScalarWhereInput | kegiatanScalarWhereInput[]
  }

  export type usersUncheckedUpdateManyWithoutOpdNestedInput = {
    create?: XOR<usersCreateWithoutOpdInput, usersUncheckedCreateWithoutOpdInput> | usersCreateWithoutOpdInput[] | usersUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: usersCreateOrConnectWithoutOpdInput | usersCreateOrConnectWithoutOpdInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutOpdInput | usersUpsertWithWhereUniqueWithoutOpdInput[]
    createMany?: usersCreateManyOpdInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutOpdInput | usersUpdateWithWhereUniqueWithoutOpdInput[]
    updateMany?: usersUpdateManyWithWhereWithoutOpdInput | usersUpdateManyWithWhereWithoutOpdInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type sptUncheckedUpdateManyWithoutOpdNestedInput = {
    create?: XOR<sptCreateWithoutOpdInput, sptUncheckedCreateWithoutOpdInput> | sptCreateWithoutOpdInput[] | sptUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: sptCreateOrConnectWithoutOpdInput | sptCreateOrConnectWithoutOpdInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutOpdInput | sptUpsertWithWhereUniqueWithoutOpdInput[]
    createMany?: sptCreateManyOpdInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutOpdInput | sptUpdateWithWhereUniqueWithoutOpdInput[]
    updateMany?: sptUpdateManyWithWhereWithoutOpdInput | sptUpdateManyWithWhereWithoutOpdInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type settingUncheckedUpdateManyWithoutOpdNestedInput = {
    create?: XOR<settingCreateWithoutOpdInput, settingUncheckedCreateWithoutOpdInput> | settingCreateWithoutOpdInput[] | settingUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: settingCreateOrConnectWithoutOpdInput | settingCreateOrConnectWithoutOpdInput[]
    upsert?: settingUpsertWithWhereUniqueWithoutOpdInput | settingUpsertWithWhereUniqueWithoutOpdInput[]
    createMany?: settingCreateManyOpdInputEnvelope
    set?: settingWhereUniqueInput | settingWhereUniqueInput[]
    disconnect?: settingWhereUniqueInput | settingWhereUniqueInput[]
    delete?: settingWhereUniqueInput | settingWhereUniqueInput[]
    connect?: settingWhereUniqueInput | settingWhereUniqueInput[]
    update?: settingUpdateWithWhereUniqueWithoutOpdInput | settingUpdateWithWhereUniqueWithoutOpdInput[]
    updateMany?: settingUpdateManyWithWhereWithoutOpdInput | settingUpdateManyWithWhereWithoutOpdInput[]
    deleteMany?: settingScalarWhereInput | settingScalarWhereInput[]
  }

  export type sumberdanaUncheckedUpdateManyWithoutOpdNestedInput = {
    create?: XOR<sumberdanaCreateWithoutOpdInput, sumberdanaUncheckedCreateWithoutOpdInput> | sumberdanaCreateWithoutOpdInput[] | sumberdanaUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: sumberdanaCreateOrConnectWithoutOpdInput | sumberdanaCreateOrConnectWithoutOpdInput[]
    upsert?: sumberdanaUpsertWithWhereUniqueWithoutOpdInput | sumberdanaUpsertWithWhereUniqueWithoutOpdInput[]
    createMany?: sumberdanaCreateManyOpdInputEnvelope
    set?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    disconnect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    delete?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    connect?: sumberdanaWhereUniqueInput | sumberdanaWhereUniqueInput[]
    update?: sumberdanaUpdateWithWhereUniqueWithoutOpdInput | sumberdanaUpdateWithWhereUniqueWithoutOpdInput[]
    updateMany?: sumberdanaUpdateManyWithWhereWithoutOpdInput | sumberdanaUpdateManyWithWhereWithoutOpdInput[]
    deleteMany?: sumberdanaScalarWhereInput | sumberdanaScalarWhereInput[]
  }

  export type standardUncheckedUpdateManyWithoutOpdNestedInput = {
    create?: XOR<standardCreateWithoutOpdInput, standardUncheckedCreateWithoutOpdInput> | standardCreateWithoutOpdInput[] | standardUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: standardCreateOrConnectWithoutOpdInput | standardCreateOrConnectWithoutOpdInput[]
    upsert?: standardUpsertWithWhereUniqueWithoutOpdInput | standardUpsertWithWhereUniqueWithoutOpdInput[]
    createMany?: standardCreateManyOpdInputEnvelope
    set?: standardWhereUniqueInput | standardWhereUniqueInput[]
    disconnect?: standardWhereUniqueInput | standardWhereUniqueInput[]
    delete?: standardWhereUniqueInput | standardWhereUniqueInput[]
    connect?: standardWhereUniqueInput | standardWhereUniqueInput[]
    update?: standardUpdateWithWhereUniqueWithoutOpdInput | standardUpdateWithWhereUniqueWithoutOpdInput[]
    updateMany?: standardUpdateManyWithWhereWithoutOpdInput | standardUpdateManyWithWhereWithoutOpdInput[]
    deleteMany?: standardScalarWhereInput | standardScalarWhereInput[]
  }

  export type kegiatanUncheckedUpdateManyWithoutOpdNestedInput = {
    create?: XOR<kegiatanCreateWithoutOpdInput, kegiatanUncheckedCreateWithoutOpdInput> | kegiatanCreateWithoutOpdInput[] | kegiatanUncheckedCreateWithoutOpdInput[]
    connectOrCreate?: kegiatanCreateOrConnectWithoutOpdInput | kegiatanCreateOrConnectWithoutOpdInput[]
    upsert?: kegiatanUpsertWithWhereUniqueWithoutOpdInput | kegiatanUpsertWithWhereUniqueWithoutOpdInput[]
    createMany?: kegiatanCreateManyOpdInputEnvelope
    set?: kegiatanWhereUniqueInput | kegiatanWhereUniqueInput[]
    disconnect?: kegiatanWhereUniqueInput | kegiatanWhereUniqueInput[]
    delete?: kegiatanWhereUniqueInput | kegiatanWhereUniqueInput[]
    connect?: kegiatanWhereUniqueInput | kegiatanWhereUniqueInput[]
    update?: kegiatanUpdateWithWhereUniqueWithoutOpdInput | kegiatanUpdateWithWhereUniqueWithoutOpdInput[]
    updateMany?: kegiatanUpdateManyWithWhereWithoutOpdInput | kegiatanUpdateManyWithWhereWithoutOpdInput[]
    deleteMany?: kegiatanScalarWhereInput | kegiatanScalarWhereInput[]
  }

  export type usersCreateNestedManyWithoutJabatanInput = {
    create?: XOR<usersCreateWithoutJabatanInput, usersUncheckedCreateWithoutJabatanInput> | usersCreateWithoutJabatanInput[] | usersUncheckedCreateWithoutJabatanInput[]
    connectOrCreate?: usersCreateOrConnectWithoutJabatanInput | usersCreateOrConnectWithoutJabatanInput[]
    createMany?: usersCreateManyJabatanInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type usersUncheckedCreateNestedManyWithoutJabatanInput = {
    create?: XOR<usersCreateWithoutJabatanInput, usersUncheckedCreateWithoutJabatanInput> | usersCreateWithoutJabatanInput[] | usersUncheckedCreateWithoutJabatanInput[]
    connectOrCreate?: usersCreateOrConnectWithoutJabatanInput | usersCreateOrConnectWithoutJabatanInput[]
    createMany?: usersCreateManyJabatanInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type usersUpdateManyWithoutJabatanNestedInput = {
    create?: XOR<usersCreateWithoutJabatanInput, usersUncheckedCreateWithoutJabatanInput> | usersCreateWithoutJabatanInput[] | usersUncheckedCreateWithoutJabatanInput[]
    connectOrCreate?: usersCreateOrConnectWithoutJabatanInput | usersCreateOrConnectWithoutJabatanInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutJabatanInput | usersUpsertWithWhereUniqueWithoutJabatanInput[]
    createMany?: usersCreateManyJabatanInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutJabatanInput | usersUpdateWithWhereUniqueWithoutJabatanInput[]
    updateMany?: usersUpdateManyWithWhereWithoutJabatanInput | usersUpdateManyWithWhereWithoutJabatanInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type usersUncheckedUpdateManyWithoutJabatanNestedInput = {
    create?: XOR<usersCreateWithoutJabatanInput, usersUncheckedCreateWithoutJabatanInput> | usersCreateWithoutJabatanInput[] | usersUncheckedCreateWithoutJabatanInput[]
    connectOrCreate?: usersCreateOrConnectWithoutJabatanInput | usersCreateOrConnectWithoutJabatanInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutJabatanInput | usersUpsertWithWhereUniqueWithoutJabatanInput[]
    createMany?: usersCreateManyJabatanInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutJabatanInput | usersUpdateWithWhereUniqueWithoutJabatanInput[]
    updateMany?: usersUpdateManyWithWhereWithoutJabatanInput | usersUpdateManyWithWhereWithoutJabatanInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type spt_pegawaiCreateNestedOneWithoutKwitansiInput = {
    create?: XOR<spt_pegawaiCreateWithoutKwitansiInput, spt_pegawaiUncheckedCreateWithoutKwitansiInput>
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutKwitansiInput
    connect?: spt_pegawaiWhereUniqueInput
  }

  export type spt_pegawaiUpdateOneRequiredWithoutKwitansiNestedInput = {
    create?: XOR<spt_pegawaiCreateWithoutKwitansiInput, spt_pegawaiUncheckedCreateWithoutKwitansiInput>
    connectOrCreate?: spt_pegawaiCreateOrConnectWithoutKwitansiInput
    upsert?: spt_pegawaiUpsertWithoutKwitansiInput
    connect?: spt_pegawaiWhereUniqueInput
    update?: XOR<XOR<spt_pegawaiUpdateToOneWithWhereWithoutKwitansiInput, spt_pegawaiUpdateWithoutKwitansiInput>, spt_pegawaiUncheckedUpdateWithoutKwitansiInput>
  }

  export type sptCreateNestedManyWithoutKategoriInput = {
    create?: XOR<sptCreateWithoutKategoriInput, sptUncheckedCreateWithoutKategoriInput> | sptCreateWithoutKategoriInput[] | sptUncheckedCreateWithoutKategoriInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKategoriInput | sptCreateOrConnectWithoutKategoriInput[]
    createMany?: sptCreateManyKategoriInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type sptUncheckedCreateNestedManyWithoutKategoriInput = {
    create?: XOR<sptCreateWithoutKategoriInput, sptUncheckedCreateWithoutKategoriInput> | sptCreateWithoutKategoriInput[] | sptUncheckedCreateWithoutKategoriInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKategoriInput | sptCreateOrConnectWithoutKategoriInput[]
    createMany?: sptCreateManyKategoriInputEnvelope
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
  }

  export type sptUpdateManyWithoutKategoriNestedInput = {
    create?: XOR<sptCreateWithoutKategoriInput, sptUncheckedCreateWithoutKategoriInput> | sptCreateWithoutKategoriInput[] | sptUncheckedCreateWithoutKategoriInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKategoriInput | sptCreateOrConnectWithoutKategoriInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutKategoriInput | sptUpsertWithWhereUniqueWithoutKategoriInput[]
    createMany?: sptCreateManyKategoriInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutKategoriInput | sptUpdateWithWhereUniqueWithoutKategoriInput[]
    updateMany?: sptUpdateManyWithWhereWithoutKategoriInput | sptUpdateManyWithWhereWithoutKategoriInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type sptUncheckedUpdateManyWithoutKategoriNestedInput = {
    create?: XOR<sptCreateWithoutKategoriInput, sptUncheckedCreateWithoutKategoriInput> | sptCreateWithoutKategoriInput[] | sptUncheckedCreateWithoutKategoriInput[]
    connectOrCreate?: sptCreateOrConnectWithoutKategoriInput | sptCreateOrConnectWithoutKategoriInput[]
    upsert?: sptUpsertWithWhereUniqueWithoutKategoriInput | sptUpsertWithWhereUniqueWithoutKategoriInput[]
    createMany?: sptCreateManyKategoriInputEnvelope
    set?: sptWhereUniqueInput | sptWhereUniqueInput[]
    disconnect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    delete?: sptWhereUniqueInput | sptWhereUniqueInput[]
    connect?: sptWhereUniqueInput | sptWhereUniqueInput[]
    update?: sptUpdateWithWhereUniqueWithoutKategoriInput | sptUpdateWithWhereUniqueWithoutKategoriInput[]
    updateMany?: sptUpdateManyWithWhereWithoutKategoriInput | sptUpdateManyWithWhereWithoutKategoriInput[]
    deleteMany?: sptScalarWhereInput | sptScalarWhereInput[]
  }

  export type kotaCreateNestedOneWithoutStandard_asalInput = {
    create?: XOR<kotaCreateWithoutStandard_asalInput, kotaUncheckedCreateWithoutStandard_asalInput>
    connectOrCreate?: kotaCreateOrConnectWithoutStandard_asalInput
    connect?: kotaWhereUniqueInput
  }

  export type kotaCreateNestedOneWithoutStandard_tujuanInput = {
    create?: XOR<kotaCreateWithoutStandard_tujuanInput, kotaUncheckedCreateWithoutStandard_tujuanInput>
    connectOrCreate?: kotaCreateOrConnectWithoutStandard_tujuanInput
    connect?: kotaWhereUniqueInput
  }

  export type opdCreateNestedOneWithoutStandardInput = {
    create?: XOR<opdCreateWithoutStandardInput, opdUncheckedCreateWithoutStandardInput>
    connectOrCreate?: opdCreateOrConnectWithoutStandardInput
    connect?: opdWhereUniqueInput
  }

  export type kotaUpdateOneWithoutStandard_asalNestedInput = {
    create?: XOR<kotaCreateWithoutStandard_asalInput, kotaUncheckedCreateWithoutStandard_asalInput>
    connectOrCreate?: kotaCreateOrConnectWithoutStandard_asalInput
    upsert?: kotaUpsertWithoutStandard_asalInput
    disconnect?: kotaWhereInput | boolean
    delete?: kotaWhereInput | boolean
    connect?: kotaWhereUniqueInput
    update?: XOR<XOR<kotaUpdateToOneWithWhereWithoutStandard_asalInput, kotaUpdateWithoutStandard_asalInput>, kotaUncheckedUpdateWithoutStandard_asalInput>
  }

  export type kotaUpdateOneWithoutStandard_tujuanNestedInput = {
    create?: XOR<kotaCreateWithoutStandard_tujuanInput, kotaUncheckedCreateWithoutStandard_tujuanInput>
    connectOrCreate?: kotaCreateOrConnectWithoutStandard_tujuanInput
    upsert?: kotaUpsertWithoutStandard_tujuanInput
    disconnect?: kotaWhereInput | boolean
    delete?: kotaWhereInput | boolean
    connect?: kotaWhereUniqueInput
    update?: XOR<XOR<kotaUpdateToOneWithWhereWithoutStandard_tujuanInput, kotaUpdateWithoutStandard_tujuanInput>, kotaUncheckedUpdateWithoutStandard_tujuanInput>
  }

  export type opdUpdateOneRequiredWithoutStandardNestedInput = {
    create?: XOR<opdCreateWithoutStandardInput, opdUncheckedCreateWithoutStandardInput>
    connectOrCreate?: opdCreateOrConnectWithoutStandardInput
    upsert?: opdUpsertWithoutStandardInput
    connect?: opdWhereUniqueInput
    update?: XOR<XOR<opdUpdateToOneWithWhereWithoutStandardInput, opdUpdateWithoutStandardInput>, opdUncheckedUpdateWithoutStandardInput>
  }

  export type usersCreateNestedOneWithoutBankInput = {
    create?: XOR<usersCreateWithoutBankInput, usersUncheckedCreateWithoutBankInput>
    connectOrCreate?: usersCreateOrConnectWithoutBankInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutBankNestedInput = {
    create?: XOR<usersCreateWithoutBankInput, usersUncheckedCreateWithoutBankInput>
    connectOrCreate?: usersCreateOrConnectWithoutBankInput
    upsert?: usersUpsertWithoutBankInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutBankInput, usersUpdateWithoutBankInput>, usersUncheckedUpdateWithoutBankInput>
  }

  export type gajianCreateNestedManyWithoutTunjangan_potonganInput = {
    create?: XOR<gajianCreateWithoutTunjangan_potonganInput, gajianUncheckedCreateWithoutTunjangan_potonganInput> | gajianCreateWithoutTunjangan_potonganInput[] | gajianUncheckedCreateWithoutTunjangan_potonganInput[]
    connectOrCreate?: gajianCreateOrConnectWithoutTunjangan_potonganInput | gajianCreateOrConnectWithoutTunjangan_potonganInput[]
    createMany?: gajianCreateManyTunjangan_potonganInputEnvelope
    connect?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
  }

  export type gajianUncheckedCreateNestedManyWithoutTunjangan_potonganInput = {
    create?: XOR<gajianCreateWithoutTunjangan_potonganInput, gajianUncheckedCreateWithoutTunjangan_potonganInput> | gajianCreateWithoutTunjangan_potonganInput[] | gajianUncheckedCreateWithoutTunjangan_potonganInput[]
    connectOrCreate?: gajianCreateOrConnectWithoutTunjangan_potonganInput | gajianCreateOrConnectWithoutTunjangan_potonganInput[]
    createMany?: gajianCreateManyTunjangan_potonganInputEnvelope
    connect?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
  }

  export type gajianUpdateManyWithoutTunjangan_potonganNestedInput = {
    create?: XOR<gajianCreateWithoutTunjangan_potonganInput, gajianUncheckedCreateWithoutTunjangan_potonganInput> | gajianCreateWithoutTunjangan_potonganInput[] | gajianUncheckedCreateWithoutTunjangan_potonganInput[]
    connectOrCreate?: gajianCreateOrConnectWithoutTunjangan_potonganInput | gajianCreateOrConnectWithoutTunjangan_potonganInput[]
    upsert?: gajianUpsertWithWhereUniqueWithoutTunjangan_potonganInput | gajianUpsertWithWhereUniqueWithoutTunjangan_potonganInput[]
    createMany?: gajianCreateManyTunjangan_potonganInputEnvelope
    set?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    disconnect?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    delete?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    connect?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    update?: gajianUpdateWithWhereUniqueWithoutTunjangan_potonganInput | gajianUpdateWithWhereUniqueWithoutTunjangan_potonganInput[]
    updateMany?: gajianUpdateManyWithWhereWithoutTunjangan_potonganInput | gajianUpdateManyWithWhereWithoutTunjangan_potonganInput[]
    deleteMany?: gajianScalarWhereInput | gajianScalarWhereInput[]
  }

  export type gajianUncheckedUpdateManyWithoutTunjangan_potonganNestedInput = {
    create?: XOR<gajianCreateWithoutTunjangan_potonganInput, gajianUncheckedCreateWithoutTunjangan_potonganInput> | gajianCreateWithoutTunjangan_potonganInput[] | gajianUncheckedCreateWithoutTunjangan_potonganInput[]
    connectOrCreate?: gajianCreateOrConnectWithoutTunjangan_potonganInput | gajianCreateOrConnectWithoutTunjangan_potonganInput[]
    upsert?: gajianUpsertWithWhereUniqueWithoutTunjangan_potonganInput | gajianUpsertWithWhereUniqueWithoutTunjangan_potonganInput[]
    createMany?: gajianCreateManyTunjangan_potonganInputEnvelope
    set?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    disconnect?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    delete?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    connect?: gajianWhereUniqueInput | gajianWhereUniqueInput[]
    update?: gajianUpdateWithWhereUniqueWithoutTunjangan_potonganInput | gajianUpdateWithWhereUniqueWithoutTunjangan_potonganInput[]
    updateMany?: gajianUpdateManyWithWhereWithoutTunjangan_potonganInput | gajianUpdateManyWithWhereWithoutTunjangan_potonganInput[]
    deleteMany?: gajianScalarWhereInput | gajianScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutGajianInput = {
    create?: XOR<usersCreateWithoutGajianInput, usersUncheckedCreateWithoutGajianInput>
    connectOrCreate?: usersCreateOrConnectWithoutGajianInput
    connect?: usersWhereUniqueInput
  }

  export type tunjangan_potonganCreateNestedOneWithoutGajianInput = {
    create?: XOR<tunjangan_potonganCreateWithoutGajianInput, tunjangan_potonganUncheckedCreateWithoutGajianInput>
    connectOrCreate?: tunjangan_potonganCreateOrConnectWithoutGajianInput
    connect?: tunjangan_potonganWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutGajianNestedInput = {
    create?: XOR<usersCreateWithoutGajianInput, usersUncheckedCreateWithoutGajianInput>
    connectOrCreate?: usersCreateOrConnectWithoutGajianInput
    upsert?: usersUpsertWithoutGajianInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutGajianInput, usersUpdateWithoutGajianInput>, usersUncheckedUpdateWithoutGajianInput>
  }

  export type tunjangan_potonganUpdateOneRequiredWithoutGajianNestedInput = {
    create?: XOR<tunjangan_potonganCreateWithoutGajianInput, tunjangan_potonganUncheckedCreateWithoutGajianInput>
    connectOrCreate?: tunjangan_potonganCreateOrConnectWithoutGajianInput
    upsert?: tunjangan_potonganUpsertWithoutGajianInput
    connect?: tunjangan_potonganWhereUniqueInput
    update?: XOR<XOR<tunjangan_potonganUpdateToOneWithWhereWithoutGajianInput, tunjangan_potonganUpdateWithoutGajianInput>, tunjangan_potonganUncheckedUpdateWithoutGajianInput>
  }

  export type sumberdanaCreateNestedOneWithoutTtd_gajianInput = {
    create?: XOR<sumberdanaCreateWithoutTtd_gajianInput, sumberdanaUncheckedCreateWithoutTtd_gajianInput>
    connectOrCreate?: sumberdanaCreateOrConnectWithoutTtd_gajianInput
    connect?: sumberdanaWhereUniqueInput
  }

  export type sumberdanaUpdateOneRequiredWithoutTtd_gajianNestedInput = {
    create?: XOR<sumberdanaCreateWithoutTtd_gajianInput, sumberdanaUncheckedCreateWithoutTtd_gajianInput>
    connectOrCreate?: sumberdanaCreateOrConnectWithoutTtd_gajianInput
    upsert?: sumberdanaUpsertWithoutTtd_gajianInput
    connect?: sumberdanaWhereUniqueInput
    update?: XOR<XOR<sumberdanaUpdateToOneWithWhereWithoutTtd_gajianInput, sumberdanaUpdateWithoutTtd_gajianInput>, sumberdanaUncheckedUpdateWithoutTtd_gajianInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumJKFilter<$PrismaModel = never> = {
    equals?: $Enums.JK | EnumJKFieldRefInput<$PrismaModel>
    in?: $Enums.JK[]
    notIn?: $Enums.JK[]
    not?: NestedEnumJKFilter<$PrismaModel> | $Enums.JK
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumJKWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JK | EnumJKFieldRefInput<$PrismaModel>
    in?: $Enums.JK[]
    notIn?: $Enums.JK[]
    not?: NestedEnumJKWithAggregatesFilter<$PrismaModel> | $Enums.JK
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJKFilter<$PrismaModel>
    _max?: NestedEnumJKFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type spt_pegawaiCreateWithoutUsersInput = {
    sp_nomor_sppd: string
    sp_seq: number
    spt: sptCreateNestedOneWithoutSpt_pegawaiInput
    biaya?: biayaCreateNestedManyWithoutSpt_pegawaiInput
    npd?: npdCreateNestedManyWithoutSpt_pegawaiInput
    laporan?: laporanCreateNestedOneWithoutSpt_pegawaiInput
    kwitansi?: kwitansiCreateNestedOneWithoutSpt_pegawaiInput
  }

  export type spt_pegawaiUncheckedCreateWithoutUsersInput = {
    sp_id?: number
    sp_spt: number
    sp_nomor_sppd: string
    sp_seq: number
    biaya?: biayaUncheckedCreateNestedManyWithoutSpt_pegawaiInput
    npd?: npdUncheckedCreateNestedManyWithoutSpt_pegawaiInput
    laporan?: laporanUncheckedCreateNestedOneWithoutSpt_pegawaiInput
    kwitansi?: kwitansiUncheckedCreateNestedOneWithoutSpt_pegawaiInput
  }

  export type spt_pegawaiCreateOrConnectWithoutUsersInput = {
    where: spt_pegawaiWhereUniqueInput
    create: XOR<spt_pegawaiCreateWithoutUsersInput, spt_pegawaiUncheckedCreateWithoutUsersInput>
  }

  export type spt_pegawaiCreateManyUsersInputEnvelope = {
    data: spt_pegawaiCreateManyUsersInput | spt_pegawaiCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type sptCreateWithoutUsers_pjInput = {
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutSptInput
    users_pj2: usersCreateNestedOneWithoutPj2Input
    kota_asal: kotaCreateNestedOneWithoutKota_asalInput
    kota_tujuan: kotaCreateNestedOneWithoutKota_tujuanInput
    kota_tujuan2?: kotaCreateNestedOneWithoutKota_tujuan2Input
    opd: opdCreateNestedOneWithoutSptInput
    kegiatan: kegiatanCreateNestedOneWithoutSptInput
    sumber_dana: sumberdanaCreateNestedOneWithoutSptInput
    kategori: kategoriCreateNestedOneWithoutSptInput
    kota?: kotaCreateNestedOneWithoutSptInput
  }

  export type sptUncheckedCreateWithoutUsers_pjInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutSptInput
  }

  export type sptCreateOrConnectWithoutUsers_pjInput = {
    where: sptWhereUniqueInput
    create: XOR<sptCreateWithoutUsers_pjInput, sptUncheckedCreateWithoutUsers_pjInput>
  }

  export type sptCreateManyUsers_pjInputEnvelope = {
    data: sptCreateManyUsers_pjInput | sptCreateManyUsers_pjInput[]
    skipDuplicates?: boolean
  }

  export type sptCreateWithoutUsers_pj2Input = {
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutSptInput
    users_pj: usersCreateNestedOneWithoutPjInput
    kota_asal: kotaCreateNestedOneWithoutKota_asalInput
    kota_tujuan: kotaCreateNestedOneWithoutKota_tujuanInput
    kota_tujuan2?: kotaCreateNestedOneWithoutKota_tujuan2Input
    opd: opdCreateNestedOneWithoutSptInput
    kegiatan: kegiatanCreateNestedOneWithoutSptInput
    sumber_dana: sumberdanaCreateNestedOneWithoutSptInput
    kategori: kategoriCreateNestedOneWithoutSptInput
    kota?: kotaCreateNestedOneWithoutSptInput
  }

  export type sptUncheckedCreateWithoutUsers_pj2Input = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutSptInput
  }

  export type sptCreateOrConnectWithoutUsers_pj2Input = {
    where: sptWhereUniqueInput
    create: XOR<sptCreateWithoutUsers_pj2Input, sptUncheckedCreateWithoutUsers_pj2Input>
  }

  export type sptCreateManyUsers_pj2InputEnvelope = {
    data: sptCreateManyUsers_pj2Input | sptCreateManyUsers_pj2Input[]
    skipDuplicates?: boolean
  }

  export type opdCreateWithoutUsersInput = {
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
    spt?: sptCreateNestedManyWithoutOpdInput
    setting?: settingCreateNestedManyWithoutOpdInput
    sumberdana?: sumberdanaCreateNestedManyWithoutOpdInput
    standard?: standardCreateNestedManyWithoutOpdInput
    kegiatan?: kegiatanCreateNestedManyWithoutOpdInput
  }

  export type opdUncheckedCreateWithoutUsersInput = {
    opd_id?: number
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
    spt?: sptUncheckedCreateNestedManyWithoutOpdInput
    setting?: settingUncheckedCreateNestedManyWithoutOpdInput
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutOpdInput
    standard?: standardUncheckedCreateNestedManyWithoutOpdInput
    kegiatan?: kegiatanUncheckedCreateNestedManyWithoutOpdInput
  }

  export type opdCreateOrConnectWithoutUsersInput = {
    where: opdWhereUniqueInput
    create: XOR<opdCreateWithoutUsersInput, opdUncheckedCreateWithoutUsersInput>
  }

  export type jabatanCreateWithoutUsersInput = {
    jabatan_opd: number
    jabatan_nama: string
    jabatan_kop_surat?: number | null
    jabatan_kelas_biaya: number
    jabatan_kwitansi?: number | null
    jabatan_kelompok?: number | null
    jabatan_created?: Date | string
    jabatan_updated?: Date | string
    jabatan_deleted?: Date | string | null
  }

  export type jabatanUncheckedCreateWithoutUsersInput = {
    jabatan_id?: number
    jabatan_opd: number
    jabatan_nama: string
    jabatan_kop_surat?: number | null
    jabatan_kelas_biaya: number
    jabatan_kwitansi?: number | null
    jabatan_kelompok?: number | null
    jabatan_created?: Date | string
    jabatan_updated?: Date | string
    jabatan_deleted?: Date | string | null
  }

  export type jabatanCreateOrConnectWithoutUsersInput = {
    where: jabatanWhereUniqueInput
    create: XOR<jabatanCreateWithoutUsersInput, jabatanUncheckedCreateWithoutUsersInput>
  }

  export type sumberdanaCreateWithoutUsersInput = {
    sd_tahun: string
    sd_kode_rekening: string
    sd_nama: string
    sd_jumlah: bigint | number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    opd: opdCreateNestedOneWithoutSumberdanaInput
    kegiatan: kegiatanCreateNestedOneWithoutSumberdanaInput
    spt?: sptCreateNestedManyWithoutSumber_danaInput
    bendahara: usersCreateNestedOneWithoutSumberdana_bendaharaInput
    pengguna_anggaran: usersCreateNestedOneWithoutSumberdana_paInput
    ttd_gajian?: ttd_gajianCreateNestedManyWithoutSumberdanaInput
  }

  export type sumberdanaUncheckedCreateWithoutUsersInput = {
    sd_id?: number
    sd_tahun: string
    sd_opd: number
    sd_kode_rekening: string
    sd_nama: string
    sd_kegiatan: number
    sd_jumlah: bigint | number
    sd_pa: number
    sd_bendahara: number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    spt?: sptUncheckedCreateNestedManyWithoutSumber_danaInput
    ttd_gajian?: ttd_gajianUncheckedCreateNestedManyWithoutSumberdanaInput
  }

  export type sumberdanaCreateOrConnectWithoutUsersInput = {
    where: sumberdanaWhereUniqueInput
    create: XOR<sumberdanaCreateWithoutUsersInput, sumberdanaUncheckedCreateWithoutUsersInput>
  }

  export type sumberdanaCreateManyUsersInputEnvelope = {
    data: sumberdanaCreateManyUsersInput | sumberdanaCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type sumberdanaCreateWithoutBendaharaInput = {
    sd_tahun: string
    sd_kode_rekening: string
    sd_nama: string
    sd_jumlah: bigint | number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    opd: opdCreateNestedOneWithoutSumberdanaInput
    kegiatan: kegiatanCreateNestedOneWithoutSumberdanaInput
    users: usersCreateNestedOneWithoutSumberdanaInput
    spt?: sptCreateNestedManyWithoutSumber_danaInput
    pengguna_anggaran: usersCreateNestedOneWithoutSumberdana_paInput
    ttd_gajian?: ttd_gajianCreateNestedManyWithoutSumberdanaInput
  }

  export type sumberdanaUncheckedCreateWithoutBendaharaInput = {
    sd_id?: number
    sd_tahun: string
    sd_opd: number
    sd_kode_rekening: string
    sd_nama: string
    sd_kegiatan: number
    sd_jumlah: bigint | number
    sd_pptk: number
    sd_pa: number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    spt?: sptUncheckedCreateNestedManyWithoutSumber_danaInput
    ttd_gajian?: ttd_gajianUncheckedCreateNestedManyWithoutSumberdanaInput
  }

  export type sumberdanaCreateOrConnectWithoutBendaharaInput = {
    where: sumberdanaWhereUniqueInput
    create: XOR<sumberdanaCreateWithoutBendaharaInput, sumberdanaUncheckedCreateWithoutBendaharaInput>
  }

  export type sumberdanaCreateManyBendaharaInputEnvelope = {
    data: sumberdanaCreateManyBendaharaInput | sumberdanaCreateManyBendaharaInput[]
    skipDuplicates?: boolean
  }

  export type sumberdanaCreateWithoutPengguna_anggaranInput = {
    sd_tahun: string
    sd_kode_rekening: string
    sd_nama: string
    sd_jumlah: bigint | number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    opd: opdCreateNestedOneWithoutSumberdanaInput
    kegiatan: kegiatanCreateNestedOneWithoutSumberdanaInput
    users: usersCreateNestedOneWithoutSumberdanaInput
    spt?: sptCreateNestedManyWithoutSumber_danaInput
    bendahara: usersCreateNestedOneWithoutSumberdana_bendaharaInput
    ttd_gajian?: ttd_gajianCreateNestedManyWithoutSumberdanaInput
  }

  export type sumberdanaUncheckedCreateWithoutPengguna_anggaranInput = {
    sd_id?: number
    sd_tahun: string
    sd_opd: number
    sd_kode_rekening: string
    sd_nama: string
    sd_kegiatan: number
    sd_jumlah: bigint | number
    sd_pptk: number
    sd_bendahara: number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    spt?: sptUncheckedCreateNestedManyWithoutSumber_danaInput
    ttd_gajian?: ttd_gajianUncheckedCreateNestedManyWithoutSumberdanaInput
  }

  export type sumberdanaCreateOrConnectWithoutPengguna_anggaranInput = {
    where: sumberdanaWhereUniqueInput
    create: XOR<sumberdanaCreateWithoutPengguna_anggaranInput, sumberdanaUncheckedCreateWithoutPengguna_anggaranInput>
  }

  export type sumberdanaCreateManyPengguna_anggaranInputEnvelope = {
    data: sumberdanaCreateManyPengguna_anggaranInput | sumberdanaCreateManyPengguna_anggaranInput[]
    skipDuplicates?: boolean
  }

  export type bankCreateWithoutUserInput = {
    bank_name: number
    bank_account: string
    bank_number: string
  }

  export type bankUncheckedCreateWithoutUserInput = {
    bank_name: number
    bank_account: string
    bank_number: string
  }

  export type bankCreateOrConnectWithoutUserInput = {
    where: bankWhereUniqueInput
    create: XOR<bankCreateWithoutUserInput, bankUncheckedCreateWithoutUserInput>
  }

  export type bankCreateManyUserInputEnvelope = {
    data: bankCreateManyUserInput | bankCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type gajianCreateWithoutUsersInput = {
    gajian_bulan: number
    gajian_tahun: number
    gajian_nominal: number
    gajian_created?: Date | string
    gajian_updated?: Date | string
    gajian_deleted?: Date | string | null
    tunjangan_potongan: tunjangan_potonganCreateNestedOneWithoutGajianInput
  }

  export type gajianUncheckedCreateWithoutUsersInput = {
    gajian_id?: number
    gajian_bulan: number
    gajian_tahun: number
    gajian_tunjangan_potongan: number
    gajian_nominal: number
    gajian_created?: Date | string
    gajian_updated?: Date | string
    gajian_deleted?: Date | string | null
  }

  export type gajianCreateOrConnectWithoutUsersInput = {
    where: gajianWhereUniqueInput
    create: XOR<gajianCreateWithoutUsersInput, gajianUncheckedCreateWithoutUsersInput>
  }

  export type gajianCreateManyUsersInputEnvelope = {
    data: gajianCreateManyUsersInput | gajianCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type spt_pegawaiUpsertWithWhereUniqueWithoutUsersInput = {
    where: spt_pegawaiWhereUniqueInput
    update: XOR<spt_pegawaiUpdateWithoutUsersInput, spt_pegawaiUncheckedUpdateWithoutUsersInput>
    create: XOR<spt_pegawaiCreateWithoutUsersInput, spt_pegawaiUncheckedCreateWithoutUsersInput>
  }

  export type spt_pegawaiUpdateWithWhereUniqueWithoutUsersInput = {
    where: spt_pegawaiWhereUniqueInput
    data: XOR<spt_pegawaiUpdateWithoutUsersInput, spt_pegawaiUncheckedUpdateWithoutUsersInput>
  }

  export type spt_pegawaiUpdateManyWithWhereWithoutUsersInput = {
    where: spt_pegawaiScalarWhereInput
    data: XOR<spt_pegawaiUpdateManyMutationInput, spt_pegawaiUncheckedUpdateManyWithoutUsersInput>
  }

  export type spt_pegawaiScalarWhereInput = {
    AND?: spt_pegawaiScalarWhereInput | spt_pegawaiScalarWhereInput[]
    OR?: spt_pegawaiScalarWhereInput[]
    NOT?: spt_pegawaiScalarWhereInput | spt_pegawaiScalarWhereInput[]
    sp_id?: IntFilter<"spt_pegawai"> | number
    sp_spt?: IntFilter<"spt_pegawai"> | number
    sp_user?: IntFilter<"spt_pegawai"> | number
    sp_nomor_sppd?: StringFilter<"spt_pegawai"> | string
    sp_seq?: IntFilter<"spt_pegawai"> | number
  }

  export type sptUpsertWithWhereUniqueWithoutUsers_pjInput = {
    where: sptWhereUniqueInput
    update: XOR<sptUpdateWithoutUsers_pjInput, sptUncheckedUpdateWithoutUsers_pjInput>
    create: XOR<sptCreateWithoutUsers_pjInput, sptUncheckedCreateWithoutUsers_pjInput>
  }

  export type sptUpdateWithWhereUniqueWithoutUsers_pjInput = {
    where: sptWhereUniqueInput
    data: XOR<sptUpdateWithoutUsers_pjInput, sptUncheckedUpdateWithoutUsers_pjInput>
  }

  export type sptUpdateManyWithWhereWithoutUsers_pjInput = {
    where: sptScalarWhereInput
    data: XOR<sptUpdateManyMutationInput, sptUncheckedUpdateManyWithoutUsers_pjInput>
  }

  export type sptScalarWhereInput = {
    AND?: sptScalarWhereInput | sptScalarWhereInput[]
    OR?: sptScalarWhereInput[]
    NOT?: sptScalarWhereInput | sptScalarWhereInput[]
    spt_id?: IntFilter<"spt"> | number
    spt_seq?: IntFilter<"spt"> | number
    spt_tahun?: IntFilter<"spt"> | number
    spt_nomor?: StringFilter<"spt"> | string
    spt_opd?: IntFilter<"spt"> | number
    spt_kota_asal?: IntFilter<"spt"> | number
    spt_kota_tujuan?: IntFilter<"spt"> | number
    spt_kota_tujuan2?: IntNullableFilter<"spt"> | number | null
    spt_tempat_tujuan?: StringFilter<"spt"> | string
    spt_via?: IntFilter<"spt"> | number
    spt_tgl_brkt?: DateTimeFilter<"spt"> | Date | string
    spt_tgl_kembali?: DateTimeFilter<"spt"> | Date | string
    spt_lama?: IntFilter<"spt"> | number
    spt_perihal?: StringFilter<"spt"> | string
    spt_kategori?: IntFilter<"spt"> | number
    spt_kegiatan?: IntFilter<"spt"> | number
    spt_sumber_dana?: IntFilter<"spt"> | number
    spt_pj?: IntFilter<"spt"> | number
    spt_pj2?: IntFilter<"spt"> | number
    spt_dasar?: StringNullableFilter<"spt"> | string | null
    spt_status?: IntFilter<"spt"> | number
    spt_created?: DateTimeFilter<"spt"> | Date | string
    spt_updated?: DateTimeFilter<"spt"> | Date | string
    spt_deleted?: DateTimeNullableFilter<"spt"> | Date | string | null
    kotaKota_id?: IntNullableFilter<"spt"> | number | null
  }

  export type sptUpsertWithWhereUniqueWithoutUsers_pj2Input = {
    where: sptWhereUniqueInput
    update: XOR<sptUpdateWithoutUsers_pj2Input, sptUncheckedUpdateWithoutUsers_pj2Input>
    create: XOR<sptCreateWithoutUsers_pj2Input, sptUncheckedCreateWithoutUsers_pj2Input>
  }

  export type sptUpdateWithWhereUniqueWithoutUsers_pj2Input = {
    where: sptWhereUniqueInput
    data: XOR<sptUpdateWithoutUsers_pj2Input, sptUncheckedUpdateWithoutUsers_pj2Input>
  }

  export type sptUpdateManyWithWhereWithoutUsers_pj2Input = {
    where: sptScalarWhereInput
    data: XOR<sptUpdateManyMutationInput, sptUncheckedUpdateManyWithoutUsers_pj2Input>
  }

  export type opdUpsertWithoutUsersInput = {
    update: XOR<opdUpdateWithoutUsersInput, opdUncheckedUpdateWithoutUsersInput>
    create: XOR<opdCreateWithoutUsersInput, opdUncheckedCreateWithoutUsersInput>
    where?: opdWhereInput
  }

  export type opdUpdateToOneWithWhereWithoutUsersInput = {
    where?: opdWhereInput
    data: XOR<opdUpdateWithoutUsersInput, opdUncheckedUpdateWithoutUsersInput>
  }

  export type opdUpdateWithoutUsersInput = {
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt?: sptUpdateManyWithoutOpdNestedInput
    setting?: settingUpdateManyWithoutOpdNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutOpdNestedInput
    standard?: standardUpdateManyWithoutOpdNestedInput
    kegiatan?: kegiatanUpdateManyWithoutOpdNestedInput
  }

  export type opdUncheckedUpdateWithoutUsersInput = {
    opd_id?: IntFieldUpdateOperationsInput | number
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt?: sptUncheckedUpdateManyWithoutOpdNestedInput
    setting?: settingUncheckedUpdateManyWithoutOpdNestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutOpdNestedInput
    standard?: standardUncheckedUpdateManyWithoutOpdNestedInput
    kegiatan?: kegiatanUncheckedUpdateManyWithoutOpdNestedInput
  }

  export type jabatanUpsertWithoutUsersInput = {
    update: XOR<jabatanUpdateWithoutUsersInput, jabatanUncheckedUpdateWithoutUsersInput>
    create: XOR<jabatanCreateWithoutUsersInput, jabatanUncheckedCreateWithoutUsersInput>
    where?: jabatanWhereInput
  }

  export type jabatanUpdateToOneWithWhereWithoutUsersInput = {
    where?: jabatanWhereInput
    data: XOR<jabatanUpdateWithoutUsersInput, jabatanUncheckedUpdateWithoutUsersInput>
  }

  export type jabatanUpdateWithoutUsersInput = {
    jabatan_opd?: IntFieldUpdateOperationsInput | number
    jabatan_nama?: StringFieldUpdateOperationsInput | string
    jabatan_kop_surat?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_kelas_biaya?: IntFieldUpdateOperationsInput | number
    jabatan_kwitansi?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_kelompok?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    jabatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    jabatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type jabatanUncheckedUpdateWithoutUsersInput = {
    jabatan_id?: IntFieldUpdateOperationsInput | number
    jabatan_opd?: IntFieldUpdateOperationsInput | number
    jabatan_nama?: StringFieldUpdateOperationsInput | string
    jabatan_kop_surat?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_kelas_biaya?: IntFieldUpdateOperationsInput | number
    jabatan_kwitansi?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_kelompok?: NullableIntFieldUpdateOperationsInput | number | null
    jabatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    jabatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    jabatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sumberdanaUpsertWithWhereUniqueWithoutUsersInput = {
    where: sumberdanaWhereUniqueInput
    update: XOR<sumberdanaUpdateWithoutUsersInput, sumberdanaUncheckedUpdateWithoutUsersInput>
    create: XOR<sumberdanaCreateWithoutUsersInput, sumberdanaUncheckedCreateWithoutUsersInput>
  }

  export type sumberdanaUpdateWithWhereUniqueWithoutUsersInput = {
    where: sumberdanaWhereUniqueInput
    data: XOR<sumberdanaUpdateWithoutUsersInput, sumberdanaUncheckedUpdateWithoutUsersInput>
  }

  export type sumberdanaUpdateManyWithWhereWithoutUsersInput = {
    where: sumberdanaScalarWhereInput
    data: XOR<sumberdanaUpdateManyMutationInput, sumberdanaUncheckedUpdateManyWithoutUsersInput>
  }

  export type sumberdanaScalarWhereInput = {
    AND?: sumberdanaScalarWhereInput | sumberdanaScalarWhereInput[]
    OR?: sumberdanaScalarWhereInput[]
    NOT?: sumberdanaScalarWhereInput | sumberdanaScalarWhereInput[]
    sd_id?: IntFilter<"sumberdana"> | number
    sd_tahun?: StringFilter<"sumberdana"> | string
    sd_opd?: IntFilter<"sumberdana"> | number
    sd_kode_rekening?: StringFilter<"sumberdana"> | string
    sd_nama?: StringFilter<"sumberdana"> | string
    sd_kegiatan?: IntFilter<"sumberdana"> | number
    sd_jumlah?: BigIntFilter<"sumberdana"> | bigint | number
    sd_pptk?: IntFilter<"sumberdana"> | number
    sd_pa?: IntFilter<"sumberdana"> | number
    sd_bendahara?: IntFilter<"sumberdana"> | number
    sd_active?: BoolFilter<"sumberdana"> | boolean
    sd_app?: StringFilter<"sumberdana"> | string
    sd_created?: DateTimeFilter<"sumberdana"> | Date | string
    sd_updated?: DateTimeFilter<"sumberdana"> | Date | string
    sd_deleted?: DateTimeNullableFilter<"sumberdana"> | Date | string | null
  }

  export type sumberdanaUpsertWithWhereUniqueWithoutBendaharaInput = {
    where: sumberdanaWhereUniqueInput
    update: XOR<sumberdanaUpdateWithoutBendaharaInput, sumberdanaUncheckedUpdateWithoutBendaharaInput>
    create: XOR<sumberdanaCreateWithoutBendaharaInput, sumberdanaUncheckedCreateWithoutBendaharaInput>
  }

  export type sumberdanaUpdateWithWhereUniqueWithoutBendaharaInput = {
    where: sumberdanaWhereUniqueInput
    data: XOR<sumberdanaUpdateWithoutBendaharaInput, sumberdanaUncheckedUpdateWithoutBendaharaInput>
  }

  export type sumberdanaUpdateManyWithWhereWithoutBendaharaInput = {
    where: sumberdanaScalarWhereInput
    data: XOR<sumberdanaUpdateManyMutationInput, sumberdanaUncheckedUpdateManyWithoutBendaharaInput>
  }

  export type sumberdanaUpsertWithWhereUniqueWithoutPengguna_anggaranInput = {
    where: sumberdanaWhereUniqueInput
    update: XOR<sumberdanaUpdateWithoutPengguna_anggaranInput, sumberdanaUncheckedUpdateWithoutPengguna_anggaranInput>
    create: XOR<sumberdanaCreateWithoutPengguna_anggaranInput, sumberdanaUncheckedCreateWithoutPengguna_anggaranInput>
  }

  export type sumberdanaUpdateWithWhereUniqueWithoutPengguna_anggaranInput = {
    where: sumberdanaWhereUniqueInput
    data: XOR<sumberdanaUpdateWithoutPengguna_anggaranInput, sumberdanaUncheckedUpdateWithoutPengguna_anggaranInput>
  }

  export type sumberdanaUpdateManyWithWhereWithoutPengguna_anggaranInput = {
    where: sumberdanaScalarWhereInput
    data: XOR<sumberdanaUpdateManyMutationInput, sumberdanaUncheckedUpdateManyWithoutPengguna_anggaranInput>
  }

  export type bankUpsertWithWhereUniqueWithoutUserInput = {
    where: bankWhereUniqueInput
    update: XOR<bankUpdateWithoutUserInput, bankUncheckedUpdateWithoutUserInput>
    create: XOR<bankCreateWithoutUserInput, bankUncheckedCreateWithoutUserInput>
  }

  export type bankUpdateWithWhereUniqueWithoutUserInput = {
    where: bankWhereUniqueInput
    data: XOR<bankUpdateWithoutUserInput, bankUncheckedUpdateWithoutUserInput>
  }

  export type bankUpdateManyWithWhereWithoutUserInput = {
    where: bankScalarWhereInput
    data: XOR<bankUpdateManyMutationInput, bankUncheckedUpdateManyWithoutUserInput>
  }

  export type bankScalarWhereInput = {
    AND?: bankScalarWhereInput | bankScalarWhereInput[]
    OR?: bankScalarWhereInput[]
    NOT?: bankScalarWhereInput | bankScalarWhereInput[]
    bank_user?: IntFilter<"bank"> | number
    bank_name?: IntFilter<"bank"> | number
    bank_account?: StringFilter<"bank"> | string
    bank_number?: StringFilter<"bank"> | string
  }

  export type gajianUpsertWithWhereUniqueWithoutUsersInput = {
    where: gajianWhereUniqueInput
    update: XOR<gajianUpdateWithoutUsersInput, gajianUncheckedUpdateWithoutUsersInput>
    create: XOR<gajianCreateWithoutUsersInput, gajianUncheckedCreateWithoutUsersInput>
  }

  export type gajianUpdateWithWhereUniqueWithoutUsersInput = {
    where: gajianWhereUniqueInput
    data: XOR<gajianUpdateWithoutUsersInput, gajianUncheckedUpdateWithoutUsersInput>
  }

  export type gajianUpdateManyWithWhereWithoutUsersInput = {
    where: gajianScalarWhereInput
    data: XOR<gajianUpdateManyMutationInput, gajianUncheckedUpdateManyWithoutUsersInput>
  }

  export type gajianScalarWhereInput = {
    AND?: gajianScalarWhereInput | gajianScalarWhereInput[]
    OR?: gajianScalarWhereInput[]
    NOT?: gajianScalarWhereInput | gajianScalarWhereInput[]
    gajian_id?: IntFilter<"gajian"> | number
    gajian_pegawai?: IntFilter<"gajian"> | number
    gajian_bulan?: IntFilter<"gajian"> | number
    gajian_tahun?: IntFilter<"gajian"> | number
    gajian_tunjangan_potongan?: IntFilter<"gajian"> | number
    gajian_nominal?: IntFilter<"gajian"> | number
    gajian_created?: DateTimeFilter<"gajian"> | Date | string
    gajian_updated?: DateTimeFilter<"gajian"> | Date | string
    gajian_deleted?: DateTimeNullableFilter<"gajian"> | Date | string | null
  }

  export type spt_pegawaiCreateWithoutSptInput = {
    sp_nomor_sppd: string
    sp_seq: number
    users: usersCreateNestedOneWithoutSpt_pegawaiInput
    biaya?: biayaCreateNestedManyWithoutSpt_pegawaiInput
    npd?: npdCreateNestedManyWithoutSpt_pegawaiInput
    laporan?: laporanCreateNestedOneWithoutSpt_pegawaiInput
    kwitansi?: kwitansiCreateNestedOneWithoutSpt_pegawaiInput
  }

  export type spt_pegawaiUncheckedCreateWithoutSptInput = {
    sp_id?: number
    sp_user: number
    sp_nomor_sppd: string
    sp_seq: number
    biaya?: biayaUncheckedCreateNestedManyWithoutSpt_pegawaiInput
    npd?: npdUncheckedCreateNestedManyWithoutSpt_pegawaiInput
    laporan?: laporanUncheckedCreateNestedOneWithoutSpt_pegawaiInput
    kwitansi?: kwitansiUncheckedCreateNestedOneWithoutSpt_pegawaiInput
  }

  export type spt_pegawaiCreateOrConnectWithoutSptInput = {
    where: spt_pegawaiWhereUniqueInput
    create: XOR<spt_pegawaiCreateWithoutSptInput, spt_pegawaiUncheckedCreateWithoutSptInput>
  }

  export type spt_pegawaiCreateManySptInputEnvelope = {
    data: spt_pegawaiCreateManySptInput | spt_pegawaiCreateManySptInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutPjInput = {
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutUsersInput
    pj2?: sptCreateNestedManyWithoutUsers_pj2Input
    opd: opdCreateNestedOneWithoutUsersInput
    jabatan: jabatanCreateNestedOneWithoutUsersInput
    sumberdana?: sumberdanaCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankCreateNestedManyWithoutUserInput
    gajian?: gajianCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutPjInput = {
    user_id?: number
    user_opd: number
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_jabatan: number
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutUsersInput
    pj2?: sptUncheckedCreateNestedManyWithoutUsers_pj2Input
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaUncheckedCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaUncheckedCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankUncheckedCreateNestedManyWithoutUserInput
    gajian?: gajianUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutPjInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutPjInput, usersUncheckedCreateWithoutPjInput>
  }

  export type usersCreateWithoutPj2Input = {
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutUsersInput
    pj?: sptCreateNestedManyWithoutUsers_pjInput
    opd: opdCreateNestedOneWithoutUsersInput
    jabatan: jabatanCreateNestedOneWithoutUsersInput
    sumberdana?: sumberdanaCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankCreateNestedManyWithoutUserInput
    gajian?: gajianCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutPj2Input = {
    user_id?: number
    user_opd: number
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_jabatan: number
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutUsersInput
    pj?: sptUncheckedCreateNestedManyWithoutUsers_pjInput
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaUncheckedCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaUncheckedCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankUncheckedCreateNestedManyWithoutUserInput
    gajian?: gajianUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutPj2Input = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutPj2Input, usersUncheckedCreateWithoutPj2Input>
  }

  export type kotaCreateWithoutKota_asalInput = {
    kota_id: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_tujuan?: sptCreateNestedManyWithoutKota_tujuanInput
    kota_tujuan2?: sptCreateNestedManyWithoutKota_tujuan2Input
    spt?: sptCreateNestedManyWithoutKotaInput
    provinsi?: provinsiCreateNestedOneWithoutKotaInput
    standard_asal?: standardCreateNestedManyWithoutKota_asalInput
    standard_tujuan?: standardCreateNestedManyWithoutKota_tujuanInput
  }

  export type kotaUncheckedCreateWithoutKota_asalInput = {
    kota_id: number
    kota_provinsi: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_tujuan?: sptUncheckedCreateNestedManyWithoutKota_tujuanInput
    kota_tujuan2?: sptUncheckedCreateNestedManyWithoutKota_tujuan2Input
    spt?: sptUncheckedCreateNestedManyWithoutKotaInput
    standard_asal?: standardUncheckedCreateNestedManyWithoutKota_asalInput
    standard_tujuan?: standardUncheckedCreateNestedManyWithoutKota_tujuanInput
  }

  export type kotaCreateOrConnectWithoutKota_asalInput = {
    where: kotaWhereUniqueInput
    create: XOR<kotaCreateWithoutKota_asalInput, kotaUncheckedCreateWithoutKota_asalInput>
  }

  export type kotaCreateWithoutKota_tujuanInput = {
    kota_id: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_asal?: sptCreateNestedManyWithoutKota_asalInput
    kota_tujuan2?: sptCreateNestedManyWithoutKota_tujuan2Input
    spt?: sptCreateNestedManyWithoutKotaInput
    provinsi?: provinsiCreateNestedOneWithoutKotaInput
    standard_asal?: standardCreateNestedManyWithoutKota_asalInput
    standard_tujuan?: standardCreateNestedManyWithoutKota_tujuanInput
  }

  export type kotaUncheckedCreateWithoutKota_tujuanInput = {
    kota_id: number
    kota_provinsi: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_asal?: sptUncheckedCreateNestedManyWithoutKota_asalInput
    kota_tujuan2?: sptUncheckedCreateNestedManyWithoutKota_tujuan2Input
    spt?: sptUncheckedCreateNestedManyWithoutKotaInput
    standard_asal?: standardUncheckedCreateNestedManyWithoutKota_asalInput
    standard_tujuan?: standardUncheckedCreateNestedManyWithoutKota_tujuanInput
  }

  export type kotaCreateOrConnectWithoutKota_tujuanInput = {
    where: kotaWhereUniqueInput
    create: XOR<kotaCreateWithoutKota_tujuanInput, kotaUncheckedCreateWithoutKota_tujuanInput>
  }

  export type kotaCreateWithoutKota_tujuan2Input = {
    kota_id: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_asal?: sptCreateNestedManyWithoutKota_asalInput
    kota_tujuan?: sptCreateNestedManyWithoutKota_tujuanInput
    spt?: sptCreateNestedManyWithoutKotaInput
    provinsi?: provinsiCreateNestedOneWithoutKotaInput
    standard_asal?: standardCreateNestedManyWithoutKota_asalInput
    standard_tujuan?: standardCreateNestedManyWithoutKota_tujuanInput
  }

  export type kotaUncheckedCreateWithoutKota_tujuan2Input = {
    kota_id: number
    kota_provinsi: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_asal?: sptUncheckedCreateNestedManyWithoutKota_asalInput
    kota_tujuan?: sptUncheckedCreateNestedManyWithoutKota_tujuanInput
    spt?: sptUncheckedCreateNestedManyWithoutKotaInput
    standard_asal?: standardUncheckedCreateNestedManyWithoutKota_asalInput
    standard_tujuan?: standardUncheckedCreateNestedManyWithoutKota_tujuanInput
  }

  export type kotaCreateOrConnectWithoutKota_tujuan2Input = {
    where: kotaWhereUniqueInput
    create: XOR<kotaCreateWithoutKota_tujuan2Input, kotaUncheckedCreateWithoutKota_tujuan2Input>
  }

  export type opdCreateWithoutSptInput = {
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
    users?: usersCreateNestedManyWithoutOpdInput
    setting?: settingCreateNestedManyWithoutOpdInput
    sumberdana?: sumberdanaCreateNestedManyWithoutOpdInput
    standard?: standardCreateNestedManyWithoutOpdInput
    kegiatan?: kegiatanCreateNestedManyWithoutOpdInput
  }

  export type opdUncheckedCreateWithoutSptInput = {
    opd_id?: number
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
    users?: usersUncheckedCreateNestedManyWithoutOpdInput
    setting?: settingUncheckedCreateNestedManyWithoutOpdInput
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutOpdInput
    standard?: standardUncheckedCreateNestedManyWithoutOpdInput
    kegiatan?: kegiatanUncheckedCreateNestedManyWithoutOpdInput
  }

  export type opdCreateOrConnectWithoutSptInput = {
    where: opdWhereUniqueInput
    create: XOR<opdCreateWithoutSptInput, opdUncheckedCreateWithoutSptInput>
  }

  export type kegiatanCreateWithoutSptInput = {
    kegiatan_kode: string
    kegiatan_program: string
    kegiatan_nama: string
    kegiatan_subkegiatan: string
    kegiatan_created?: Date | string
    kegiatan_updated?: Date | string
    kegiatan_deleted?: Date | string | null
    sumberdana?: sumberdanaCreateNestedManyWithoutKegiatanInput
    opd: opdCreateNestedOneWithoutKegiatanInput
  }

  export type kegiatanUncheckedCreateWithoutSptInput = {
    kegiatan_id?: number
    kegiatan_opd: number
    kegiatan_kode: string
    kegiatan_program: string
    kegiatan_nama: string
    kegiatan_subkegiatan: string
    kegiatan_created?: Date | string
    kegiatan_updated?: Date | string
    kegiatan_deleted?: Date | string | null
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutKegiatanInput
  }

  export type kegiatanCreateOrConnectWithoutSptInput = {
    where: kegiatanWhereUniqueInput
    create: XOR<kegiatanCreateWithoutSptInput, kegiatanUncheckedCreateWithoutSptInput>
  }

  export type sumberdanaCreateWithoutSptInput = {
    sd_tahun: string
    sd_kode_rekening: string
    sd_nama: string
    sd_jumlah: bigint | number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    opd: opdCreateNestedOneWithoutSumberdanaInput
    kegiatan: kegiatanCreateNestedOneWithoutSumberdanaInput
    users: usersCreateNestedOneWithoutSumberdanaInput
    bendahara: usersCreateNestedOneWithoutSumberdana_bendaharaInput
    pengguna_anggaran: usersCreateNestedOneWithoutSumberdana_paInput
    ttd_gajian?: ttd_gajianCreateNestedManyWithoutSumberdanaInput
  }

  export type sumberdanaUncheckedCreateWithoutSptInput = {
    sd_id?: number
    sd_tahun: string
    sd_opd: number
    sd_kode_rekening: string
    sd_nama: string
    sd_kegiatan: number
    sd_jumlah: bigint | number
    sd_pptk: number
    sd_pa: number
    sd_bendahara: number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    ttd_gajian?: ttd_gajianUncheckedCreateNestedManyWithoutSumberdanaInput
  }

  export type sumberdanaCreateOrConnectWithoutSptInput = {
    where: sumberdanaWhereUniqueInput
    create: XOR<sumberdanaCreateWithoutSptInput, sumberdanaUncheckedCreateWithoutSptInput>
  }

  export type kategoriCreateWithoutSptInput = {
    kategori_nama: string
    kategori_opd: number
    kategori_created?: Date | string
    kategori_updated?: Date | string
    kategori_deleted?: Date | string | null
  }

  export type kategoriUncheckedCreateWithoutSptInput = {
    kategori_id?: number
    kategori_nama: string
    kategori_opd: number
    kategori_created?: Date | string
    kategori_updated?: Date | string
    kategori_deleted?: Date | string | null
  }

  export type kategoriCreateOrConnectWithoutSptInput = {
    where: kategoriWhereUniqueInput
    create: XOR<kategoriCreateWithoutSptInput, kategoriUncheckedCreateWithoutSptInput>
  }

  export type kotaCreateWithoutSptInput = {
    kota_id: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_asal?: sptCreateNestedManyWithoutKota_asalInput
    kota_tujuan?: sptCreateNestedManyWithoutKota_tujuanInput
    kota_tujuan2?: sptCreateNestedManyWithoutKota_tujuan2Input
    provinsi?: provinsiCreateNestedOneWithoutKotaInput
    standard_asal?: standardCreateNestedManyWithoutKota_asalInput
    standard_tujuan?: standardCreateNestedManyWithoutKota_tujuanInput
  }

  export type kotaUncheckedCreateWithoutSptInput = {
    kota_id: number
    kota_provinsi: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_asal?: sptUncheckedCreateNestedManyWithoutKota_asalInput
    kota_tujuan?: sptUncheckedCreateNestedManyWithoutKota_tujuanInput
    kota_tujuan2?: sptUncheckedCreateNestedManyWithoutKota_tujuan2Input
    standard_asal?: standardUncheckedCreateNestedManyWithoutKota_asalInput
    standard_tujuan?: standardUncheckedCreateNestedManyWithoutKota_tujuanInput
  }

  export type kotaCreateOrConnectWithoutSptInput = {
    where: kotaWhereUniqueInput
    create: XOR<kotaCreateWithoutSptInput, kotaUncheckedCreateWithoutSptInput>
  }

  export type spt_pegawaiUpsertWithWhereUniqueWithoutSptInput = {
    where: spt_pegawaiWhereUniqueInput
    update: XOR<spt_pegawaiUpdateWithoutSptInput, spt_pegawaiUncheckedUpdateWithoutSptInput>
    create: XOR<spt_pegawaiCreateWithoutSptInput, spt_pegawaiUncheckedCreateWithoutSptInput>
  }

  export type spt_pegawaiUpdateWithWhereUniqueWithoutSptInput = {
    where: spt_pegawaiWhereUniqueInput
    data: XOR<spt_pegawaiUpdateWithoutSptInput, spt_pegawaiUncheckedUpdateWithoutSptInput>
  }

  export type spt_pegawaiUpdateManyWithWhereWithoutSptInput = {
    where: spt_pegawaiScalarWhereInput
    data: XOR<spt_pegawaiUpdateManyMutationInput, spt_pegawaiUncheckedUpdateManyWithoutSptInput>
  }

  export type usersUpsertWithoutPjInput = {
    update: XOR<usersUpdateWithoutPjInput, usersUncheckedUpdateWithoutPjInput>
    create: XOR<usersCreateWithoutPjInput, usersUncheckedCreateWithoutPjInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutPjInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutPjInput, usersUncheckedUpdateWithoutPjInput>
  }

  export type usersUpdateWithoutPjInput = {
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutUsersNestedInput
    pj2?: sptUpdateManyWithoutUsers_pj2NestedInput
    opd?: opdUpdateOneRequiredWithoutUsersNestedInput
    jabatan?: jabatanUpdateOneRequiredWithoutUsersNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUpdateManyWithoutUserNestedInput
    gajian?: gajianUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutPjInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_opd?: IntFieldUpdateOperationsInput | number
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_jabatan?: IntFieldUpdateOperationsInput | number
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutUsersNestedInput
    pj2?: sptUncheckedUpdateManyWithoutUsers_pj2NestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUncheckedUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUncheckedUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUncheckedUpdateManyWithoutUserNestedInput
    gajian?: gajianUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUpsertWithoutPj2Input = {
    update: XOR<usersUpdateWithoutPj2Input, usersUncheckedUpdateWithoutPj2Input>
    create: XOR<usersCreateWithoutPj2Input, usersUncheckedCreateWithoutPj2Input>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutPj2Input = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutPj2Input, usersUncheckedUpdateWithoutPj2Input>
  }

  export type usersUpdateWithoutPj2Input = {
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutUsersNestedInput
    pj?: sptUpdateManyWithoutUsers_pjNestedInput
    opd?: opdUpdateOneRequiredWithoutUsersNestedInput
    jabatan?: jabatanUpdateOneRequiredWithoutUsersNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUpdateManyWithoutUserNestedInput
    gajian?: gajianUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutPj2Input = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_opd?: IntFieldUpdateOperationsInput | number
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_jabatan?: IntFieldUpdateOperationsInput | number
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutUsersNestedInput
    pj?: sptUncheckedUpdateManyWithoutUsers_pjNestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUncheckedUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUncheckedUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUncheckedUpdateManyWithoutUserNestedInput
    gajian?: gajianUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type kotaUpsertWithoutKota_asalInput = {
    update: XOR<kotaUpdateWithoutKota_asalInput, kotaUncheckedUpdateWithoutKota_asalInput>
    create: XOR<kotaCreateWithoutKota_asalInput, kotaUncheckedCreateWithoutKota_asalInput>
    where?: kotaWhereInput
  }

  export type kotaUpdateToOneWithWhereWithoutKota_asalInput = {
    where?: kotaWhereInput
    data: XOR<kotaUpdateWithoutKota_asalInput, kotaUncheckedUpdateWithoutKota_asalInput>
  }

  export type kotaUpdateWithoutKota_asalInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_tujuan?: sptUpdateManyWithoutKota_tujuanNestedInput
    kota_tujuan2?: sptUpdateManyWithoutKota_tujuan2NestedInput
    spt?: sptUpdateManyWithoutKotaNestedInput
    provinsi?: provinsiUpdateOneWithoutKotaNestedInput
    standard_asal?: standardUpdateManyWithoutKota_asalNestedInput
    standard_tujuan?: standardUpdateManyWithoutKota_tujuanNestedInput
  }

  export type kotaUncheckedUpdateWithoutKota_asalInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_provinsi?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_tujuan?: sptUncheckedUpdateManyWithoutKota_tujuanNestedInput
    kota_tujuan2?: sptUncheckedUpdateManyWithoutKota_tujuan2NestedInput
    spt?: sptUncheckedUpdateManyWithoutKotaNestedInput
    standard_asal?: standardUncheckedUpdateManyWithoutKota_asalNestedInput
    standard_tujuan?: standardUncheckedUpdateManyWithoutKota_tujuanNestedInput
  }

  export type kotaUpsertWithoutKota_tujuanInput = {
    update: XOR<kotaUpdateWithoutKota_tujuanInput, kotaUncheckedUpdateWithoutKota_tujuanInput>
    create: XOR<kotaCreateWithoutKota_tujuanInput, kotaUncheckedCreateWithoutKota_tujuanInput>
    where?: kotaWhereInput
  }

  export type kotaUpdateToOneWithWhereWithoutKota_tujuanInput = {
    where?: kotaWhereInput
    data: XOR<kotaUpdateWithoutKota_tujuanInput, kotaUncheckedUpdateWithoutKota_tujuanInput>
  }

  export type kotaUpdateWithoutKota_tujuanInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: sptUpdateManyWithoutKota_asalNestedInput
    kota_tujuan2?: sptUpdateManyWithoutKota_tujuan2NestedInput
    spt?: sptUpdateManyWithoutKotaNestedInput
    provinsi?: provinsiUpdateOneWithoutKotaNestedInput
    standard_asal?: standardUpdateManyWithoutKota_asalNestedInput
    standard_tujuan?: standardUpdateManyWithoutKota_tujuanNestedInput
  }

  export type kotaUncheckedUpdateWithoutKota_tujuanInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_provinsi?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: sptUncheckedUpdateManyWithoutKota_asalNestedInput
    kota_tujuan2?: sptUncheckedUpdateManyWithoutKota_tujuan2NestedInput
    spt?: sptUncheckedUpdateManyWithoutKotaNestedInput
    standard_asal?: standardUncheckedUpdateManyWithoutKota_asalNestedInput
    standard_tujuan?: standardUncheckedUpdateManyWithoutKota_tujuanNestedInput
  }

  export type kotaUpsertWithoutKota_tujuan2Input = {
    update: XOR<kotaUpdateWithoutKota_tujuan2Input, kotaUncheckedUpdateWithoutKota_tujuan2Input>
    create: XOR<kotaCreateWithoutKota_tujuan2Input, kotaUncheckedCreateWithoutKota_tujuan2Input>
    where?: kotaWhereInput
  }

  export type kotaUpdateToOneWithWhereWithoutKota_tujuan2Input = {
    where?: kotaWhereInput
    data: XOR<kotaUpdateWithoutKota_tujuan2Input, kotaUncheckedUpdateWithoutKota_tujuan2Input>
  }

  export type kotaUpdateWithoutKota_tujuan2Input = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: sptUpdateManyWithoutKota_asalNestedInput
    kota_tujuan?: sptUpdateManyWithoutKota_tujuanNestedInput
    spt?: sptUpdateManyWithoutKotaNestedInput
    provinsi?: provinsiUpdateOneWithoutKotaNestedInput
    standard_asal?: standardUpdateManyWithoutKota_asalNestedInput
    standard_tujuan?: standardUpdateManyWithoutKota_tujuanNestedInput
  }

  export type kotaUncheckedUpdateWithoutKota_tujuan2Input = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_provinsi?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: sptUncheckedUpdateManyWithoutKota_asalNestedInput
    kota_tujuan?: sptUncheckedUpdateManyWithoutKota_tujuanNestedInput
    spt?: sptUncheckedUpdateManyWithoutKotaNestedInput
    standard_asal?: standardUncheckedUpdateManyWithoutKota_asalNestedInput
    standard_tujuan?: standardUncheckedUpdateManyWithoutKota_tujuanNestedInput
  }

  export type opdUpsertWithoutSptInput = {
    update: XOR<opdUpdateWithoutSptInput, opdUncheckedUpdateWithoutSptInput>
    create: XOR<opdCreateWithoutSptInput, opdUncheckedCreateWithoutSptInput>
    where?: opdWhereInput
  }

  export type opdUpdateToOneWithWhereWithoutSptInput = {
    where?: opdWhereInput
    data: XOR<opdUpdateWithoutSptInput, opdUncheckedUpdateWithoutSptInput>
  }

  export type opdUpdateWithoutSptInput = {
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateManyWithoutOpdNestedInput
    setting?: settingUpdateManyWithoutOpdNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutOpdNestedInput
    standard?: standardUpdateManyWithoutOpdNestedInput
    kegiatan?: kegiatanUpdateManyWithoutOpdNestedInput
  }

  export type opdUncheckedUpdateWithoutSptInput = {
    opd_id?: IntFieldUpdateOperationsInput | number
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUncheckedUpdateManyWithoutOpdNestedInput
    setting?: settingUncheckedUpdateManyWithoutOpdNestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutOpdNestedInput
    standard?: standardUncheckedUpdateManyWithoutOpdNestedInput
    kegiatan?: kegiatanUncheckedUpdateManyWithoutOpdNestedInput
  }

  export type kegiatanUpsertWithoutSptInput = {
    update: XOR<kegiatanUpdateWithoutSptInput, kegiatanUncheckedUpdateWithoutSptInput>
    create: XOR<kegiatanCreateWithoutSptInput, kegiatanUncheckedCreateWithoutSptInput>
    where?: kegiatanWhereInput
  }

  export type kegiatanUpdateToOneWithWhereWithoutSptInput = {
    where?: kegiatanWhereInput
    data: XOR<kegiatanUpdateWithoutSptInput, kegiatanUncheckedUpdateWithoutSptInput>
  }

  export type kegiatanUpdateWithoutSptInput = {
    kegiatan_kode?: StringFieldUpdateOperationsInput | string
    kegiatan_program?: StringFieldUpdateOperationsInput | string
    kegiatan_nama?: StringFieldUpdateOperationsInput | string
    kegiatan_subkegiatan?: StringFieldUpdateOperationsInput | string
    kegiatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sumberdana?: sumberdanaUpdateManyWithoutKegiatanNestedInput
    opd?: opdUpdateOneRequiredWithoutKegiatanNestedInput
  }

  export type kegiatanUncheckedUpdateWithoutSptInput = {
    kegiatan_id?: IntFieldUpdateOperationsInput | number
    kegiatan_opd?: IntFieldUpdateOperationsInput | number
    kegiatan_kode?: StringFieldUpdateOperationsInput | string
    kegiatan_program?: StringFieldUpdateOperationsInput | string
    kegiatan_nama?: StringFieldUpdateOperationsInput | string
    kegiatan_subkegiatan?: StringFieldUpdateOperationsInput | string
    kegiatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutKegiatanNestedInput
  }

  export type sumberdanaUpsertWithoutSptInput = {
    update: XOR<sumberdanaUpdateWithoutSptInput, sumberdanaUncheckedUpdateWithoutSptInput>
    create: XOR<sumberdanaCreateWithoutSptInput, sumberdanaUncheckedCreateWithoutSptInput>
    where?: sumberdanaWhereInput
  }

  export type sumberdanaUpdateToOneWithWhereWithoutSptInput = {
    where?: sumberdanaWhereInput
    data: XOR<sumberdanaUpdateWithoutSptInput, sumberdanaUncheckedUpdateWithoutSptInput>
  }

  export type sumberdanaUpdateWithoutSptInput = {
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    opd?: opdUpdateOneRequiredWithoutSumberdanaNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSumberdanaNestedInput
    users?: usersUpdateOneRequiredWithoutSumberdanaNestedInput
    bendahara?: usersUpdateOneRequiredWithoutSumberdana_bendaharaNestedInput
    pengguna_anggaran?: usersUpdateOneRequiredWithoutSumberdana_paNestedInput
    ttd_gajian?: ttd_gajianUpdateManyWithoutSumberdanaNestedInput
  }

  export type sumberdanaUncheckedUpdateWithoutSptInput = {
    sd_id?: IntFieldUpdateOperationsInput | number
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_opd?: IntFieldUpdateOperationsInput | number
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_kegiatan?: IntFieldUpdateOperationsInput | number
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_pptk?: IntFieldUpdateOperationsInput | number
    sd_pa?: IntFieldUpdateOperationsInput | number
    sd_bendahara?: IntFieldUpdateOperationsInput | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ttd_gajian?: ttd_gajianUncheckedUpdateManyWithoutSumberdanaNestedInput
  }

  export type kategoriUpsertWithoutSptInput = {
    update: XOR<kategoriUpdateWithoutSptInput, kategoriUncheckedUpdateWithoutSptInput>
    create: XOR<kategoriCreateWithoutSptInput, kategoriUncheckedCreateWithoutSptInput>
    where?: kategoriWhereInput
  }

  export type kategoriUpdateToOneWithWhereWithoutSptInput = {
    where?: kategoriWhereInput
    data: XOR<kategoriUpdateWithoutSptInput, kategoriUncheckedUpdateWithoutSptInput>
  }

  export type kategoriUpdateWithoutSptInput = {
    kategori_nama?: StringFieldUpdateOperationsInput | string
    kategori_opd?: IntFieldUpdateOperationsInput | number
    kategori_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type kategoriUncheckedUpdateWithoutSptInput = {
    kategori_id?: IntFieldUpdateOperationsInput | number
    kategori_nama?: StringFieldUpdateOperationsInput | string
    kategori_opd?: IntFieldUpdateOperationsInput | number
    kategori_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kategori_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type kotaUpsertWithoutSptInput = {
    update: XOR<kotaUpdateWithoutSptInput, kotaUncheckedUpdateWithoutSptInput>
    create: XOR<kotaCreateWithoutSptInput, kotaUncheckedCreateWithoutSptInput>
    where?: kotaWhereInput
  }

  export type kotaUpdateToOneWithWhereWithoutSptInput = {
    where?: kotaWhereInput
    data: XOR<kotaUpdateWithoutSptInput, kotaUncheckedUpdateWithoutSptInput>
  }

  export type kotaUpdateWithoutSptInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: sptUpdateManyWithoutKota_asalNestedInput
    kota_tujuan?: sptUpdateManyWithoutKota_tujuanNestedInput
    kota_tujuan2?: sptUpdateManyWithoutKota_tujuan2NestedInput
    provinsi?: provinsiUpdateOneWithoutKotaNestedInput
    standard_asal?: standardUpdateManyWithoutKota_asalNestedInput
    standard_tujuan?: standardUpdateManyWithoutKota_tujuanNestedInput
  }

  export type kotaUncheckedUpdateWithoutSptInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_provinsi?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: sptUncheckedUpdateManyWithoutKota_asalNestedInput
    kota_tujuan?: sptUncheckedUpdateManyWithoutKota_tujuanNestedInput
    kota_tujuan2?: sptUncheckedUpdateManyWithoutKota_tujuan2NestedInput
    standard_asal?: standardUncheckedUpdateManyWithoutKota_asalNestedInput
    standard_tujuan?: standardUncheckedUpdateManyWithoutKota_tujuanNestedInput
  }

  export type sptCreateWithoutSpt_pegawaiInput = {
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    users_pj: usersCreateNestedOneWithoutPjInput
    users_pj2: usersCreateNestedOneWithoutPj2Input
    kota_asal: kotaCreateNestedOneWithoutKota_asalInput
    kota_tujuan: kotaCreateNestedOneWithoutKota_tujuanInput
    kota_tujuan2?: kotaCreateNestedOneWithoutKota_tujuan2Input
    opd: opdCreateNestedOneWithoutSptInput
    kegiatan: kegiatanCreateNestedOneWithoutSptInput
    sumber_dana: sumberdanaCreateNestedOneWithoutSptInput
    kategori: kategoriCreateNestedOneWithoutSptInput
    kota?: kotaCreateNestedOneWithoutSptInput
  }

  export type sptUncheckedCreateWithoutSpt_pegawaiInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
  }

  export type sptCreateOrConnectWithoutSpt_pegawaiInput = {
    where: sptWhereUniqueInput
    create: XOR<sptCreateWithoutSpt_pegawaiInput, sptUncheckedCreateWithoutSpt_pegawaiInput>
  }

  export type usersCreateWithoutSpt_pegawaiInput = {
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    pj?: sptCreateNestedManyWithoutUsers_pjInput
    pj2?: sptCreateNestedManyWithoutUsers_pj2Input
    opd: opdCreateNestedOneWithoutUsersInput
    jabatan: jabatanCreateNestedOneWithoutUsersInput
    sumberdana?: sumberdanaCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankCreateNestedManyWithoutUserInput
    gajian?: gajianCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutSpt_pegawaiInput = {
    user_id?: number
    user_opd: number
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_jabatan: number
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    pj?: sptUncheckedCreateNestedManyWithoutUsers_pjInput
    pj2?: sptUncheckedCreateNestedManyWithoutUsers_pj2Input
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaUncheckedCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaUncheckedCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankUncheckedCreateNestedManyWithoutUserInput
    gajian?: gajianUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutSpt_pegawaiInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSpt_pegawaiInput, usersUncheckedCreateWithoutSpt_pegawaiInput>
  }

  export type biayaCreateWithoutSpt_pegawaiInput = {
    biaya_komponen: number
    biaya_standard: number
    biaya_nilai: number
    biaya_keterangan1?: string | null
    biaya_keterangan2?: string | null
    biaya_keterangan3?: string | null
    biaya_keterangan4?: string | null
    biaya_bukti?: string | null
    biaya_created?: Date | string
    biaya_updated?: Date | string | null
  }

  export type biayaUncheckedCreateWithoutSpt_pegawaiInput = {
    biaya_komponen: number
    biaya_standard: number
    biaya_nilai: number
    biaya_keterangan1?: string | null
    biaya_keterangan2?: string | null
    biaya_keterangan3?: string | null
    biaya_keterangan4?: string | null
    biaya_bukti?: string | null
    biaya_created?: Date | string
    biaya_updated?: Date | string | null
  }

  export type biayaCreateOrConnectWithoutSpt_pegawaiInput = {
    where: biayaWhereUniqueInput
    create: XOR<biayaCreateWithoutSpt_pegawaiInput, biayaUncheckedCreateWithoutSpt_pegawaiInput>
  }

  export type biayaCreateManySpt_pegawaiInputEnvelope = {
    data: biayaCreateManySpt_pegawaiInput | biayaCreateManySpt_pegawaiInput[]
    skipDuplicates?: boolean
  }

  export type npdCreateWithoutSpt_pegawaiInput = {
    npd_tgl: Date | string
    npd_nominal: bigint | number
    npd_created?: Date | string
    npd_updated?: Date | string
  }

  export type npdUncheckedCreateWithoutSpt_pegawaiInput = {
    npd_tgl: Date | string
    npd_nominal: bigint | number
    npd_created?: Date | string
    npd_updated?: Date | string
  }

  export type npdCreateOrConnectWithoutSpt_pegawaiInput = {
    where: npdWhereUniqueInput
    create: XOR<npdCreateWithoutSpt_pegawaiInput, npdUncheckedCreateWithoutSpt_pegawaiInput>
  }

  export type npdCreateManySpt_pegawaiInputEnvelope = {
    data: npdCreateManySpt_pegawaiInput | npdCreateManySpt_pegawaiInput[]
    skipDuplicates?: boolean
  }

  export type laporanCreateWithoutSpt_pegawaiInput = {
    laporan_isi: string
    laporan_created?: Date | string
    laporan_updated?: Date | string
  }

  export type laporanUncheckedCreateWithoutSpt_pegawaiInput = {
    laporan_id?: number
    laporan_isi: string
    laporan_created?: Date | string
    laporan_updated?: Date | string
  }

  export type laporanCreateOrConnectWithoutSpt_pegawaiInput = {
    where: laporanWhereUniqueInput
    create: XOR<laporanCreateWithoutSpt_pegawaiInput, laporanUncheckedCreateWithoutSpt_pegawaiInput>
  }

  export type kwitansiCreateWithoutSpt_pegawaiInput = {
    kwitansi_nomor: string
    kwitansi_opd: number
    kwitansi_created?: Date | string
    kwitansi_updated?: Date | string
  }

  export type kwitansiUncheckedCreateWithoutSpt_pegawaiInput = {
    kwitansi_nomor: string
    kwitansi_opd: number
    kwitansi_created?: Date | string
    kwitansi_updated?: Date | string
  }

  export type kwitansiCreateOrConnectWithoutSpt_pegawaiInput = {
    where: kwitansiWhereUniqueInput
    create: XOR<kwitansiCreateWithoutSpt_pegawaiInput, kwitansiUncheckedCreateWithoutSpt_pegawaiInput>
  }

  export type sptUpsertWithoutSpt_pegawaiInput = {
    update: XOR<sptUpdateWithoutSpt_pegawaiInput, sptUncheckedUpdateWithoutSpt_pegawaiInput>
    create: XOR<sptCreateWithoutSpt_pegawaiInput, sptUncheckedCreateWithoutSpt_pegawaiInput>
    where?: sptWhereInput
  }

  export type sptUpdateToOneWithWhereWithoutSpt_pegawaiInput = {
    where?: sptWhereInput
    data: XOR<sptUpdateWithoutSpt_pegawaiInput, sptUncheckedUpdateWithoutSpt_pegawaiInput>
  }

  export type sptUpdateWithoutSpt_pegawaiInput = {
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_pj?: usersUpdateOneRequiredWithoutPjNestedInput
    users_pj2?: usersUpdateOneRequiredWithoutPj2NestedInput
    kota_asal?: kotaUpdateOneRequiredWithoutKota_asalNestedInput
    kota_tujuan?: kotaUpdateOneRequiredWithoutKota_tujuanNestedInput
    kota_tujuan2?: kotaUpdateOneWithoutKota_tujuan2NestedInput
    opd?: opdUpdateOneRequiredWithoutSptNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSptNestedInput
    sumber_dana?: sumberdanaUpdateOneRequiredWithoutSptNestedInput
    kategori?: kategoriUpdateOneRequiredWithoutSptNestedInput
    kota?: kotaUpdateOneWithoutSptNestedInput
  }

  export type sptUncheckedUpdateWithoutSpt_pegawaiInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usersUpsertWithoutSpt_pegawaiInput = {
    update: XOR<usersUpdateWithoutSpt_pegawaiInput, usersUncheckedUpdateWithoutSpt_pegawaiInput>
    create: XOR<usersCreateWithoutSpt_pegawaiInput, usersUncheckedCreateWithoutSpt_pegawaiInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutSpt_pegawaiInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutSpt_pegawaiInput, usersUncheckedUpdateWithoutSpt_pegawaiInput>
  }

  export type usersUpdateWithoutSpt_pegawaiInput = {
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pj?: sptUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUpdateManyWithoutUsers_pj2NestedInput
    opd?: opdUpdateOneRequiredWithoutUsersNestedInput
    jabatan?: jabatanUpdateOneRequiredWithoutUsersNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUpdateManyWithoutUserNestedInput
    gajian?: gajianUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutSpt_pegawaiInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_opd?: IntFieldUpdateOperationsInput | number
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_jabatan?: IntFieldUpdateOperationsInput | number
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pj?: sptUncheckedUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUncheckedUpdateManyWithoutUsers_pj2NestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUncheckedUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUncheckedUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUncheckedUpdateManyWithoutUserNestedInput
    gajian?: gajianUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type biayaUpsertWithWhereUniqueWithoutSpt_pegawaiInput = {
    where: biayaWhereUniqueInput
    update: XOR<biayaUpdateWithoutSpt_pegawaiInput, biayaUncheckedUpdateWithoutSpt_pegawaiInput>
    create: XOR<biayaCreateWithoutSpt_pegawaiInput, biayaUncheckedCreateWithoutSpt_pegawaiInput>
  }

  export type biayaUpdateWithWhereUniqueWithoutSpt_pegawaiInput = {
    where: biayaWhereUniqueInput
    data: XOR<biayaUpdateWithoutSpt_pegawaiInput, biayaUncheckedUpdateWithoutSpt_pegawaiInput>
  }

  export type biayaUpdateManyWithWhereWithoutSpt_pegawaiInput = {
    where: biayaScalarWhereInput
    data: XOR<biayaUpdateManyMutationInput, biayaUncheckedUpdateManyWithoutSpt_pegawaiInput>
  }

  export type biayaScalarWhereInput = {
    AND?: biayaScalarWhereInput | biayaScalarWhereInput[]
    OR?: biayaScalarWhereInput[]
    NOT?: biayaScalarWhereInput | biayaScalarWhereInput[]
    biaya_komponen?: IntFilter<"biaya"> | number
    biaya_standard?: IntFilter<"biaya"> | number
    biaya_nilai?: IntFilter<"biaya"> | number
    biaya_keterangan1?: StringNullableFilter<"biaya"> | string | null
    biaya_keterangan2?: StringNullableFilter<"biaya"> | string | null
    biaya_keterangan3?: StringNullableFilter<"biaya"> | string | null
    biaya_keterangan4?: StringNullableFilter<"biaya"> | string | null
    biaya_bukti?: StringNullableFilter<"biaya"> | string | null
    biaya_created?: DateTimeFilter<"biaya"> | Date | string
    biaya_updated?: DateTimeNullableFilter<"biaya"> | Date | string | null
    biaya_spt_pegawai?: IntFilter<"biaya"> | number
  }

  export type npdUpsertWithWhereUniqueWithoutSpt_pegawaiInput = {
    where: npdWhereUniqueInput
    update: XOR<npdUpdateWithoutSpt_pegawaiInput, npdUncheckedUpdateWithoutSpt_pegawaiInput>
    create: XOR<npdCreateWithoutSpt_pegawaiInput, npdUncheckedCreateWithoutSpt_pegawaiInput>
  }

  export type npdUpdateWithWhereUniqueWithoutSpt_pegawaiInput = {
    where: npdWhereUniqueInput
    data: XOR<npdUpdateWithoutSpt_pegawaiInput, npdUncheckedUpdateWithoutSpt_pegawaiInput>
  }

  export type npdUpdateManyWithWhereWithoutSpt_pegawaiInput = {
    where: npdScalarWhereInput
    data: XOR<npdUpdateManyMutationInput, npdUncheckedUpdateManyWithoutSpt_pegawaiInput>
  }

  export type npdScalarWhereInput = {
    AND?: npdScalarWhereInput | npdScalarWhereInput[]
    OR?: npdScalarWhereInput[]
    NOT?: npdScalarWhereInput | npdScalarWhereInput[]
    npd_spt_pegawai?: IntFilter<"npd"> | number
    npd_tgl?: DateTimeFilter<"npd"> | Date | string
    npd_nominal?: BigIntFilter<"npd"> | bigint | number
    npd_created?: DateTimeFilter<"npd"> | Date | string
    npd_updated?: DateTimeFilter<"npd"> | Date | string
  }

  export type laporanUpsertWithoutSpt_pegawaiInput = {
    update: XOR<laporanUpdateWithoutSpt_pegawaiInput, laporanUncheckedUpdateWithoutSpt_pegawaiInput>
    create: XOR<laporanCreateWithoutSpt_pegawaiInput, laporanUncheckedCreateWithoutSpt_pegawaiInput>
    where?: laporanWhereInput
  }

  export type laporanUpdateToOneWithWhereWithoutSpt_pegawaiInput = {
    where?: laporanWhereInput
    data: XOR<laporanUpdateWithoutSpt_pegawaiInput, laporanUncheckedUpdateWithoutSpt_pegawaiInput>
  }

  export type laporanUpdateWithoutSpt_pegawaiInput = {
    laporan_isi?: StringFieldUpdateOperationsInput | string
    laporan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    laporan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type laporanUncheckedUpdateWithoutSpt_pegawaiInput = {
    laporan_id?: IntFieldUpdateOperationsInput | number
    laporan_isi?: StringFieldUpdateOperationsInput | string
    laporan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    laporan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type kwitansiUpsertWithoutSpt_pegawaiInput = {
    update: XOR<kwitansiUpdateWithoutSpt_pegawaiInput, kwitansiUncheckedUpdateWithoutSpt_pegawaiInput>
    create: XOR<kwitansiCreateWithoutSpt_pegawaiInput, kwitansiUncheckedCreateWithoutSpt_pegawaiInput>
    where?: kwitansiWhereInput
  }

  export type kwitansiUpdateToOneWithWhereWithoutSpt_pegawaiInput = {
    where?: kwitansiWhereInput
    data: XOR<kwitansiUpdateWithoutSpt_pegawaiInput, kwitansiUncheckedUpdateWithoutSpt_pegawaiInput>
  }

  export type kwitansiUpdateWithoutSpt_pegawaiInput = {
    kwitansi_nomor?: StringFieldUpdateOperationsInput | string
    kwitansi_opd?: IntFieldUpdateOperationsInput | number
    kwitansi_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kwitansi_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type kwitansiUncheckedUpdateWithoutSpt_pegawaiInput = {
    kwitansi_nomor?: StringFieldUpdateOperationsInput | string
    kwitansi_opd?: IntFieldUpdateOperationsInput | number
    kwitansi_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kwitansi_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type spt_pegawaiCreateWithoutNpdInput = {
    sp_nomor_sppd: string
    sp_seq: number
    spt: sptCreateNestedOneWithoutSpt_pegawaiInput
    users: usersCreateNestedOneWithoutSpt_pegawaiInput
    biaya?: biayaCreateNestedManyWithoutSpt_pegawaiInput
    laporan?: laporanCreateNestedOneWithoutSpt_pegawaiInput
    kwitansi?: kwitansiCreateNestedOneWithoutSpt_pegawaiInput
  }

  export type spt_pegawaiUncheckedCreateWithoutNpdInput = {
    sp_id?: number
    sp_spt: number
    sp_user: number
    sp_nomor_sppd: string
    sp_seq: number
    biaya?: biayaUncheckedCreateNestedManyWithoutSpt_pegawaiInput
    laporan?: laporanUncheckedCreateNestedOneWithoutSpt_pegawaiInput
    kwitansi?: kwitansiUncheckedCreateNestedOneWithoutSpt_pegawaiInput
  }

  export type spt_pegawaiCreateOrConnectWithoutNpdInput = {
    where: spt_pegawaiWhereUniqueInput
    create: XOR<spt_pegawaiCreateWithoutNpdInput, spt_pegawaiUncheckedCreateWithoutNpdInput>
  }

  export type spt_pegawaiUpsertWithoutNpdInput = {
    update: XOR<spt_pegawaiUpdateWithoutNpdInput, spt_pegawaiUncheckedUpdateWithoutNpdInput>
    create: XOR<spt_pegawaiCreateWithoutNpdInput, spt_pegawaiUncheckedCreateWithoutNpdInput>
    where?: spt_pegawaiWhereInput
  }

  export type spt_pegawaiUpdateToOneWithWhereWithoutNpdInput = {
    where?: spt_pegawaiWhereInput
    data: XOR<spt_pegawaiUpdateWithoutNpdInput, spt_pegawaiUncheckedUpdateWithoutNpdInput>
  }

  export type spt_pegawaiUpdateWithoutNpdInput = {
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
    spt?: sptUpdateOneRequiredWithoutSpt_pegawaiNestedInput
    users?: usersUpdateOneRequiredWithoutSpt_pegawaiNestedInput
    biaya?: biayaUpdateManyWithoutSpt_pegawaiNestedInput
    laporan?: laporanUpdateOneWithoutSpt_pegawaiNestedInput
    kwitansi?: kwitansiUpdateOneWithoutSpt_pegawaiNestedInput
  }

  export type spt_pegawaiUncheckedUpdateWithoutNpdInput = {
    sp_id?: IntFieldUpdateOperationsInput | number
    sp_spt?: IntFieldUpdateOperationsInput | number
    sp_user?: IntFieldUpdateOperationsInput | number
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
    biaya?: biayaUncheckedUpdateManyWithoutSpt_pegawaiNestedInput
    laporan?: laporanUncheckedUpdateOneWithoutSpt_pegawaiNestedInput
    kwitansi?: kwitansiUncheckedUpdateOneWithoutSpt_pegawaiNestedInput
  }

  export type spt_pegawaiCreateWithoutBiayaInput = {
    sp_nomor_sppd: string
    sp_seq: number
    spt: sptCreateNestedOneWithoutSpt_pegawaiInput
    users: usersCreateNestedOneWithoutSpt_pegawaiInput
    npd?: npdCreateNestedManyWithoutSpt_pegawaiInput
    laporan?: laporanCreateNestedOneWithoutSpt_pegawaiInput
    kwitansi?: kwitansiCreateNestedOneWithoutSpt_pegawaiInput
  }

  export type spt_pegawaiUncheckedCreateWithoutBiayaInput = {
    sp_id?: number
    sp_spt: number
    sp_user: number
    sp_nomor_sppd: string
    sp_seq: number
    npd?: npdUncheckedCreateNestedManyWithoutSpt_pegawaiInput
    laporan?: laporanUncheckedCreateNestedOneWithoutSpt_pegawaiInput
    kwitansi?: kwitansiUncheckedCreateNestedOneWithoutSpt_pegawaiInput
  }

  export type spt_pegawaiCreateOrConnectWithoutBiayaInput = {
    where: spt_pegawaiWhereUniqueInput
    create: XOR<spt_pegawaiCreateWithoutBiayaInput, spt_pegawaiUncheckedCreateWithoutBiayaInput>
  }

  export type spt_pegawaiUpsertWithoutBiayaInput = {
    update: XOR<spt_pegawaiUpdateWithoutBiayaInput, spt_pegawaiUncheckedUpdateWithoutBiayaInput>
    create: XOR<spt_pegawaiCreateWithoutBiayaInput, spt_pegawaiUncheckedCreateWithoutBiayaInput>
    where?: spt_pegawaiWhereInput
  }

  export type spt_pegawaiUpdateToOneWithWhereWithoutBiayaInput = {
    where?: spt_pegawaiWhereInput
    data: XOR<spt_pegawaiUpdateWithoutBiayaInput, spt_pegawaiUncheckedUpdateWithoutBiayaInput>
  }

  export type spt_pegawaiUpdateWithoutBiayaInput = {
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
    spt?: sptUpdateOneRequiredWithoutSpt_pegawaiNestedInput
    users?: usersUpdateOneRequiredWithoutSpt_pegawaiNestedInput
    npd?: npdUpdateManyWithoutSpt_pegawaiNestedInput
    laporan?: laporanUpdateOneWithoutSpt_pegawaiNestedInput
    kwitansi?: kwitansiUpdateOneWithoutSpt_pegawaiNestedInput
  }

  export type spt_pegawaiUncheckedUpdateWithoutBiayaInput = {
    sp_id?: IntFieldUpdateOperationsInput | number
    sp_spt?: IntFieldUpdateOperationsInput | number
    sp_user?: IntFieldUpdateOperationsInput | number
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
    npd?: npdUncheckedUpdateManyWithoutSpt_pegawaiNestedInput
    laporan?: laporanUncheckedUpdateOneWithoutSpt_pegawaiNestedInput
    kwitansi?: kwitansiUncheckedUpdateOneWithoutSpt_pegawaiNestedInput
  }

  export type kotaCreateWithoutProvinsiInput = {
    kota_id: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_asal?: sptCreateNestedManyWithoutKota_asalInput
    kota_tujuan?: sptCreateNestedManyWithoutKota_tujuanInput
    kota_tujuan2?: sptCreateNestedManyWithoutKota_tujuan2Input
    spt?: sptCreateNestedManyWithoutKotaInput
    standard_asal?: standardCreateNestedManyWithoutKota_asalInput
    standard_tujuan?: standardCreateNestedManyWithoutKota_tujuanInput
  }

  export type kotaUncheckedCreateWithoutProvinsiInput = {
    kota_id: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_asal?: sptUncheckedCreateNestedManyWithoutKota_asalInput
    kota_tujuan?: sptUncheckedCreateNestedManyWithoutKota_tujuanInput
    kota_tujuan2?: sptUncheckedCreateNestedManyWithoutKota_tujuan2Input
    spt?: sptUncheckedCreateNestedManyWithoutKotaInput
    standard_asal?: standardUncheckedCreateNestedManyWithoutKota_asalInput
    standard_tujuan?: standardUncheckedCreateNestedManyWithoutKota_tujuanInput
  }

  export type kotaCreateOrConnectWithoutProvinsiInput = {
    where: kotaWhereUniqueInput
    create: XOR<kotaCreateWithoutProvinsiInput, kotaUncheckedCreateWithoutProvinsiInput>
  }

  export type kotaCreateManyProvinsiInputEnvelope = {
    data: kotaCreateManyProvinsiInput | kotaCreateManyProvinsiInput[]
    skipDuplicates?: boolean
  }

  export type kotaUpsertWithWhereUniqueWithoutProvinsiInput = {
    where: kotaWhereUniqueInput
    update: XOR<kotaUpdateWithoutProvinsiInput, kotaUncheckedUpdateWithoutProvinsiInput>
    create: XOR<kotaCreateWithoutProvinsiInput, kotaUncheckedCreateWithoutProvinsiInput>
  }

  export type kotaUpdateWithWhereUniqueWithoutProvinsiInput = {
    where: kotaWhereUniqueInput
    data: XOR<kotaUpdateWithoutProvinsiInput, kotaUncheckedUpdateWithoutProvinsiInput>
  }

  export type kotaUpdateManyWithWhereWithoutProvinsiInput = {
    where: kotaScalarWhereInput
    data: XOR<kotaUpdateManyMutationInput, kotaUncheckedUpdateManyWithoutProvinsiInput>
  }

  export type kotaScalarWhereInput = {
    AND?: kotaScalarWhereInput | kotaScalarWhereInput[]
    OR?: kotaScalarWhereInput[]
    NOT?: kotaScalarWhereInput | kotaScalarWhereInput[]
    kota_id?: IntFilter<"kota"> | number
    kota_provinsi?: IntFilter<"kota"> | number
    kota_nama?: StringFilter<"kota"> | string
    kota_dalam_daerah?: BoolFilter<"kota"> | boolean
    kota_created?: DateTimeFilter<"kota"> | Date | string
    kota_updated?: DateTimeFilter<"kota"> | Date | string
    kota_deleted?: DateTimeNullableFilter<"kota"> | Date | string | null
  }

  export type sptCreateWithoutKota_asalInput = {
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutSptInput
    users_pj: usersCreateNestedOneWithoutPjInput
    users_pj2: usersCreateNestedOneWithoutPj2Input
    kota_tujuan: kotaCreateNestedOneWithoutKota_tujuanInput
    kota_tujuan2?: kotaCreateNestedOneWithoutKota_tujuan2Input
    opd: opdCreateNestedOneWithoutSptInput
    kegiatan: kegiatanCreateNestedOneWithoutSptInput
    sumber_dana: sumberdanaCreateNestedOneWithoutSptInput
    kategori: kategoriCreateNestedOneWithoutSptInput
    kota?: kotaCreateNestedOneWithoutSptInput
  }

  export type sptUncheckedCreateWithoutKota_asalInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutSptInput
  }

  export type sptCreateOrConnectWithoutKota_asalInput = {
    where: sptWhereUniqueInput
    create: XOR<sptCreateWithoutKota_asalInput, sptUncheckedCreateWithoutKota_asalInput>
  }

  export type sptCreateManyKota_asalInputEnvelope = {
    data: sptCreateManyKota_asalInput | sptCreateManyKota_asalInput[]
    skipDuplicates?: boolean
  }

  export type sptCreateWithoutKota_tujuanInput = {
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutSptInput
    users_pj: usersCreateNestedOneWithoutPjInput
    users_pj2: usersCreateNestedOneWithoutPj2Input
    kota_asal: kotaCreateNestedOneWithoutKota_asalInput
    kota_tujuan2?: kotaCreateNestedOneWithoutKota_tujuan2Input
    opd: opdCreateNestedOneWithoutSptInput
    kegiatan: kegiatanCreateNestedOneWithoutSptInput
    sumber_dana: sumberdanaCreateNestedOneWithoutSptInput
    kategori: kategoriCreateNestedOneWithoutSptInput
    kota?: kotaCreateNestedOneWithoutSptInput
  }

  export type sptUncheckedCreateWithoutKota_tujuanInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutSptInput
  }

  export type sptCreateOrConnectWithoutKota_tujuanInput = {
    where: sptWhereUniqueInput
    create: XOR<sptCreateWithoutKota_tujuanInput, sptUncheckedCreateWithoutKota_tujuanInput>
  }

  export type sptCreateManyKota_tujuanInputEnvelope = {
    data: sptCreateManyKota_tujuanInput | sptCreateManyKota_tujuanInput[]
    skipDuplicates?: boolean
  }

  export type sptCreateWithoutKota_tujuan2Input = {
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutSptInput
    users_pj: usersCreateNestedOneWithoutPjInput
    users_pj2: usersCreateNestedOneWithoutPj2Input
    kota_asal: kotaCreateNestedOneWithoutKota_asalInput
    kota_tujuan: kotaCreateNestedOneWithoutKota_tujuanInput
    opd: opdCreateNestedOneWithoutSptInput
    kegiatan: kegiatanCreateNestedOneWithoutSptInput
    sumber_dana: sumberdanaCreateNestedOneWithoutSptInput
    kategori: kategoriCreateNestedOneWithoutSptInput
    kota?: kotaCreateNestedOneWithoutSptInput
  }

  export type sptUncheckedCreateWithoutKota_tujuan2Input = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutSptInput
  }

  export type sptCreateOrConnectWithoutKota_tujuan2Input = {
    where: sptWhereUniqueInput
    create: XOR<sptCreateWithoutKota_tujuan2Input, sptUncheckedCreateWithoutKota_tujuan2Input>
  }

  export type sptCreateManyKota_tujuan2InputEnvelope = {
    data: sptCreateManyKota_tujuan2Input | sptCreateManyKota_tujuan2Input[]
    skipDuplicates?: boolean
  }

  export type sptCreateWithoutKotaInput = {
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutSptInput
    users_pj: usersCreateNestedOneWithoutPjInput
    users_pj2: usersCreateNestedOneWithoutPj2Input
    kota_asal: kotaCreateNestedOneWithoutKota_asalInput
    kota_tujuan: kotaCreateNestedOneWithoutKota_tujuanInput
    kota_tujuan2?: kotaCreateNestedOneWithoutKota_tujuan2Input
    opd: opdCreateNestedOneWithoutSptInput
    kegiatan: kegiatanCreateNestedOneWithoutSptInput
    sumber_dana: sumberdanaCreateNestedOneWithoutSptInput
    kategori: kategoriCreateNestedOneWithoutSptInput
  }

  export type sptUncheckedCreateWithoutKotaInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutSptInput
  }

  export type sptCreateOrConnectWithoutKotaInput = {
    where: sptWhereUniqueInput
    create: XOR<sptCreateWithoutKotaInput, sptUncheckedCreateWithoutKotaInput>
  }

  export type sptCreateManyKotaInputEnvelope = {
    data: sptCreateManyKotaInput | sptCreateManyKotaInput[]
    skipDuplicates?: boolean
  }

  export type provinsiCreateWithoutKotaInput = {
    provinsi_id: number
    provinsi_nama: string
  }

  export type provinsiUncheckedCreateWithoutKotaInput = {
    provinsi_id: number
    provinsi_nama: string
  }

  export type provinsiCreateOrConnectWithoutKotaInput = {
    where: provinsiWhereUniqueInput
    create: XOR<provinsiCreateWithoutKotaInput, provinsiUncheckedCreateWithoutKotaInput>
  }

  export type standardCreateWithoutKota_asalInput = {
    standard_kode: number
    standard_via: number
    standard_kelas: number
    standard_nominal: number
    standard_created?: Date | string
    standard_updated?: Date | string
    standard_deleted?: Date | string | null
    kota_tujuan?: kotaCreateNestedOneWithoutStandard_tujuanInput
    opd: opdCreateNestedOneWithoutStandardInput
  }

  export type standardUncheckedCreateWithoutKota_asalInput = {
    standard_id?: number
    standard_kode: number
    standard_opd: number
    standard_kota_tujuan: number
    standard_via: number
    standard_kelas: number
    standard_nominal: number
    standard_created?: Date | string
    standard_updated?: Date | string
    standard_deleted?: Date | string | null
  }

  export type standardCreateOrConnectWithoutKota_asalInput = {
    where: standardWhereUniqueInput
    create: XOR<standardCreateWithoutKota_asalInput, standardUncheckedCreateWithoutKota_asalInput>
  }

  export type standardCreateManyKota_asalInputEnvelope = {
    data: standardCreateManyKota_asalInput | standardCreateManyKota_asalInput[]
    skipDuplicates?: boolean
  }

  export type standardCreateWithoutKota_tujuanInput = {
    standard_kode: number
    standard_via: number
    standard_kelas: number
    standard_nominal: number
    standard_created?: Date | string
    standard_updated?: Date | string
    standard_deleted?: Date | string | null
    kota_asal?: kotaCreateNestedOneWithoutStandard_asalInput
    opd: opdCreateNestedOneWithoutStandardInput
  }

  export type standardUncheckedCreateWithoutKota_tujuanInput = {
    standard_id?: number
    standard_kode: number
    standard_opd: number
    standard_kota_asal: number
    standard_via: number
    standard_kelas: number
    standard_nominal: number
    standard_created?: Date | string
    standard_updated?: Date | string
    standard_deleted?: Date | string | null
  }

  export type standardCreateOrConnectWithoutKota_tujuanInput = {
    where: standardWhereUniqueInput
    create: XOR<standardCreateWithoutKota_tujuanInput, standardUncheckedCreateWithoutKota_tujuanInput>
  }

  export type standardCreateManyKota_tujuanInputEnvelope = {
    data: standardCreateManyKota_tujuanInput | standardCreateManyKota_tujuanInput[]
    skipDuplicates?: boolean
  }

  export type sptUpsertWithWhereUniqueWithoutKota_asalInput = {
    where: sptWhereUniqueInput
    update: XOR<sptUpdateWithoutKota_asalInput, sptUncheckedUpdateWithoutKota_asalInput>
    create: XOR<sptCreateWithoutKota_asalInput, sptUncheckedCreateWithoutKota_asalInput>
  }

  export type sptUpdateWithWhereUniqueWithoutKota_asalInput = {
    where: sptWhereUniqueInput
    data: XOR<sptUpdateWithoutKota_asalInput, sptUncheckedUpdateWithoutKota_asalInput>
  }

  export type sptUpdateManyWithWhereWithoutKota_asalInput = {
    where: sptScalarWhereInput
    data: XOR<sptUpdateManyMutationInput, sptUncheckedUpdateManyWithoutKota_asalInput>
  }

  export type sptUpsertWithWhereUniqueWithoutKota_tujuanInput = {
    where: sptWhereUniqueInput
    update: XOR<sptUpdateWithoutKota_tujuanInput, sptUncheckedUpdateWithoutKota_tujuanInput>
    create: XOR<sptCreateWithoutKota_tujuanInput, sptUncheckedCreateWithoutKota_tujuanInput>
  }

  export type sptUpdateWithWhereUniqueWithoutKota_tujuanInput = {
    where: sptWhereUniqueInput
    data: XOR<sptUpdateWithoutKota_tujuanInput, sptUncheckedUpdateWithoutKota_tujuanInput>
  }

  export type sptUpdateManyWithWhereWithoutKota_tujuanInput = {
    where: sptScalarWhereInput
    data: XOR<sptUpdateManyMutationInput, sptUncheckedUpdateManyWithoutKota_tujuanInput>
  }

  export type sptUpsertWithWhereUniqueWithoutKota_tujuan2Input = {
    where: sptWhereUniqueInput
    update: XOR<sptUpdateWithoutKota_tujuan2Input, sptUncheckedUpdateWithoutKota_tujuan2Input>
    create: XOR<sptCreateWithoutKota_tujuan2Input, sptUncheckedCreateWithoutKota_tujuan2Input>
  }

  export type sptUpdateWithWhereUniqueWithoutKota_tujuan2Input = {
    where: sptWhereUniqueInput
    data: XOR<sptUpdateWithoutKota_tujuan2Input, sptUncheckedUpdateWithoutKota_tujuan2Input>
  }

  export type sptUpdateManyWithWhereWithoutKota_tujuan2Input = {
    where: sptScalarWhereInput
    data: XOR<sptUpdateManyMutationInput, sptUncheckedUpdateManyWithoutKota_tujuan2Input>
  }

  export type sptUpsertWithWhereUniqueWithoutKotaInput = {
    where: sptWhereUniqueInput
    update: XOR<sptUpdateWithoutKotaInput, sptUncheckedUpdateWithoutKotaInput>
    create: XOR<sptCreateWithoutKotaInput, sptUncheckedCreateWithoutKotaInput>
  }

  export type sptUpdateWithWhereUniqueWithoutKotaInput = {
    where: sptWhereUniqueInput
    data: XOR<sptUpdateWithoutKotaInput, sptUncheckedUpdateWithoutKotaInput>
  }

  export type sptUpdateManyWithWhereWithoutKotaInput = {
    where: sptScalarWhereInput
    data: XOR<sptUpdateManyMutationInput, sptUncheckedUpdateManyWithoutKotaInput>
  }

  export type provinsiUpsertWithoutKotaInput = {
    update: XOR<provinsiUpdateWithoutKotaInput, provinsiUncheckedUpdateWithoutKotaInput>
    create: XOR<provinsiCreateWithoutKotaInput, provinsiUncheckedCreateWithoutKotaInput>
    where?: provinsiWhereInput
  }

  export type provinsiUpdateToOneWithWhereWithoutKotaInput = {
    where?: provinsiWhereInput
    data: XOR<provinsiUpdateWithoutKotaInput, provinsiUncheckedUpdateWithoutKotaInput>
  }

  export type provinsiUpdateWithoutKotaInput = {
    provinsi_id?: IntFieldUpdateOperationsInput | number
    provinsi_nama?: StringFieldUpdateOperationsInput | string
  }

  export type provinsiUncheckedUpdateWithoutKotaInput = {
    provinsi_id?: IntFieldUpdateOperationsInput | number
    provinsi_nama?: StringFieldUpdateOperationsInput | string
  }

  export type standardUpsertWithWhereUniqueWithoutKota_asalInput = {
    where: standardWhereUniqueInput
    update: XOR<standardUpdateWithoutKota_asalInput, standardUncheckedUpdateWithoutKota_asalInput>
    create: XOR<standardCreateWithoutKota_asalInput, standardUncheckedCreateWithoutKota_asalInput>
  }

  export type standardUpdateWithWhereUniqueWithoutKota_asalInput = {
    where: standardWhereUniqueInput
    data: XOR<standardUpdateWithoutKota_asalInput, standardUncheckedUpdateWithoutKota_asalInput>
  }

  export type standardUpdateManyWithWhereWithoutKota_asalInput = {
    where: standardScalarWhereInput
    data: XOR<standardUpdateManyMutationInput, standardUncheckedUpdateManyWithoutKota_asalInput>
  }

  export type standardScalarWhereInput = {
    AND?: standardScalarWhereInput | standardScalarWhereInput[]
    OR?: standardScalarWhereInput[]
    NOT?: standardScalarWhereInput | standardScalarWhereInput[]
    standard_id?: IntFilter<"standard"> | number
    standard_kode?: IntFilter<"standard"> | number
    standard_opd?: IntFilter<"standard"> | number
    standard_kota_asal?: IntFilter<"standard"> | number
    standard_kota_tujuan?: IntFilter<"standard"> | number
    standard_via?: IntFilter<"standard"> | number
    standard_kelas?: IntFilter<"standard"> | number
    standard_nominal?: IntFilter<"standard"> | number
    standard_created?: DateTimeFilter<"standard"> | Date | string
    standard_updated?: DateTimeFilter<"standard"> | Date | string
    standard_deleted?: DateTimeNullableFilter<"standard"> | Date | string | null
  }

  export type standardUpsertWithWhereUniqueWithoutKota_tujuanInput = {
    where: standardWhereUniqueInput
    update: XOR<standardUpdateWithoutKota_tujuanInput, standardUncheckedUpdateWithoutKota_tujuanInput>
    create: XOR<standardCreateWithoutKota_tujuanInput, standardUncheckedCreateWithoutKota_tujuanInput>
  }

  export type standardUpdateWithWhereUniqueWithoutKota_tujuanInput = {
    where: standardWhereUniqueInput
    data: XOR<standardUpdateWithoutKota_tujuanInput, standardUncheckedUpdateWithoutKota_tujuanInput>
  }

  export type standardUpdateManyWithWhereWithoutKota_tujuanInput = {
    where: standardScalarWhereInput
    data: XOR<standardUpdateManyMutationInput, standardUncheckedUpdateManyWithoutKota_tujuanInput>
  }

  export type spt_pegawaiCreateWithoutLaporanInput = {
    sp_nomor_sppd: string
    sp_seq: number
    spt: sptCreateNestedOneWithoutSpt_pegawaiInput
    users: usersCreateNestedOneWithoutSpt_pegawaiInput
    biaya?: biayaCreateNestedManyWithoutSpt_pegawaiInput
    npd?: npdCreateNestedManyWithoutSpt_pegawaiInput
    kwitansi?: kwitansiCreateNestedOneWithoutSpt_pegawaiInput
  }

  export type spt_pegawaiUncheckedCreateWithoutLaporanInput = {
    sp_id?: number
    sp_spt: number
    sp_user: number
    sp_nomor_sppd: string
    sp_seq: number
    biaya?: biayaUncheckedCreateNestedManyWithoutSpt_pegawaiInput
    npd?: npdUncheckedCreateNestedManyWithoutSpt_pegawaiInput
    kwitansi?: kwitansiUncheckedCreateNestedOneWithoutSpt_pegawaiInput
  }

  export type spt_pegawaiCreateOrConnectWithoutLaporanInput = {
    where: spt_pegawaiWhereUniqueInput
    create: XOR<spt_pegawaiCreateWithoutLaporanInput, spt_pegawaiUncheckedCreateWithoutLaporanInput>
  }

  export type spt_pegawaiUpsertWithoutLaporanInput = {
    update: XOR<spt_pegawaiUpdateWithoutLaporanInput, spt_pegawaiUncheckedUpdateWithoutLaporanInput>
    create: XOR<spt_pegawaiCreateWithoutLaporanInput, spt_pegawaiUncheckedCreateWithoutLaporanInput>
    where?: spt_pegawaiWhereInput
  }

  export type spt_pegawaiUpdateToOneWithWhereWithoutLaporanInput = {
    where?: spt_pegawaiWhereInput
    data: XOR<spt_pegawaiUpdateWithoutLaporanInput, spt_pegawaiUncheckedUpdateWithoutLaporanInput>
  }

  export type spt_pegawaiUpdateWithoutLaporanInput = {
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
    spt?: sptUpdateOneRequiredWithoutSpt_pegawaiNestedInput
    users?: usersUpdateOneRequiredWithoutSpt_pegawaiNestedInput
    biaya?: biayaUpdateManyWithoutSpt_pegawaiNestedInput
    npd?: npdUpdateManyWithoutSpt_pegawaiNestedInput
    kwitansi?: kwitansiUpdateOneWithoutSpt_pegawaiNestedInput
  }

  export type spt_pegawaiUncheckedUpdateWithoutLaporanInput = {
    sp_id?: IntFieldUpdateOperationsInput | number
    sp_spt?: IntFieldUpdateOperationsInput | number
    sp_user?: IntFieldUpdateOperationsInput | number
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
    biaya?: biayaUncheckedUpdateManyWithoutSpt_pegawaiNestedInput
    npd?: npdUncheckedUpdateManyWithoutSpt_pegawaiNestedInput
    kwitansi?: kwitansiUncheckedUpdateOneWithoutSpt_pegawaiNestedInput
  }

  export type opdCreateWithoutSettingInput = {
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
    users?: usersCreateNestedManyWithoutOpdInput
    spt?: sptCreateNestedManyWithoutOpdInput
    sumberdana?: sumberdanaCreateNestedManyWithoutOpdInput
    standard?: standardCreateNestedManyWithoutOpdInput
    kegiatan?: kegiatanCreateNestedManyWithoutOpdInput
  }

  export type opdUncheckedCreateWithoutSettingInput = {
    opd_id?: number
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
    users?: usersUncheckedCreateNestedManyWithoutOpdInput
    spt?: sptUncheckedCreateNestedManyWithoutOpdInput
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutOpdInput
    standard?: standardUncheckedCreateNestedManyWithoutOpdInput
    kegiatan?: kegiatanUncheckedCreateNestedManyWithoutOpdInput
  }

  export type opdCreateOrConnectWithoutSettingInput = {
    where: opdWhereUniqueInput
    create: XOR<opdCreateWithoutSettingInput, opdUncheckedCreateWithoutSettingInput>
  }

  export type opdUpsertWithoutSettingInput = {
    update: XOR<opdUpdateWithoutSettingInput, opdUncheckedUpdateWithoutSettingInput>
    create: XOR<opdCreateWithoutSettingInput, opdUncheckedCreateWithoutSettingInput>
    where?: opdWhereInput
  }

  export type opdUpdateToOneWithWhereWithoutSettingInput = {
    where?: opdWhereInput
    data: XOR<opdUpdateWithoutSettingInput, opdUncheckedUpdateWithoutSettingInput>
  }

  export type opdUpdateWithoutSettingInput = {
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateManyWithoutOpdNestedInput
    spt?: sptUpdateManyWithoutOpdNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutOpdNestedInput
    standard?: standardUpdateManyWithoutOpdNestedInput
    kegiatan?: kegiatanUpdateManyWithoutOpdNestedInput
  }

  export type opdUncheckedUpdateWithoutSettingInput = {
    opd_id?: IntFieldUpdateOperationsInput | number
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUncheckedUpdateManyWithoutOpdNestedInput
    spt?: sptUncheckedUpdateManyWithoutOpdNestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutOpdNestedInput
    standard?: standardUncheckedUpdateManyWithoutOpdNestedInput
    kegiatan?: kegiatanUncheckedUpdateManyWithoutOpdNestedInput
  }

  export type sumberdanaCreateWithoutKegiatanInput = {
    sd_tahun: string
    sd_kode_rekening: string
    sd_nama: string
    sd_jumlah: bigint | number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    opd: opdCreateNestedOneWithoutSumberdanaInput
    users: usersCreateNestedOneWithoutSumberdanaInput
    spt?: sptCreateNestedManyWithoutSumber_danaInput
    bendahara: usersCreateNestedOneWithoutSumberdana_bendaharaInput
    pengguna_anggaran: usersCreateNestedOneWithoutSumberdana_paInput
    ttd_gajian?: ttd_gajianCreateNestedManyWithoutSumberdanaInput
  }

  export type sumberdanaUncheckedCreateWithoutKegiatanInput = {
    sd_id?: number
    sd_tahun: string
    sd_opd: number
    sd_kode_rekening: string
    sd_nama: string
    sd_jumlah: bigint | number
    sd_pptk: number
    sd_pa: number
    sd_bendahara: number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    spt?: sptUncheckedCreateNestedManyWithoutSumber_danaInput
    ttd_gajian?: ttd_gajianUncheckedCreateNestedManyWithoutSumberdanaInput
  }

  export type sumberdanaCreateOrConnectWithoutKegiatanInput = {
    where: sumberdanaWhereUniqueInput
    create: XOR<sumberdanaCreateWithoutKegiatanInput, sumberdanaUncheckedCreateWithoutKegiatanInput>
  }

  export type sumberdanaCreateManyKegiatanInputEnvelope = {
    data: sumberdanaCreateManyKegiatanInput | sumberdanaCreateManyKegiatanInput[]
    skipDuplicates?: boolean
  }

  export type sptCreateWithoutKegiatanInput = {
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutSptInput
    users_pj: usersCreateNestedOneWithoutPjInput
    users_pj2: usersCreateNestedOneWithoutPj2Input
    kota_asal: kotaCreateNestedOneWithoutKota_asalInput
    kota_tujuan: kotaCreateNestedOneWithoutKota_tujuanInput
    kota_tujuan2?: kotaCreateNestedOneWithoutKota_tujuan2Input
    opd: opdCreateNestedOneWithoutSptInput
    sumber_dana: sumberdanaCreateNestedOneWithoutSptInput
    kategori: kategoriCreateNestedOneWithoutSptInput
    kota?: kotaCreateNestedOneWithoutSptInput
  }

  export type sptUncheckedCreateWithoutKegiatanInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutSptInput
  }

  export type sptCreateOrConnectWithoutKegiatanInput = {
    where: sptWhereUniqueInput
    create: XOR<sptCreateWithoutKegiatanInput, sptUncheckedCreateWithoutKegiatanInput>
  }

  export type sptCreateManyKegiatanInputEnvelope = {
    data: sptCreateManyKegiatanInput | sptCreateManyKegiatanInput[]
    skipDuplicates?: boolean
  }

  export type opdCreateWithoutKegiatanInput = {
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
    users?: usersCreateNestedManyWithoutOpdInput
    spt?: sptCreateNestedManyWithoutOpdInput
    setting?: settingCreateNestedManyWithoutOpdInput
    sumberdana?: sumberdanaCreateNestedManyWithoutOpdInput
    standard?: standardCreateNestedManyWithoutOpdInput
  }

  export type opdUncheckedCreateWithoutKegiatanInput = {
    opd_id?: number
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
    users?: usersUncheckedCreateNestedManyWithoutOpdInput
    spt?: sptUncheckedCreateNestedManyWithoutOpdInput
    setting?: settingUncheckedCreateNestedManyWithoutOpdInput
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutOpdInput
    standard?: standardUncheckedCreateNestedManyWithoutOpdInput
  }

  export type opdCreateOrConnectWithoutKegiatanInput = {
    where: opdWhereUniqueInput
    create: XOR<opdCreateWithoutKegiatanInput, opdUncheckedCreateWithoutKegiatanInput>
  }

  export type sumberdanaUpsertWithWhereUniqueWithoutKegiatanInput = {
    where: sumberdanaWhereUniqueInput
    update: XOR<sumberdanaUpdateWithoutKegiatanInput, sumberdanaUncheckedUpdateWithoutKegiatanInput>
    create: XOR<sumberdanaCreateWithoutKegiatanInput, sumberdanaUncheckedCreateWithoutKegiatanInput>
  }

  export type sumberdanaUpdateWithWhereUniqueWithoutKegiatanInput = {
    where: sumberdanaWhereUniqueInput
    data: XOR<sumberdanaUpdateWithoutKegiatanInput, sumberdanaUncheckedUpdateWithoutKegiatanInput>
  }

  export type sumberdanaUpdateManyWithWhereWithoutKegiatanInput = {
    where: sumberdanaScalarWhereInput
    data: XOR<sumberdanaUpdateManyMutationInput, sumberdanaUncheckedUpdateManyWithoutKegiatanInput>
  }

  export type sptUpsertWithWhereUniqueWithoutKegiatanInput = {
    where: sptWhereUniqueInput
    update: XOR<sptUpdateWithoutKegiatanInput, sptUncheckedUpdateWithoutKegiatanInput>
    create: XOR<sptCreateWithoutKegiatanInput, sptUncheckedCreateWithoutKegiatanInput>
  }

  export type sptUpdateWithWhereUniqueWithoutKegiatanInput = {
    where: sptWhereUniqueInput
    data: XOR<sptUpdateWithoutKegiatanInput, sptUncheckedUpdateWithoutKegiatanInput>
  }

  export type sptUpdateManyWithWhereWithoutKegiatanInput = {
    where: sptScalarWhereInput
    data: XOR<sptUpdateManyMutationInput, sptUncheckedUpdateManyWithoutKegiatanInput>
  }

  export type opdUpsertWithoutKegiatanInput = {
    update: XOR<opdUpdateWithoutKegiatanInput, opdUncheckedUpdateWithoutKegiatanInput>
    create: XOR<opdCreateWithoutKegiatanInput, opdUncheckedCreateWithoutKegiatanInput>
    where?: opdWhereInput
  }

  export type opdUpdateToOneWithWhereWithoutKegiatanInput = {
    where?: opdWhereInput
    data: XOR<opdUpdateWithoutKegiatanInput, opdUncheckedUpdateWithoutKegiatanInput>
  }

  export type opdUpdateWithoutKegiatanInput = {
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateManyWithoutOpdNestedInput
    spt?: sptUpdateManyWithoutOpdNestedInput
    setting?: settingUpdateManyWithoutOpdNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutOpdNestedInput
    standard?: standardUpdateManyWithoutOpdNestedInput
  }

  export type opdUncheckedUpdateWithoutKegiatanInput = {
    opd_id?: IntFieldUpdateOperationsInput | number
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUncheckedUpdateManyWithoutOpdNestedInput
    spt?: sptUncheckedUpdateManyWithoutOpdNestedInput
    setting?: settingUncheckedUpdateManyWithoutOpdNestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutOpdNestedInput
    standard?: standardUncheckedUpdateManyWithoutOpdNestedInput
  }

  export type opdCreateWithoutSumberdanaInput = {
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
    users?: usersCreateNestedManyWithoutOpdInput
    spt?: sptCreateNestedManyWithoutOpdInput
    setting?: settingCreateNestedManyWithoutOpdInput
    standard?: standardCreateNestedManyWithoutOpdInput
    kegiatan?: kegiatanCreateNestedManyWithoutOpdInput
  }

  export type opdUncheckedCreateWithoutSumberdanaInput = {
    opd_id?: number
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
    users?: usersUncheckedCreateNestedManyWithoutOpdInput
    spt?: sptUncheckedCreateNestedManyWithoutOpdInput
    setting?: settingUncheckedCreateNestedManyWithoutOpdInput
    standard?: standardUncheckedCreateNestedManyWithoutOpdInput
    kegiatan?: kegiatanUncheckedCreateNestedManyWithoutOpdInput
  }

  export type opdCreateOrConnectWithoutSumberdanaInput = {
    where: opdWhereUniqueInput
    create: XOR<opdCreateWithoutSumberdanaInput, opdUncheckedCreateWithoutSumberdanaInput>
  }

  export type kegiatanCreateWithoutSumberdanaInput = {
    kegiatan_kode: string
    kegiatan_program: string
    kegiatan_nama: string
    kegiatan_subkegiatan: string
    kegiatan_created?: Date | string
    kegiatan_updated?: Date | string
    kegiatan_deleted?: Date | string | null
    spt?: sptCreateNestedManyWithoutKegiatanInput
    opd: opdCreateNestedOneWithoutKegiatanInput
  }

  export type kegiatanUncheckedCreateWithoutSumberdanaInput = {
    kegiatan_id?: number
    kegiatan_opd: number
    kegiatan_kode: string
    kegiatan_program: string
    kegiatan_nama: string
    kegiatan_subkegiatan: string
    kegiatan_created?: Date | string
    kegiatan_updated?: Date | string
    kegiatan_deleted?: Date | string | null
    spt?: sptUncheckedCreateNestedManyWithoutKegiatanInput
  }

  export type kegiatanCreateOrConnectWithoutSumberdanaInput = {
    where: kegiatanWhereUniqueInput
    create: XOR<kegiatanCreateWithoutSumberdanaInput, kegiatanUncheckedCreateWithoutSumberdanaInput>
  }

  export type usersCreateWithoutSumberdanaInput = {
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutUsersInput
    pj?: sptCreateNestedManyWithoutUsers_pjInput
    pj2?: sptCreateNestedManyWithoutUsers_pj2Input
    opd: opdCreateNestedOneWithoutUsersInput
    jabatan: jabatanCreateNestedOneWithoutUsersInput
    sumberdana_bendahara?: sumberdanaCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankCreateNestedManyWithoutUserInput
    gajian?: gajianCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutSumberdanaInput = {
    user_id?: number
    user_opd: number
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_jabatan: number
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutUsersInput
    pj?: sptUncheckedCreateNestedManyWithoutUsers_pjInput
    pj2?: sptUncheckedCreateNestedManyWithoutUsers_pj2Input
    sumberdana_bendahara?: sumberdanaUncheckedCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaUncheckedCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankUncheckedCreateNestedManyWithoutUserInput
    gajian?: gajianUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutSumberdanaInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSumberdanaInput, usersUncheckedCreateWithoutSumberdanaInput>
  }

  export type sptCreateWithoutSumber_danaInput = {
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutSptInput
    users_pj: usersCreateNestedOneWithoutPjInput
    users_pj2: usersCreateNestedOneWithoutPj2Input
    kota_asal: kotaCreateNestedOneWithoutKota_asalInput
    kota_tujuan: kotaCreateNestedOneWithoutKota_tujuanInput
    kota_tujuan2?: kotaCreateNestedOneWithoutKota_tujuan2Input
    opd: opdCreateNestedOneWithoutSptInput
    kegiatan: kegiatanCreateNestedOneWithoutSptInput
    kategori: kategoriCreateNestedOneWithoutSptInput
    kota?: kotaCreateNestedOneWithoutSptInput
  }

  export type sptUncheckedCreateWithoutSumber_danaInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutSptInput
  }

  export type sptCreateOrConnectWithoutSumber_danaInput = {
    where: sptWhereUniqueInput
    create: XOR<sptCreateWithoutSumber_danaInput, sptUncheckedCreateWithoutSumber_danaInput>
  }

  export type sptCreateManySumber_danaInputEnvelope = {
    data: sptCreateManySumber_danaInput | sptCreateManySumber_danaInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutSumberdana_bendaharaInput = {
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutUsersInput
    pj?: sptCreateNestedManyWithoutUsers_pjInput
    pj2?: sptCreateNestedManyWithoutUsers_pj2Input
    opd: opdCreateNestedOneWithoutUsersInput
    jabatan: jabatanCreateNestedOneWithoutUsersInput
    sumberdana?: sumberdanaCreateNestedManyWithoutUsersInput
    sumberdana_pa?: sumberdanaCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankCreateNestedManyWithoutUserInput
    gajian?: gajianCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutSumberdana_bendaharaInput = {
    user_id?: number
    user_opd: number
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_jabatan: number
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutUsersInput
    pj?: sptUncheckedCreateNestedManyWithoutUsers_pjInput
    pj2?: sptUncheckedCreateNestedManyWithoutUsers_pj2Input
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutUsersInput
    sumberdana_pa?: sumberdanaUncheckedCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankUncheckedCreateNestedManyWithoutUserInput
    gajian?: gajianUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutSumberdana_bendaharaInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSumberdana_bendaharaInput, usersUncheckedCreateWithoutSumberdana_bendaharaInput>
  }

  export type usersCreateWithoutSumberdana_paInput = {
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutUsersInput
    pj?: sptCreateNestedManyWithoutUsers_pjInput
    pj2?: sptCreateNestedManyWithoutUsers_pj2Input
    opd: opdCreateNestedOneWithoutUsersInput
    jabatan: jabatanCreateNestedOneWithoutUsersInput
    sumberdana?: sumberdanaCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaCreateNestedManyWithoutBendaharaInput
    bank?: bankCreateNestedManyWithoutUserInput
    gajian?: gajianCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutSumberdana_paInput = {
    user_id?: number
    user_opd: number
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_jabatan: number
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutUsersInput
    pj?: sptUncheckedCreateNestedManyWithoutUsers_pjInput
    pj2?: sptUncheckedCreateNestedManyWithoutUsers_pj2Input
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaUncheckedCreateNestedManyWithoutBendaharaInput
    bank?: bankUncheckedCreateNestedManyWithoutUserInput
    gajian?: gajianUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutSumberdana_paInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSumberdana_paInput, usersUncheckedCreateWithoutSumberdana_paInput>
  }

  export type ttd_gajianCreateWithoutSumberdanaInput = {
    ttd_bulan: number
    ttd_tahun: number
    ttd_created: Date | string
    ttd_updated?: Date | string
    ttd_deleted?: Date | string | null
  }

  export type ttd_gajianUncheckedCreateWithoutSumberdanaInput = {
    ttd_id?: number
    ttd_bulan: number
    ttd_tahun: number
    ttd_created: Date | string
    ttd_updated?: Date | string
    ttd_deleted?: Date | string | null
  }

  export type ttd_gajianCreateOrConnectWithoutSumberdanaInput = {
    where: ttd_gajianWhereUniqueInput
    create: XOR<ttd_gajianCreateWithoutSumberdanaInput, ttd_gajianUncheckedCreateWithoutSumberdanaInput>
  }

  export type ttd_gajianCreateManySumberdanaInputEnvelope = {
    data: ttd_gajianCreateManySumberdanaInput | ttd_gajianCreateManySumberdanaInput[]
    skipDuplicates?: boolean
  }

  export type opdUpsertWithoutSumberdanaInput = {
    update: XOR<opdUpdateWithoutSumberdanaInput, opdUncheckedUpdateWithoutSumberdanaInput>
    create: XOR<opdCreateWithoutSumberdanaInput, opdUncheckedCreateWithoutSumberdanaInput>
    where?: opdWhereInput
  }

  export type opdUpdateToOneWithWhereWithoutSumberdanaInput = {
    where?: opdWhereInput
    data: XOR<opdUpdateWithoutSumberdanaInput, opdUncheckedUpdateWithoutSumberdanaInput>
  }

  export type opdUpdateWithoutSumberdanaInput = {
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateManyWithoutOpdNestedInput
    spt?: sptUpdateManyWithoutOpdNestedInput
    setting?: settingUpdateManyWithoutOpdNestedInput
    standard?: standardUpdateManyWithoutOpdNestedInput
    kegiatan?: kegiatanUpdateManyWithoutOpdNestedInput
  }

  export type opdUncheckedUpdateWithoutSumberdanaInput = {
    opd_id?: IntFieldUpdateOperationsInput | number
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUncheckedUpdateManyWithoutOpdNestedInput
    spt?: sptUncheckedUpdateManyWithoutOpdNestedInput
    setting?: settingUncheckedUpdateManyWithoutOpdNestedInput
    standard?: standardUncheckedUpdateManyWithoutOpdNestedInput
    kegiatan?: kegiatanUncheckedUpdateManyWithoutOpdNestedInput
  }

  export type kegiatanUpsertWithoutSumberdanaInput = {
    update: XOR<kegiatanUpdateWithoutSumberdanaInput, kegiatanUncheckedUpdateWithoutSumberdanaInput>
    create: XOR<kegiatanCreateWithoutSumberdanaInput, kegiatanUncheckedCreateWithoutSumberdanaInput>
    where?: kegiatanWhereInput
  }

  export type kegiatanUpdateToOneWithWhereWithoutSumberdanaInput = {
    where?: kegiatanWhereInput
    data: XOR<kegiatanUpdateWithoutSumberdanaInput, kegiatanUncheckedUpdateWithoutSumberdanaInput>
  }

  export type kegiatanUpdateWithoutSumberdanaInput = {
    kegiatan_kode?: StringFieldUpdateOperationsInput | string
    kegiatan_program?: StringFieldUpdateOperationsInput | string
    kegiatan_nama?: StringFieldUpdateOperationsInput | string
    kegiatan_subkegiatan?: StringFieldUpdateOperationsInput | string
    kegiatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt?: sptUpdateManyWithoutKegiatanNestedInput
    opd?: opdUpdateOneRequiredWithoutKegiatanNestedInput
  }

  export type kegiatanUncheckedUpdateWithoutSumberdanaInput = {
    kegiatan_id?: IntFieldUpdateOperationsInput | number
    kegiatan_opd?: IntFieldUpdateOperationsInput | number
    kegiatan_kode?: StringFieldUpdateOperationsInput | string
    kegiatan_program?: StringFieldUpdateOperationsInput | string
    kegiatan_nama?: StringFieldUpdateOperationsInput | string
    kegiatan_subkegiatan?: StringFieldUpdateOperationsInput | string
    kegiatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt?: sptUncheckedUpdateManyWithoutKegiatanNestedInput
  }

  export type usersUpsertWithoutSumberdanaInput = {
    update: XOR<usersUpdateWithoutSumberdanaInput, usersUncheckedUpdateWithoutSumberdanaInput>
    create: XOR<usersCreateWithoutSumberdanaInput, usersUncheckedCreateWithoutSumberdanaInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutSumberdanaInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutSumberdanaInput, usersUncheckedUpdateWithoutSumberdanaInput>
  }

  export type usersUpdateWithoutSumberdanaInput = {
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutUsersNestedInput
    pj?: sptUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUpdateManyWithoutUsers_pj2NestedInput
    opd?: opdUpdateOneRequiredWithoutUsersNestedInput
    jabatan?: jabatanUpdateOneRequiredWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUpdateManyWithoutUserNestedInput
    gajian?: gajianUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutSumberdanaInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_opd?: IntFieldUpdateOperationsInput | number
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_jabatan?: IntFieldUpdateOperationsInput | number
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutUsersNestedInput
    pj?: sptUncheckedUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUncheckedUpdateManyWithoutUsers_pj2NestedInput
    sumberdana_bendahara?: sumberdanaUncheckedUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUncheckedUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUncheckedUpdateManyWithoutUserNestedInput
    gajian?: gajianUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type sptUpsertWithWhereUniqueWithoutSumber_danaInput = {
    where: sptWhereUniqueInput
    update: XOR<sptUpdateWithoutSumber_danaInput, sptUncheckedUpdateWithoutSumber_danaInput>
    create: XOR<sptCreateWithoutSumber_danaInput, sptUncheckedCreateWithoutSumber_danaInput>
  }

  export type sptUpdateWithWhereUniqueWithoutSumber_danaInput = {
    where: sptWhereUniqueInput
    data: XOR<sptUpdateWithoutSumber_danaInput, sptUncheckedUpdateWithoutSumber_danaInput>
  }

  export type sptUpdateManyWithWhereWithoutSumber_danaInput = {
    where: sptScalarWhereInput
    data: XOR<sptUpdateManyMutationInput, sptUncheckedUpdateManyWithoutSumber_danaInput>
  }

  export type usersUpsertWithoutSumberdana_bendaharaInput = {
    update: XOR<usersUpdateWithoutSumberdana_bendaharaInput, usersUncheckedUpdateWithoutSumberdana_bendaharaInput>
    create: XOR<usersCreateWithoutSumberdana_bendaharaInput, usersUncheckedCreateWithoutSumberdana_bendaharaInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutSumberdana_bendaharaInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutSumberdana_bendaharaInput, usersUncheckedUpdateWithoutSumberdana_bendaharaInput>
  }

  export type usersUpdateWithoutSumberdana_bendaharaInput = {
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutUsersNestedInput
    pj?: sptUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUpdateManyWithoutUsers_pj2NestedInput
    opd?: opdUpdateOneRequiredWithoutUsersNestedInput
    jabatan?: jabatanUpdateOneRequiredWithoutUsersNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutUsersNestedInput
    sumberdana_pa?: sumberdanaUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUpdateManyWithoutUserNestedInput
    gajian?: gajianUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutSumberdana_bendaharaInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_opd?: IntFieldUpdateOperationsInput | number
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_jabatan?: IntFieldUpdateOperationsInput | number
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutUsersNestedInput
    pj?: sptUncheckedUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUncheckedUpdateManyWithoutUsers_pj2NestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutUsersNestedInput
    sumberdana_pa?: sumberdanaUncheckedUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUncheckedUpdateManyWithoutUserNestedInput
    gajian?: gajianUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUpsertWithoutSumberdana_paInput = {
    update: XOR<usersUpdateWithoutSumberdana_paInput, usersUncheckedUpdateWithoutSumberdana_paInput>
    create: XOR<usersCreateWithoutSumberdana_paInput, usersUncheckedCreateWithoutSumberdana_paInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutSumberdana_paInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutSumberdana_paInput, usersUncheckedUpdateWithoutSumberdana_paInput>
  }

  export type usersUpdateWithoutSumberdana_paInput = {
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutUsersNestedInput
    pj?: sptUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUpdateManyWithoutUsers_pj2NestedInput
    opd?: opdUpdateOneRequiredWithoutUsersNestedInput
    jabatan?: jabatanUpdateOneRequiredWithoutUsersNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUpdateManyWithoutBendaharaNestedInput
    bank?: bankUpdateManyWithoutUserNestedInput
    gajian?: gajianUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutSumberdana_paInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_opd?: IntFieldUpdateOperationsInput | number
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_jabatan?: IntFieldUpdateOperationsInput | number
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutUsersNestedInput
    pj?: sptUncheckedUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUncheckedUpdateManyWithoutUsers_pj2NestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUncheckedUpdateManyWithoutBendaharaNestedInput
    bank?: bankUncheckedUpdateManyWithoutUserNestedInput
    gajian?: gajianUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type ttd_gajianUpsertWithWhereUniqueWithoutSumberdanaInput = {
    where: ttd_gajianWhereUniqueInput
    update: XOR<ttd_gajianUpdateWithoutSumberdanaInput, ttd_gajianUncheckedUpdateWithoutSumberdanaInput>
    create: XOR<ttd_gajianCreateWithoutSumberdanaInput, ttd_gajianUncheckedCreateWithoutSumberdanaInput>
  }

  export type ttd_gajianUpdateWithWhereUniqueWithoutSumberdanaInput = {
    where: ttd_gajianWhereUniqueInput
    data: XOR<ttd_gajianUpdateWithoutSumberdanaInput, ttd_gajianUncheckedUpdateWithoutSumberdanaInput>
  }

  export type ttd_gajianUpdateManyWithWhereWithoutSumberdanaInput = {
    where: ttd_gajianScalarWhereInput
    data: XOR<ttd_gajianUpdateManyMutationInput, ttd_gajianUncheckedUpdateManyWithoutSumberdanaInput>
  }

  export type ttd_gajianScalarWhereInput = {
    AND?: ttd_gajianScalarWhereInput | ttd_gajianScalarWhereInput[]
    OR?: ttd_gajianScalarWhereInput[]
    NOT?: ttd_gajianScalarWhereInput | ttd_gajianScalarWhereInput[]
    ttd_id?: IntFilter<"ttd_gajian"> | number
    ttd_bulan?: IntFilter<"ttd_gajian"> | number
    ttd_tahun?: IntFilter<"ttd_gajian"> | number
    ttd_sumberdana?: IntFilter<"ttd_gajian"> | number
    ttd_created?: DateTimeFilter<"ttd_gajian"> | Date | string
    ttd_updated?: DateTimeFilter<"ttd_gajian"> | Date | string
    ttd_deleted?: DateTimeNullableFilter<"ttd_gajian"> | Date | string | null
  }

  export type usersCreateWithoutOpdInput = {
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutUsersInput
    pj?: sptCreateNestedManyWithoutUsers_pjInput
    pj2?: sptCreateNestedManyWithoutUsers_pj2Input
    jabatan: jabatanCreateNestedOneWithoutUsersInput
    sumberdana?: sumberdanaCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankCreateNestedManyWithoutUserInput
    gajian?: gajianCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutOpdInput = {
    user_id?: number
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_jabatan: number
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutUsersInput
    pj?: sptUncheckedCreateNestedManyWithoutUsers_pjInput
    pj2?: sptUncheckedCreateNestedManyWithoutUsers_pj2Input
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaUncheckedCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaUncheckedCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankUncheckedCreateNestedManyWithoutUserInput
    gajian?: gajianUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutOpdInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutOpdInput, usersUncheckedCreateWithoutOpdInput>
  }

  export type usersCreateManyOpdInputEnvelope = {
    data: usersCreateManyOpdInput | usersCreateManyOpdInput[]
    skipDuplicates?: boolean
  }

  export type sptCreateWithoutOpdInput = {
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutSptInput
    users_pj: usersCreateNestedOneWithoutPjInput
    users_pj2: usersCreateNestedOneWithoutPj2Input
    kota_asal: kotaCreateNestedOneWithoutKota_asalInput
    kota_tujuan: kotaCreateNestedOneWithoutKota_tujuanInput
    kota_tujuan2?: kotaCreateNestedOneWithoutKota_tujuan2Input
    kegiatan: kegiatanCreateNestedOneWithoutSptInput
    sumber_dana: sumberdanaCreateNestedOneWithoutSptInput
    kategori: kategoriCreateNestedOneWithoutSptInput
    kota?: kotaCreateNestedOneWithoutSptInput
  }

  export type sptUncheckedCreateWithoutOpdInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutSptInput
  }

  export type sptCreateOrConnectWithoutOpdInput = {
    where: sptWhereUniqueInput
    create: XOR<sptCreateWithoutOpdInput, sptUncheckedCreateWithoutOpdInput>
  }

  export type sptCreateManyOpdInputEnvelope = {
    data: sptCreateManyOpdInput | sptCreateManyOpdInput[]
    skipDuplicates?: boolean
  }

  export type settingCreateWithoutOpdInput = {
    setting_id: string
    setting_value: string
    setting_lastupdate?: Date | string
  }

  export type settingUncheckedCreateWithoutOpdInput = {
    setting_id: string
    setting_value: string
    setting_lastupdate?: Date | string
  }

  export type settingCreateOrConnectWithoutOpdInput = {
    where: settingWhereUniqueInput
    create: XOR<settingCreateWithoutOpdInput, settingUncheckedCreateWithoutOpdInput>
  }

  export type settingCreateManyOpdInputEnvelope = {
    data: settingCreateManyOpdInput | settingCreateManyOpdInput[]
    skipDuplicates?: boolean
  }

  export type sumberdanaCreateWithoutOpdInput = {
    sd_tahun: string
    sd_kode_rekening: string
    sd_nama: string
    sd_jumlah: bigint | number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    kegiatan: kegiatanCreateNestedOneWithoutSumberdanaInput
    users: usersCreateNestedOneWithoutSumberdanaInput
    spt?: sptCreateNestedManyWithoutSumber_danaInput
    bendahara: usersCreateNestedOneWithoutSumberdana_bendaharaInput
    pengguna_anggaran: usersCreateNestedOneWithoutSumberdana_paInput
    ttd_gajian?: ttd_gajianCreateNestedManyWithoutSumberdanaInput
  }

  export type sumberdanaUncheckedCreateWithoutOpdInput = {
    sd_id?: number
    sd_tahun: string
    sd_kode_rekening: string
    sd_nama: string
    sd_kegiatan: number
    sd_jumlah: bigint | number
    sd_pptk: number
    sd_pa: number
    sd_bendahara: number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    spt?: sptUncheckedCreateNestedManyWithoutSumber_danaInput
    ttd_gajian?: ttd_gajianUncheckedCreateNestedManyWithoutSumberdanaInput
  }

  export type sumberdanaCreateOrConnectWithoutOpdInput = {
    where: sumberdanaWhereUniqueInput
    create: XOR<sumberdanaCreateWithoutOpdInput, sumberdanaUncheckedCreateWithoutOpdInput>
  }

  export type sumberdanaCreateManyOpdInputEnvelope = {
    data: sumberdanaCreateManyOpdInput | sumberdanaCreateManyOpdInput[]
    skipDuplicates?: boolean
  }

  export type standardCreateWithoutOpdInput = {
    standard_kode: number
    standard_via: number
    standard_kelas: number
    standard_nominal: number
    standard_created?: Date | string
    standard_updated?: Date | string
    standard_deleted?: Date | string | null
    kota_asal?: kotaCreateNestedOneWithoutStandard_asalInput
    kota_tujuan?: kotaCreateNestedOneWithoutStandard_tujuanInput
  }

  export type standardUncheckedCreateWithoutOpdInput = {
    standard_id?: number
    standard_kode: number
    standard_kota_asal: number
    standard_kota_tujuan: number
    standard_via: number
    standard_kelas: number
    standard_nominal: number
    standard_created?: Date | string
    standard_updated?: Date | string
    standard_deleted?: Date | string | null
  }

  export type standardCreateOrConnectWithoutOpdInput = {
    where: standardWhereUniqueInput
    create: XOR<standardCreateWithoutOpdInput, standardUncheckedCreateWithoutOpdInput>
  }

  export type standardCreateManyOpdInputEnvelope = {
    data: standardCreateManyOpdInput | standardCreateManyOpdInput[]
    skipDuplicates?: boolean
  }

  export type kegiatanCreateWithoutOpdInput = {
    kegiatan_kode: string
    kegiatan_program: string
    kegiatan_nama: string
    kegiatan_subkegiatan: string
    kegiatan_created?: Date | string
    kegiatan_updated?: Date | string
    kegiatan_deleted?: Date | string | null
    sumberdana?: sumberdanaCreateNestedManyWithoutKegiatanInput
    spt?: sptCreateNestedManyWithoutKegiatanInput
  }

  export type kegiatanUncheckedCreateWithoutOpdInput = {
    kegiatan_id?: number
    kegiatan_kode: string
    kegiatan_program: string
    kegiatan_nama: string
    kegiatan_subkegiatan: string
    kegiatan_created?: Date | string
    kegiatan_updated?: Date | string
    kegiatan_deleted?: Date | string | null
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutKegiatanInput
    spt?: sptUncheckedCreateNestedManyWithoutKegiatanInput
  }

  export type kegiatanCreateOrConnectWithoutOpdInput = {
    where: kegiatanWhereUniqueInput
    create: XOR<kegiatanCreateWithoutOpdInput, kegiatanUncheckedCreateWithoutOpdInput>
  }

  export type kegiatanCreateManyOpdInputEnvelope = {
    data: kegiatanCreateManyOpdInput | kegiatanCreateManyOpdInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithWhereUniqueWithoutOpdInput = {
    where: usersWhereUniqueInput
    update: XOR<usersUpdateWithoutOpdInput, usersUncheckedUpdateWithoutOpdInput>
    create: XOR<usersCreateWithoutOpdInput, usersUncheckedCreateWithoutOpdInput>
  }

  export type usersUpdateWithWhereUniqueWithoutOpdInput = {
    where: usersWhereUniqueInput
    data: XOR<usersUpdateWithoutOpdInput, usersUncheckedUpdateWithoutOpdInput>
  }

  export type usersUpdateManyWithWhereWithoutOpdInput = {
    where: usersScalarWhereInput
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyWithoutOpdInput>
  }

  export type usersScalarWhereInput = {
    AND?: usersScalarWhereInput | usersScalarWhereInput[]
    OR?: usersScalarWhereInput[]
    NOT?: usersScalarWhereInput | usersScalarWhereInput[]
    user_id?: IntFilter<"users"> | number
    user_opd?: IntFilter<"users"> | number
    user_nama?: StringFilter<"users"> | string
    user_nip?: StringNullableFilter<"users"> | string | null
    user_nik?: StringFilter<"users"> | string
    user_name?: StringFilter<"users"> | string
    user_pass?: StringFilter<"users"> | string
    user_image?: StringNullableFilter<"users"> | string | null
    user_tmp_lahir?: StringFilter<"users"> | string
    user_tgl_lahir?: DateTimeFilter<"users"> | Date | string
    user_pendidikan_akhir?: IntFilter<"users"> | number
    user_level?: IntFilter<"users"> | number
    user_email?: StringFilter<"users"> | string
    user_nohp?: StringFilter<"users"> | string
    user_alamat?: StringFilter<"users"> | string
    user_jk?: EnumJKFilter<"users"> | $Enums.JK
    user_ttd?: BoolFilter<"users"> | boolean
    user_jabatan?: IntFilter<"users"> | number
    user_pangkat?: StringNullableFilter<"users"> | string | null
    user_jumlah_anak?: IntFilter<"users"> | number
    user_active?: BoolFilter<"users"> | boolean
    user_external?: BoolFilter<"users"> | boolean
    user_lastip?: StringNullableFilter<"users"> | string | null
    user_lastlogin?: DateTimeNullableFilter<"users"> | Date | string | null
    user_created?: DateTimeFilter<"users"> | Date | string
    user_updated?: DateTimeFilter<"users"> | Date | string
    user_deleted?: DateTimeNullableFilter<"users"> | Date | string | null
  }

  export type sptUpsertWithWhereUniqueWithoutOpdInput = {
    where: sptWhereUniqueInput
    update: XOR<sptUpdateWithoutOpdInput, sptUncheckedUpdateWithoutOpdInput>
    create: XOR<sptCreateWithoutOpdInput, sptUncheckedCreateWithoutOpdInput>
  }

  export type sptUpdateWithWhereUniqueWithoutOpdInput = {
    where: sptWhereUniqueInput
    data: XOR<sptUpdateWithoutOpdInput, sptUncheckedUpdateWithoutOpdInput>
  }

  export type sptUpdateManyWithWhereWithoutOpdInput = {
    where: sptScalarWhereInput
    data: XOR<sptUpdateManyMutationInput, sptUncheckedUpdateManyWithoutOpdInput>
  }

  export type settingUpsertWithWhereUniqueWithoutOpdInput = {
    where: settingWhereUniqueInput
    update: XOR<settingUpdateWithoutOpdInput, settingUncheckedUpdateWithoutOpdInput>
    create: XOR<settingCreateWithoutOpdInput, settingUncheckedCreateWithoutOpdInput>
  }

  export type settingUpdateWithWhereUniqueWithoutOpdInput = {
    where: settingWhereUniqueInput
    data: XOR<settingUpdateWithoutOpdInput, settingUncheckedUpdateWithoutOpdInput>
  }

  export type settingUpdateManyWithWhereWithoutOpdInput = {
    where: settingScalarWhereInput
    data: XOR<settingUpdateManyMutationInput, settingUncheckedUpdateManyWithoutOpdInput>
  }

  export type settingScalarWhereInput = {
    AND?: settingScalarWhereInput | settingScalarWhereInput[]
    OR?: settingScalarWhereInput[]
    NOT?: settingScalarWhereInput | settingScalarWhereInput[]
    setting_id?: StringFilter<"setting"> | string
    setting_opd?: IntFilter<"setting"> | number
    setting_value?: StringFilter<"setting"> | string
    setting_lastupdate?: DateTimeFilter<"setting"> | Date | string
  }

  export type sumberdanaUpsertWithWhereUniqueWithoutOpdInput = {
    where: sumberdanaWhereUniqueInput
    update: XOR<sumberdanaUpdateWithoutOpdInput, sumberdanaUncheckedUpdateWithoutOpdInput>
    create: XOR<sumberdanaCreateWithoutOpdInput, sumberdanaUncheckedCreateWithoutOpdInput>
  }

  export type sumberdanaUpdateWithWhereUniqueWithoutOpdInput = {
    where: sumberdanaWhereUniqueInput
    data: XOR<sumberdanaUpdateWithoutOpdInput, sumberdanaUncheckedUpdateWithoutOpdInput>
  }

  export type sumberdanaUpdateManyWithWhereWithoutOpdInput = {
    where: sumberdanaScalarWhereInput
    data: XOR<sumberdanaUpdateManyMutationInput, sumberdanaUncheckedUpdateManyWithoutOpdInput>
  }

  export type standardUpsertWithWhereUniqueWithoutOpdInput = {
    where: standardWhereUniqueInput
    update: XOR<standardUpdateWithoutOpdInput, standardUncheckedUpdateWithoutOpdInput>
    create: XOR<standardCreateWithoutOpdInput, standardUncheckedCreateWithoutOpdInput>
  }

  export type standardUpdateWithWhereUniqueWithoutOpdInput = {
    where: standardWhereUniqueInput
    data: XOR<standardUpdateWithoutOpdInput, standardUncheckedUpdateWithoutOpdInput>
  }

  export type standardUpdateManyWithWhereWithoutOpdInput = {
    where: standardScalarWhereInput
    data: XOR<standardUpdateManyMutationInput, standardUncheckedUpdateManyWithoutOpdInput>
  }

  export type kegiatanUpsertWithWhereUniqueWithoutOpdInput = {
    where: kegiatanWhereUniqueInput
    update: XOR<kegiatanUpdateWithoutOpdInput, kegiatanUncheckedUpdateWithoutOpdInput>
    create: XOR<kegiatanCreateWithoutOpdInput, kegiatanUncheckedCreateWithoutOpdInput>
  }

  export type kegiatanUpdateWithWhereUniqueWithoutOpdInput = {
    where: kegiatanWhereUniqueInput
    data: XOR<kegiatanUpdateWithoutOpdInput, kegiatanUncheckedUpdateWithoutOpdInput>
  }

  export type kegiatanUpdateManyWithWhereWithoutOpdInput = {
    where: kegiatanScalarWhereInput
    data: XOR<kegiatanUpdateManyMutationInput, kegiatanUncheckedUpdateManyWithoutOpdInput>
  }

  export type kegiatanScalarWhereInput = {
    AND?: kegiatanScalarWhereInput | kegiatanScalarWhereInput[]
    OR?: kegiatanScalarWhereInput[]
    NOT?: kegiatanScalarWhereInput | kegiatanScalarWhereInput[]
    kegiatan_id?: IntFilter<"kegiatan"> | number
    kegiatan_opd?: IntFilter<"kegiatan"> | number
    kegiatan_kode?: StringFilter<"kegiatan"> | string
    kegiatan_program?: StringFilter<"kegiatan"> | string
    kegiatan_nama?: StringFilter<"kegiatan"> | string
    kegiatan_subkegiatan?: StringFilter<"kegiatan"> | string
    kegiatan_created?: DateTimeFilter<"kegiatan"> | Date | string
    kegiatan_updated?: DateTimeFilter<"kegiatan"> | Date | string
    kegiatan_deleted?: DateTimeNullableFilter<"kegiatan"> | Date | string | null
  }

  export type usersCreateWithoutJabatanInput = {
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutUsersInput
    pj?: sptCreateNestedManyWithoutUsers_pjInput
    pj2?: sptCreateNestedManyWithoutUsers_pj2Input
    opd: opdCreateNestedOneWithoutUsersInput
    sumberdana?: sumberdanaCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankCreateNestedManyWithoutUserInput
    gajian?: gajianCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutJabatanInput = {
    user_id?: number
    user_opd: number
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutUsersInput
    pj?: sptUncheckedCreateNestedManyWithoutUsers_pjInput
    pj2?: sptUncheckedCreateNestedManyWithoutUsers_pj2Input
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaUncheckedCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaUncheckedCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankUncheckedCreateNestedManyWithoutUserInput
    gajian?: gajianUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutJabatanInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutJabatanInput, usersUncheckedCreateWithoutJabatanInput>
  }

  export type usersCreateManyJabatanInputEnvelope = {
    data: usersCreateManyJabatanInput | usersCreateManyJabatanInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithWhereUniqueWithoutJabatanInput = {
    where: usersWhereUniqueInput
    update: XOR<usersUpdateWithoutJabatanInput, usersUncheckedUpdateWithoutJabatanInput>
    create: XOR<usersCreateWithoutJabatanInput, usersUncheckedCreateWithoutJabatanInput>
  }

  export type usersUpdateWithWhereUniqueWithoutJabatanInput = {
    where: usersWhereUniqueInput
    data: XOR<usersUpdateWithoutJabatanInput, usersUncheckedUpdateWithoutJabatanInput>
  }

  export type usersUpdateManyWithWhereWithoutJabatanInput = {
    where: usersScalarWhereInput
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyWithoutJabatanInput>
  }

  export type spt_pegawaiCreateWithoutKwitansiInput = {
    sp_nomor_sppd: string
    sp_seq: number
    spt: sptCreateNestedOneWithoutSpt_pegawaiInput
    users: usersCreateNestedOneWithoutSpt_pegawaiInput
    biaya?: biayaCreateNestedManyWithoutSpt_pegawaiInput
    npd?: npdCreateNestedManyWithoutSpt_pegawaiInput
    laporan?: laporanCreateNestedOneWithoutSpt_pegawaiInput
  }

  export type spt_pegawaiUncheckedCreateWithoutKwitansiInput = {
    sp_id?: number
    sp_spt: number
    sp_user: number
    sp_nomor_sppd: string
    sp_seq: number
    biaya?: biayaUncheckedCreateNestedManyWithoutSpt_pegawaiInput
    npd?: npdUncheckedCreateNestedManyWithoutSpt_pegawaiInput
    laporan?: laporanUncheckedCreateNestedOneWithoutSpt_pegawaiInput
  }

  export type spt_pegawaiCreateOrConnectWithoutKwitansiInput = {
    where: spt_pegawaiWhereUniqueInput
    create: XOR<spt_pegawaiCreateWithoutKwitansiInput, spt_pegawaiUncheckedCreateWithoutKwitansiInput>
  }

  export type spt_pegawaiUpsertWithoutKwitansiInput = {
    update: XOR<spt_pegawaiUpdateWithoutKwitansiInput, spt_pegawaiUncheckedUpdateWithoutKwitansiInput>
    create: XOR<spt_pegawaiCreateWithoutKwitansiInput, spt_pegawaiUncheckedCreateWithoutKwitansiInput>
    where?: spt_pegawaiWhereInput
  }

  export type spt_pegawaiUpdateToOneWithWhereWithoutKwitansiInput = {
    where?: spt_pegawaiWhereInput
    data: XOR<spt_pegawaiUpdateWithoutKwitansiInput, spt_pegawaiUncheckedUpdateWithoutKwitansiInput>
  }

  export type spt_pegawaiUpdateWithoutKwitansiInput = {
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
    spt?: sptUpdateOneRequiredWithoutSpt_pegawaiNestedInput
    users?: usersUpdateOneRequiredWithoutSpt_pegawaiNestedInput
    biaya?: biayaUpdateManyWithoutSpt_pegawaiNestedInput
    npd?: npdUpdateManyWithoutSpt_pegawaiNestedInput
    laporan?: laporanUpdateOneWithoutSpt_pegawaiNestedInput
  }

  export type spt_pegawaiUncheckedUpdateWithoutKwitansiInput = {
    sp_id?: IntFieldUpdateOperationsInput | number
    sp_spt?: IntFieldUpdateOperationsInput | number
    sp_user?: IntFieldUpdateOperationsInput | number
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
    biaya?: biayaUncheckedUpdateManyWithoutSpt_pegawaiNestedInput
    npd?: npdUncheckedUpdateManyWithoutSpt_pegawaiNestedInput
    laporan?: laporanUncheckedUpdateOneWithoutSpt_pegawaiNestedInput
  }

  export type sptCreateWithoutKategoriInput = {
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutSptInput
    users_pj: usersCreateNestedOneWithoutPjInput
    users_pj2: usersCreateNestedOneWithoutPj2Input
    kota_asal: kotaCreateNestedOneWithoutKota_asalInput
    kota_tujuan: kotaCreateNestedOneWithoutKota_tujuanInput
    kota_tujuan2?: kotaCreateNestedOneWithoutKota_tujuan2Input
    opd: opdCreateNestedOneWithoutSptInput
    kegiatan: kegiatanCreateNestedOneWithoutSptInput
    sumber_dana: sumberdanaCreateNestedOneWithoutSptInput
    kota?: kotaCreateNestedOneWithoutSptInput
  }

  export type sptUncheckedCreateWithoutKategoriInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutSptInput
  }

  export type sptCreateOrConnectWithoutKategoriInput = {
    where: sptWhereUniqueInput
    create: XOR<sptCreateWithoutKategoriInput, sptUncheckedCreateWithoutKategoriInput>
  }

  export type sptCreateManyKategoriInputEnvelope = {
    data: sptCreateManyKategoriInput | sptCreateManyKategoriInput[]
    skipDuplicates?: boolean
  }

  export type sptUpsertWithWhereUniqueWithoutKategoriInput = {
    where: sptWhereUniqueInput
    update: XOR<sptUpdateWithoutKategoriInput, sptUncheckedUpdateWithoutKategoriInput>
    create: XOR<sptCreateWithoutKategoriInput, sptUncheckedCreateWithoutKategoriInput>
  }

  export type sptUpdateWithWhereUniqueWithoutKategoriInput = {
    where: sptWhereUniqueInput
    data: XOR<sptUpdateWithoutKategoriInput, sptUncheckedUpdateWithoutKategoriInput>
  }

  export type sptUpdateManyWithWhereWithoutKategoriInput = {
    where: sptScalarWhereInput
    data: XOR<sptUpdateManyMutationInput, sptUncheckedUpdateManyWithoutKategoriInput>
  }

  export type kotaCreateWithoutStandard_asalInput = {
    kota_id: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_asal?: sptCreateNestedManyWithoutKota_asalInput
    kota_tujuan?: sptCreateNestedManyWithoutKota_tujuanInput
    kota_tujuan2?: sptCreateNestedManyWithoutKota_tujuan2Input
    spt?: sptCreateNestedManyWithoutKotaInput
    provinsi?: provinsiCreateNestedOneWithoutKotaInput
    standard_tujuan?: standardCreateNestedManyWithoutKota_tujuanInput
  }

  export type kotaUncheckedCreateWithoutStandard_asalInput = {
    kota_id: number
    kota_provinsi: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_asal?: sptUncheckedCreateNestedManyWithoutKota_asalInput
    kota_tujuan?: sptUncheckedCreateNestedManyWithoutKota_tujuanInput
    kota_tujuan2?: sptUncheckedCreateNestedManyWithoutKota_tujuan2Input
    spt?: sptUncheckedCreateNestedManyWithoutKotaInput
    standard_tujuan?: standardUncheckedCreateNestedManyWithoutKota_tujuanInput
  }

  export type kotaCreateOrConnectWithoutStandard_asalInput = {
    where: kotaWhereUniqueInput
    create: XOR<kotaCreateWithoutStandard_asalInput, kotaUncheckedCreateWithoutStandard_asalInput>
  }

  export type kotaCreateWithoutStandard_tujuanInput = {
    kota_id: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_asal?: sptCreateNestedManyWithoutKota_asalInput
    kota_tujuan?: sptCreateNestedManyWithoutKota_tujuanInput
    kota_tujuan2?: sptCreateNestedManyWithoutKota_tujuan2Input
    spt?: sptCreateNestedManyWithoutKotaInput
    provinsi?: provinsiCreateNestedOneWithoutKotaInput
    standard_asal?: standardCreateNestedManyWithoutKota_asalInput
  }

  export type kotaUncheckedCreateWithoutStandard_tujuanInput = {
    kota_id: number
    kota_provinsi: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
    kota_asal?: sptUncheckedCreateNestedManyWithoutKota_asalInput
    kota_tujuan?: sptUncheckedCreateNestedManyWithoutKota_tujuanInput
    kota_tujuan2?: sptUncheckedCreateNestedManyWithoutKota_tujuan2Input
    spt?: sptUncheckedCreateNestedManyWithoutKotaInput
    standard_asal?: standardUncheckedCreateNestedManyWithoutKota_asalInput
  }

  export type kotaCreateOrConnectWithoutStandard_tujuanInput = {
    where: kotaWhereUniqueInput
    create: XOR<kotaCreateWithoutStandard_tujuanInput, kotaUncheckedCreateWithoutStandard_tujuanInput>
  }

  export type opdCreateWithoutStandardInput = {
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
    users?: usersCreateNestedManyWithoutOpdInput
    spt?: sptCreateNestedManyWithoutOpdInput
    setting?: settingCreateNestedManyWithoutOpdInput
    sumberdana?: sumberdanaCreateNestedManyWithoutOpdInput
    kegiatan?: kegiatanCreateNestedManyWithoutOpdInput
  }

  export type opdUncheckedCreateWithoutStandardInput = {
    opd_id?: number
    opd_nama: string
    opd_alamat: string
    opd_email: string
    opd_telp: string
    opd_kota: string
    opd_created?: Date | string
    opd_updated?: Date | string
    opd_deleted?: Date | string | null
    users?: usersUncheckedCreateNestedManyWithoutOpdInput
    spt?: sptUncheckedCreateNestedManyWithoutOpdInput
    setting?: settingUncheckedCreateNestedManyWithoutOpdInput
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutOpdInput
    kegiatan?: kegiatanUncheckedCreateNestedManyWithoutOpdInput
  }

  export type opdCreateOrConnectWithoutStandardInput = {
    where: opdWhereUniqueInput
    create: XOR<opdCreateWithoutStandardInput, opdUncheckedCreateWithoutStandardInput>
  }

  export type kotaUpsertWithoutStandard_asalInput = {
    update: XOR<kotaUpdateWithoutStandard_asalInput, kotaUncheckedUpdateWithoutStandard_asalInput>
    create: XOR<kotaCreateWithoutStandard_asalInput, kotaUncheckedCreateWithoutStandard_asalInput>
    where?: kotaWhereInput
  }

  export type kotaUpdateToOneWithWhereWithoutStandard_asalInput = {
    where?: kotaWhereInput
    data: XOR<kotaUpdateWithoutStandard_asalInput, kotaUncheckedUpdateWithoutStandard_asalInput>
  }

  export type kotaUpdateWithoutStandard_asalInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: sptUpdateManyWithoutKota_asalNestedInput
    kota_tujuan?: sptUpdateManyWithoutKota_tujuanNestedInput
    kota_tujuan2?: sptUpdateManyWithoutKota_tujuan2NestedInput
    spt?: sptUpdateManyWithoutKotaNestedInput
    provinsi?: provinsiUpdateOneWithoutKotaNestedInput
    standard_tujuan?: standardUpdateManyWithoutKota_tujuanNestedInput
  }

  export type kotaUncheckedUpdateWithoutStandard_asalInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_provinsi?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: sptUncheckedUpdateManyWithoutKota_asalNestedInput
    kota_tujuan?: sptUncheckedUpdateManyWithoutKota_tujuanNestedInput
    kota_tujuan2?: sptUncheckedUpdateManyWithoutKota_tujuan2NestedInput
    spt?: sptUncheckedUpdateManyWithoutKotaNestedInput
    standard_tujuan?: standardUncheckedUpdateManyWithoutKota_tujuanNestedInput
  }

  export type kotaUpsertWithoutStandard_tujuanInput = {
    update: XOR<kotaUpdateWithoutStandard_tujuanInput, kotaUncheckedUpdateWithoutStandard_tujuanInput>
    create: XOR<kotaCreateWithoutStandard_tujuanInput, kotaUncheckedCreateWithoutStandard_tujuanInput>
    where?: kotaWhereInput
  }

  export type kotaUpdateToOneWithWhereWithoutStandard_tujuanInput = {
    where?: kotaWhereInput
    data: XOR<kotaUpdateWithoutStandard_tujuanInput, kotaUncheckedUpdateWithoutStandard_tujuanInput>
  }

  export type kotaUpdateWithoutStandard_tujuanInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: sptUpdateManyWithoutKota_asalNestedInput
    kota_tujuan?: sptUpdateManyWithoutKota_tujuanNestedInput
    kota_tujuan2?: sptUpdateManyWithoutKota_tujuan2NestedInput
    spt?: sptUpdateManyWithoutKotaNestedInput
    provinsi?: provinsiUpdateOneWithoutKotaNestedInput
    standard_asal?: standardUpdateManyWithoutKota_asalNestedInput
  }

  export type kotaUncheckedUpdateWithoutStandard_tujuanInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_provinsi?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: sptUncheckedUpdateManyWithoutKota_asalNestedInput
    kota_tujuan?: sptUncheckedUpdateManyWithoutKota_tujuanNestedInput
    kota_tujuan2?: sptUncheckedUpdateManyWithoutKota_tujuan2NestedInput
    spt?: sptUncheckedUpdateManyWithoutKotaNestedInput
    standard_asal?: standardUncheckedUpdateManyWithoutKota_asalNestedInput
  }

  export type opdUpsertWithoutStandardInput = {
    update: XOR<opdUpdateWithoutStandardInput, opdUncheckedUpdateWithoutStandardInput>
    create: XOR<opdCreateWithoutStandardInput, opdUncheckedCreateWithoutStandardInput>
    where?: opdWhereInput
  }

  export type opdUpdateToOneWithWhereWithoutStandardInput = {
    where?: opdWhereInput
    data: XOR<opdUpdateWithoutStandardInput, opdUncheckedUpdateWithoutStandardInput>
  }

  export type opdUpdateWithoutStandardInput = {
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateManyWithoutOpdNestedInput
    spt?: sptUpdateManyWithoutOpdNestedInput
    setting?: settingUpdateManyWithoutOpdNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutOpdNestedInput
    kegiatan?: kegiatanUpdateManyWithoutOpdNestedInput
  }

  export type opdUncheckedUpdateWithoutStandardInput = {
    opd_id?: IntFieldUpdateOperationsInput | number
    opd_nama?: StringFieldUpdateOperationsInput | string
    opd_alamat?: StringFieldUpdateOperationsInput | string
    opd_email?: StringFieldUpdateOperationsInput | string
    opd_telp?: StringFieldUpdateOperationsInput | string
    opd_kota?: StringFieldUpdateOperationsInput | string
    opd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    opd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUncheckedUpdateManyWithoutOpdNestedInput
    spt?: sptUncheckedUpdateManyWithoutOpdNestedInput
    setting?: settingUncheckedUpdateManyWithoutOpdNestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutOpdNestedInput
    kegiatan?: kegiatanUncheckedUpdateManyWithoutOpdNestedInput
  }

  export type usersCreateWithoutBankInput = {
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutUsersInput
    pj?: sptCreateNestedManyWithoutUsers_pjInput
    pj2?: sptCreateNestedManyWithoutUsers_pj2Input
    opd: opdCreateNestedOneWithoutUsersInput
    jabatan: jabatanCreateNestedOneWithoutUsersInput
    sumberdana?: sumberdanaCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaCreateNestedManyWithoutPengguna_anggaranInput
    gajian?: gajianCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutBankInput = {
    user_id?: number
    user_opd: number
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_jabatan: number
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutUsersInput
    pj?: sptUncheckedCreateNestedManyWithoutUsers_pjInput
    pj2?: sptUncheckedCreateNestedManyWithoutUsers_pj2Input
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaUncheckedCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaUncheckedCreateNestedManyWithoutPengguna_anggaranInput
    gajian?: gajianUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutBankInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutBankInput, usersUncheckedCreateWithoutBankInput>
  }

  export type usersUpsertWithoutBankInput = {
    update: XOR<usersUpdateWithoutBankInput, usersUncheckedUpdateWithoutBankInput>
    create: XOR<usersCreateWithoutBankInput, usersUncheckedCreateWithoutBankInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutBankInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutBankInput, usersUncheckedUpdateWithoutBankInput>
  }

  export type usersUpdateWithoutBankInput = {
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutUsersNestedInput
    pj?: sptUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUpdateManyWithoutUsers_pj2NestedInput
    opd?: opdUpdateOneRequiredWithoutUsersNestedInput
    jabatan?: jabatanUpdateOneRequiredWithoutUsersNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUpdateManyWithoutPengguna_anggaranNestedInput
    gajian?: gajianUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutBankInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_opd?: IntFieldUpdateOperationsInput | number
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_jabatan?: IntFieldUpdateOperationsInput | number
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutUsersNestedInput
    pj?: sptUncheckedUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUncheckedUpdateManyWithoutUsers_pj2NestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUncheckedUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUncheckedUpdateManyWithoutPengguna_anggaranNestedInput
    gajian?: gajianUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type gajianCreateWithoutTunjangan_potonganInput = {
    gajian_bulan: number
    gajian_tahun: number
    gajian_nominal: number
    gajian_created?: Date | string
    gajian_updated?: Date | string
    gajian_deleted?: Date | string | null
    users: usersCreateNestedOneWithoutGajianInput
  }

  export type gajianUncheckedCreateWithoutTunjangan_potonganInput = {
    gajian_id?: number
    gajian_pegawai: number
    gajian_bulan: number
    gajian_tahun: number
    gajian_nominal: number
    gajian_created?: Date | string
    gajian_updated?: Date | string
    gajian_deleted?: Date | string | null
  }

  export type gajianCreateOrConnectWithoutTunjangan_potonganInput = {
    where: gajianWhereUniqueInput
    create: XOR<gajianCreateWithoutTunjangan_potonganInput, gajianUncheckedCreateWithoutTunjangan_potonganInput>
  }

  export type gajianCreateManyTunjangan_potonganInputEnvelope = {
    data: gajianCreateManyTunjangan_potonganInput | gajianCreateManyTunjangan_potonganInput[]
    skipDuplicates?: boolean
  }

  export type gajianUpsertWithWhereUniqueWithoutTunjangan_potonganInput = {
    where: gajianWhereUniqueInput
    update: XOR<gajianUpdateWithoutTunjangan_potonganInput, gajianUncheckedUpdateWithoutTunjangan_potonganInput>
    create: XOR<gajianCreateWithoutTunjangan_potonganInput, gajianUncheckedCreateWithoutTunjangan_potonganInput>
  }

  export type gajianUpdateWithWhereUniqueWithoutTunjangan_potonganInput = {
    where: gajianWhereUniqueInput
    data: XOR<gajianUpdateWithoutTunjangan_potonganInput, gajianUncheckedUpdateWithoutTunjangan_potonganInput>
  }

  export type gajianUpdateManyWithWhereWithoutTunjangan_potonganInput = {
    where: gajianScalarWhereInput
    data: XOR<gajianUpdateManyMutationInput, gajianUncheckedUpdateManyWithoutTunjangan_potonganInput>
  }

  export type usersCreateWithoutGajianInput = {
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiCreateNestedManyWithoutUsersInput
    pj?: sptCreateNestedManyWithoutUsers_pjInput
    pj2?: sptCreateNestedManyWithoutUsers_pj2Input
    opd: opdCreateNestedOneWithoutUsersInput
    jabatan: jabatanCreateNestedOneWithoutUsersInput
    sumberdana?: sumberdanaCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutGajianInput = {
    user_id?: number
    user_opd: number
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_jabatan: number
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedCreateNestedManyWithoutUsersInput
    pj?: sptUncheckedCreateNestedManyWithoutUsers_pjInput
    pj2?: sptUncheckedCreateNestedManyWithoutUsers_pj2Input
    sumberdana?: sumberdanaUncheckedCreateNestedManyWithoutUsersInput
    sumberdana_bendahara?: sumberdanaUncheckedCreateNestedManyWithoutBendaharaInput
    sumberdana_pa?: sumberdanaUncheckedCreateNestedManyWithoutPengguna_anggaranInput
    bank?: bankUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutGajianInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutGajianInput, usersUncheckedCreateWithoutGajianInput>
  }

  export type tunjangan_potonganCreateWithoutGajianInput = {
    tp_jenis: number
    tp_nama: string
    tp_urutan: number
    tp_kelompok: number
    tp_created?: Date | string
    tp_update?: Date | string
    tp_deleted?: Date | string | null
  }

  export type tunjangan_potonganUncheckedCreateWithoutGajianInput = {
    tp_id?: number
    tp_jenis: number
    tp_nama: string
    tp_urutan: number
    tp_kelompok: number
    tp_created?: Date | string
    tp_update?: Date | string
    tp_deleted?: Date | string | null
  }

  export type tunjangan_potonganCreateOrConnectWithoutGajianInput = {
    where: tunjangan_potonganWhereUniqueInput
    create: XOR<tunjangan_potonganCreateWithoutGajianInput, tunjangan_potonganUncheckedCreateWithoutGajianInput>
  }

  export type usersUpsertWithoutGajianInput = {
    update: XOR<usersUpdateWithoutGajianInput, usersUncheckedUpdateWithoutGajianInput>
    create: XOR<usersCreateWithoutGajianInput, usersUncheckedCreateWithoutGajianInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutGajianInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutGajianInput, usersUncheckedUpdateWithoutGajianInput>
  }

  export type usersUpdateWithoutGajianInput = {
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutUsersNestedInput
    pj?: sptUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUpdateManyWithoutUsers_pj2NestedInput
    opd?: opdUpdateOneRequiredWithoutUsersNestedInput
    jabatan?: jabatanUpdateOneRequiredWithoutUsersNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutGajianInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_opd?: IntFieldUpdateOperationsInput | number
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_jabatan?: IntFieldUpdateOperationsInput | number
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutUsersNestedInput
    pj?: sptUncheckedUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUncheckedUpdateManyWithoutUsers_pj2NestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUncheckedUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUncheckedUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUncheckedUpdateManyWithoutUserNestedInput
  }

  export type tunjangan_potonganUpsertWithoutGajianInput = {
    update: XOR<tunjangan_potonganUpdateWithoutGajianInput, tunjangan_potonganUncheckedUpdateWithoutGajianInput>
    create: XOR<tunjangan_potonganCreateWithoutGajianInput, tunjangan_potonganUncheckedCreateWithoutGajianInput>
    where?: tunjangan_potonganWhereInput
  }

  export type tunjangan_potonganUpdateToOneWithWhereWithoutGajianInput = {
    where?: tunjangan_potonganWhereInput
    data: XOR<tunjangan_potonganUpdateWithoutGajianInput, tunjangan_potonganUncheckedUpdateWithoutGajianInput>
  }

  export type tunjangan_potonganUpdateWithoutGajianInput = {
    tp_jenis?: IntFieldUpdateOperationsInput | number
    tp_nama?: StringFieldUpdateOperationsInput | string
    tp_urutan?: IntFieldUpdateOperationsInput | number
    tp_kelompok?: IntFieldUpdateOperationsInput | number
    tp_created?: DateTimeFieldUpdateOperationsInput | Date | string
    tp_update?: DateTimeFieldUpdateOperationsInput | Date | string
    tp_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tunjangan_potonganUncheckedUpdateWithoutGajianInput = {
    tp_id?: IntFieldUpdateOperationsInput | number
    tp_jenis?: IntFieldUpdateOperationsInput | number
    tp_nama?: StringFieldUpdateOperationsInput | string
    tp_urutan?: IntFieldUpdateOperationsInput | number
    tp_kelompok?: IntFieldUpdateOperationsInput | number
    tp_created?: DateTimeFieldUpdateOperationsInput | Date | string
    tp_update?: DateTimeFieldUpdateOperationsInput | Date | string
    tp_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sumberdanaCreateWithoutTtd_gajianInput = {
    sd_tahun: string
    sd_kode_rekening: string
    sd_nama: string
    sd_jumlah: bigint | number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    opd: opdCreateNestedOneWithoutSumberdanaInput
    kegiatan: kegiatanCreateNestedOneWithoutSumberdanaInput
    users: usersCreateNestedOneWithoutSumberdanaInput
    spt?: sptCreateNestedManyWithoutSumber_danaInput
    bendahara: usersCreateNestedOneWithoutSumberdana_bendaharaInput
    pengguna_anggaran: usersCreateNestedOneWithoutSumberdana_paInput
  }

  export type sumberdanaUncheckedCreateWithoutTtd_gajianInput = {
    sd_id?: number
    sd_tahun: string
    sd_opd: number
    sd_kode_rekening: string
    sd_nama: string
    sd_kegiatan: number
    sd_jumlah: bigint | number
    sd_pptk: number
    sd_pa: number
    sd_bendahara: number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
    spt?: sptUncheckedCreateNestedManyWithoutSumber_danaInput
  }

  export type sumberdanaCreateOrConnectWithoutTtd_gajianInput = {
    where: sumberdanaWhereUniqueInput
    create: XOR<sumberdanaCreateWithoutTtd_gajianInput, sumberdanaUncheckedCreateWithoutTtd_gajianInput>
  }

  export type sumberdanaUpsertWithoutTtd_gajianInput = {
    update: XOR<sumberdanaUpdateWithoutTtd_gajianInput, sumberdanaUncheckedUpdateWithoutTtd_gajianInput>
    create: XOR<sumberdanaCreateWithoutTtd_gajianInput, sumberdanaUncheckedCreateWithoutTtd_gajianInput>
    where?: sumberdanaWhereInput
  }

  export type sumberdanaUpdateToOneWithWhereWithoutTtd_gajianInput = {
    where?: sumberdanaWhereInput
    data: XOR<sumberdanaUpdateWithoutTtd_gajianInput, sumberdanaUncheckedUpdateWithoutTtd_gajianInput>
  }

  export type sumberdanaUpdateWithoutTtd_gajianInput = {
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    opd?: opdUpdateOneRequiredWithoutSumberdanaNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSumberdanaNestedInput
    users?: usersUpdateOneRequiredWithoutSumberdanaNestedInput
    spt?: sptUpdateManyWithoutSumber_danaNestedInput
    bendahara?: usersUpdateOneRequiredWithoutSumberdana_bendaharaNestedInput
    pengguna_anggaran?: usersUpdateOneRequiredWithoutSumberdana_paNestedInput
  }

  export type sumberdanaUncheckedUpdateWithoutTtd_gajianInput = {
    sd_id?: IntFieldUpdateOperationsInput | number
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_opd?: IntFieldUpdateOperationsInput | number
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_kegiatan?: IntFieldUpdateOperationsInput | number
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_pptk?: IntFieldUpdateOperationsInput | number
    sd_pa?: IntFieldUpdateOperationsInput | number
    sd_bendahara?: IntFieldUpdateOperationsInput | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt?: sptUncheckedUpdateManyWithoutSumber_danaNestedInput
  }

  export type spt_pegawaiCreateManyUsersInput = {
    sp_id?: number
    sp_spt: number
    sp_nomor_sppd: string
    sp_seq: number
  }

  export type sptCreateManyUsers_pjInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
  }

  export type sptCreateManyUsers_pj2Input = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
  }

  export type sumberdanaCreateManyUsersInput = {
    sd_id?: number
    sd_tahun: string
    sd_opd: number
    sd_kode_rekening: string
    sd_nama: string
    sd_kegiatan: number
    sd_jumlah: bigint | number
    sd_pa: number
    sd_bendahara: number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
  }

  export type sumberdanaCreateManyBendaharaInput = {
    sd_id?: number
    sd_tahun: string
    sd_opd: number
    sd_kode_rekening: string
    sd_nama: string
    sd_kegiatan: number
    sd_jumlah: bigint | number
    sd_pptk: number
    sd_pa: number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
  }

  export type sumberdanaCreateManyPengguna_anggaranInput = {
    sd_id?: number
    sd_tahun: string
    sd_opd: number
    sd_kode_rekening: string
    sd_nama: string
    sd_kegiatan: number
    sd_jumlah: bigint | number
    sd_pptk: number
    sd_bendahara: number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
  }

  export type bankCreateManyUserInput = {
    bank_name: number
    bank_account: string
    bank_number: string
  }

  export type gajianCreateManyUsersInput = {
    gajian_id?: number
    gajian_bulan: number
    gajian_tahun: number
    gajian_tunjangan_potongan: number
    gajian_nominal: number
    gajian_created?: Date | string
    gajian_updated?: Date | string
    gajian_deleted?: Date | string | null
  }

  export type spt_pegawaiUpdateWithoutUsersInput = {
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
    spt?: sptUpdateOneRequiredWithoutSpt_pegawaiNestedInput
    biaya?: biayaUpdateManyWithoutSpt_pegawaiNestedInput
    npd?: npdUpdateManyWithoutSpt_pegawaiNestedInput
    laporan?: laporanUpdateOneWithoutSpt_pegawaiNestedInput
    kwitansi?: kwitansiUpdateOneWithoutSpt_pegawaiNestedInput
  }

  export type spt_pegawaiUncheckedUpdateWithoutUsersInput = {
    sp_id?: IntFieldUpdateOperationsInput | number
    sp_spt?: IntFieldUpdateOperationsInput | number
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
    biaya?: biayaUncheckedUpdateManyWithoutSpt_pegawaiNestedInput
    npd?: npdUncheckedUpdateManyWithoutSpt_pegawaiNestedInput
    laporan?: laporanUncheckedUpdateOneWithoutSpt_pegawaiNestedInput
    kwitansi?: kwitansiUncheckedUpdateOneWithoutSpt_pegawaiNestedInput
  }

  export type spt_pegawaiUncheckedUpdateManyWithoutUsersInput = {
    sp_id?: IntFieldUpdateOperationsInput | number
    sp_spt?: IntFieldUpdateOperationsInput | number
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
  }

  export type sptUpdateWithoutUsers_pjInput = {
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutSptNestedInput
    users_pj2?: usersUpdateOneRequiredWithoutPj2NestedInput
    kota_asal?: kotaUpdateOneRequiredWithoutKota_asalNestedInput
    kota_tujuan?: kotaUpdateOneRequiredWithoutKota_tujuanNestedInput
    kota_tujuan2?: kotaUpdateOneWithoutKota_tujuan2NestedInput
    opd?: opdUpdateOneRequiredWithoutSptNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSptNestedInput
    sumber_dana?: sumberdanaUpdateOneRequiredWithoutSptNestedInput
    kategori?: kategoriUpdateOneRequiredWithoutSptNestedInput
    kota?: kotaUpdateOneWithoutSptNestedInput
  }

  export type sptUncheckedUpdateWithoutUsers_pjInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutSptNestedInput
  }

  export type sptUncheckedUpdateManyWithoutUsers_pjInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sptUpdateWithoutUsers_pj2Input = {
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutSptNestedInput
    users_pj?: usersUpdateOneRequiredWithoutPjNestedInput
    kota_asal?: kotaUpdateOneRequiredWithoutKota_asalNestedInput
    kota_tujuan?: kotaUpdateOneRequiredWithoutKota_tujuanNestedInput
    kota_tujuan2?: kotaUpdateOneWithoutKota_tujuan2NestedInput
    opd?: opdUpdateOneRequiredWithoutSptNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSptNestedInput
    sumber_dana?: sumberdanaUpdateOneRequiredWithoutSptNestedInput
    kategori?: kategoriUpdateOneRequiredWithoutSptNestedInput
    kota?: kotaUpdateOneWithoutSptNestedInput
  }

  export type sptUncheckedUpdateWithoutUsers_pj2Input = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutSptNestedInput
  }

  export type sptUncheckedUpdateManyWithoutUsers_pj2Input = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sumberdanaUpdateWithoutUsersInput = {
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    opd?: opdUpdateOneRequiredWithoutSumberdanaNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSumberdanaNestedInput
    spt?: sptUpdateManyWithoutSumber_danaNestedInput
    bendahara?: usersUpdateOneRequiredWithoutSumberdana_bendaharaNestedInput
    pengguna_anggaran?: usersUpdateOneRequiredWithoutSumberdana_paNestedInput
    ttd_gajian?: ttd_gajianUpdateManyWithoutSumberdanaNestedInput
  }

  export type sumberdanaUncheckedUpdateWithoutUsersInput = {
    sd_id?: IntFieldUpdateOperationsInput | number
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_opd?: IntFieldUpdateOperationsInput | number
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_kegiatan?: IntFieldUpdateOperationsInput | number
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_pa?: IntFieldUpdateOperationsInput | number
    sd_bendahara?: IntFieldUpdateOperationsInput | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt?: sptUncheckedUpdateManyWithoutSumber_danaNestedInput
    ttd_gajian?: ttd_gajianUncheckedUpdateManyWithoutSumberdanaNestedInput
  }

  export type sumberdanaUncheckedUpdateManyWithoutUsersInput = {
    sd_id?: IntFieldUpdateOperationsInput | number
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_opd?: IntFieldUpdateOperationsInput | number
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_kegiatan?: IntFieldUpdateOperationsInput | number
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_pa?: IntFieldUpdateOperationsInput | number
    sd_bendahara?: IntFieldUpdateOperationsInput | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sumberdanaUpdateWithoutBendaharaInput = {
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    opd?: opdUpdateOneRequiredWithoutSumberdanaNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSumberdanaNestedInput
    users?: usersUpdateOneRequiredWithoutSumberdanaNestedInput
    spt?: sptUpdateManyWithoutSumber_danaNestedInput
    pengguna_anggaran?: usersUpdateOneRequiredWithoutSumberdana_paNestedInput
    ttd_gajian?: ttd_gajianUpdateManyWithoutSumberdanaNestedInput
  }

  export type sumberdanaUncheckedUpdateWithoutBendaharaInput = {
    sd_id?: IntFieldUpdateOperationsInput | number
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_opd?: IntFieldUpdateOperationsInput | number
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_kegiatan?: IntFieldUpdateOperationsInput | number
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_pptk?: IntFieldUpdateOperationsInput | number
    sd_pa?: IntFieldUpdateOperationsInput | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt?: sptUncheckedUpdateManyWithoutSumber_danaNestedInput
    ttd_gajian?: ttd_gajianUncheckedUpdateManyWithoutSumberdanaNestedInput
  }

  export type sumberdanaUncheckedUpdateManyWithoutBendaharaInput = {
    sd_id?: IntFieldUpdateOperationsInput | number
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_opd?: IntFieldUpdateOperationsInput | number
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_kegiatan?: IntFieldUpdateOperationsInput | number
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_pptk?: IntFieldUpdateOperationsInput | number
    sd_pa?: IntFieldUpdateOperationsInput | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sumberdanaUpdateWithoutPengguna_anggaranInput = {
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    opd?: opdUpdateOneRequiredWithoutSumberdanaNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSumberdanaNestedInput
    users?: usersUpdateOneRequiredWithoutSumberdanaNestedInput
    spt?: sptUpdateManyWithoutSumber_danaNestedInput
    bendahara?: usersUpdateOneRequiredWithoutSumberdana_bendaharaNestedInput
    ttd_gajian?: ttd_gajianUpdateManyWithoutSumberdanaNestedInput
  }

  export type sumberdanaUncheckedUpdateWithoutPengguna_anggaranInput = {
    sd_id?: IntFieldUpdateOperationsInput | number
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_opd?: IntFieldUpdateOperationsInput | number
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_kegiatan?: IntFieldUpdateOperationsInput | number
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_pptk?: IntFieldUpdateOperationsInput | number
    sd_bendahara?: IntFieldUpdateOperationsInput | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt?: sptUncheckedUpdateManyWithoutSumber_danaNestedInput
    ttd_gajian?: ttd_gajianUncheckedUpdateManyWithoutSumberdanaNestedInput
  }

  export type sumberdanaUncheckedUpdateManyWithoutPengguna_anggaranInput = {
    sd_id?: IntFieldUpdateOperationsInput | number
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_opd?: IntFieldUpdateOperationsInput | number
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_kegiatan?: IntFieldUpdateOperationsInput | number
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_pptk?: IntFieldUpdateOperationsInput | number
    sd_bendahara?: IntFieldUpdateOperationsInput | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type bankUpdateWithoutUserInput = {
    bank_name?: IntFieldUpdateOperationsInput | number
    bank_account?: StringFieldUpdateOperationsInput | string
    bank_number?: StringFieldUpdateOperationsInput | string
  }

  export type bankUncheckedUpdateWithoutUserInput = {
    bank_name?: IntFieldUpdateOperationsInput | number
    bank_account?: StringFieldUpdateOperationsInput | string
    bank_number?: StringFieldUpdateOperationsInput | string
  }

  export type bankUncheckedUpdateManyWithoutUserInput = {
    bank_name?: IntFieldUpdateOperationsInput | number
    bank_account?: StringFieldUpdateOperationsInput | string
    bank_number?: StringFieldUpdateOperationsInput | string
  }

  export type gajianUpdateWithoutUsersInput = {
    gajian_bulan?: IntFieldUpdateOperationsInput | number
    gajian_tahun?: IntFieldUpdateOperationsInput | number
    gajian_nominal?: IntFieldUpdateOperationsInput | number
    gajian_created?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tunjangan_potongan?: tunjangan_potonganUpdateOneRequiredWithoutGajianNestedInput
  }

  export type gajianUncheckedUpdateWithoutUsersInput = {
    gajian_id?: IntFieldUpdateOperationsInput | number
    gajian_bulan?: IntFieldUpdateOperationsInput | number
    gajian_tahun?: IntFieldUpdateOperationsInput | number
    gajian_tunjangan_potongan?: IntFieldUpdateOperationsInput | number
    gajian_nominal?: IntFieldUpdateOperationsInput | number
    gajian_created?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gajianUncheckedUpdateManyWithoutUsersInput = {
    gajian_id?: IntFieldUpdateOperationsInput | number
    gajian_bulan?: IntFieldUpdateOperationsInput | number
    gajian_tahun?: IntFieldUpdateOperationsInput | number
    gajian_tunjangan_potongan?: IntFieldUpdateOperationsInput | number
    gajian_nominal?: IntFieldUpdateOperationsInput | number
    gajian_created?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type spt_pegawaiCreateManySptInput = {
    sp_id?: number
    sp_user: number
    sp_nomor_sppd: string
    sp_seq: number
  }

  export type spt_pegawaiUpdateWithoutSptInput = {
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
    users?: usersUpdateOneRequiredWithoutSpt_pegawaiNestedInput
    biaya?: biayaUpdateManyWithoutSpt_pegawaiNestedInput
    npd?: npdUpdateManyWithoutSpt_pegawaiNestedInput
    laporan?: laporanUpdateOneWithoutSpt_pegawaiNestedInput
    kwitansi?: kwitansiUpdateOneWithoutSpt_pegawaiNestedInput
  }

  export type spt_pegawaiUncheckedUpdateWithoutSptInput = {
    sp_id?: IntFieldUpdateOperationsInput | number
    sp_user?: IntFieldUpdateOperationsInput | number
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
    biaya?: biayaUncheckedUpdateManyWithoutSpt_pegawaiNestedInput
    npd?: npdUncheckedUpdateManyWithoutSpt_pegawaiNestedInput
    laporan?: laporanUncheckedUpdateOneWithoutSpt_pegawaiNestedInput
    kwitansi?: kwitansiUncheckedUpdateOneWithoutSpt_pegawaiNestedInput
  }

  export type spt_pegawaiUncheckedUpdateManyWithoutSptInput = {
    sp_id?: IntFieldUpdateOperationsInput | number
    sp_user?: IntFieldUpdateOperationsInput | number
    sp_nomor_sppd?: StringFieldUpdateOperationsInput | string
    sp_seq?: IntFieldUpdateOperationsInput | number
  }

  export type biayaCreateManySpt_pegawaiInput = {
    biaya_komponen: number
    biaya_standard: number
    biaya_nilai: number
    biaya_keterangan1?: string | null
    biaya_keterangan2?: string | null
    biaya_keterangan3?: string | null
    biaya_keterangan4?: string | null
    biaya_bukti?: string | null
    biaya_created?: Date | string
    biaya_updated?: Date | string | null
  }

  export type npdCreateManySpt_pegawaiInput = {
    npd_tgl: Date | string
    npd_nominal: bigint | number
    npd_created?: Date | string
    npd_updated?: Date | string
  }

  export type biayaUpdateWithoutSpt_pegawaiInput = {
    biaya_komponen?: IntFieldUpdateOperationsInput | number
    biaya_standard?: IntFieldUpdateOperationsInput | number
    biaya_nilai?: IntFieldUpdateOperationsInput | number
    biaya_keterangan1?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan2?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan3?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan4?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_bukti?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_created?: DateTimeFieldUpdateOperationsInput | Date | string
    biaya_updated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type biayaUncheckedUpdateWithoutSpt_pegawaiInput = {
    biaya_komponen?: IntFieldUpdateOperationsInput | number
    biaya_standard?: IntFieldUpdateOperationsInput | number
    biaya_nilai?: IntFieldUpdateOperationsInput | number
    biaya_keterangan1?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan2?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan3?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan4?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_bukti?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_created?: DateTimeFieldUpdateOperationsInput | Date | string
    biaya_updated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type biayaUncheckedUpdateManyWithoutSpt_pegawaiInput = {
    biaya_komponen?: IntFieldUpdateOperationsInput | number
    biaya_standard?: IntFieldUpdateOperationsInput | number
    biaya_nilai?: IntFieldUpdateOperationsInput | number
    biaya_keterangan1?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan2?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan3?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_keterangan4?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_bukti?: NullableStringFieldUpdateOperationsInput | string | null
    biaya_created?: DateTimeFieldUpdateOperationsInput | Date | string
    biaya_updated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type npdUpdateWithoutSpt_pegawaiInput = {
    npd_tgl?: DateTimeFieldUpdateOperationsInput | Date | string
    npd_nominal?: BigIntFieldUpdateOperationsInput | bigint | number
    npd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    npd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type npdUncheckedUpdateWithoutSpt_pegawaiInput = {
    npd_tgl?: DateTimeFieldUpdateOperationsInput | Date | string
    npd_nominal?: BigIntFieldUpdateOperationsInput | bigint | number
    npd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    npd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type npdUncheckedUpdateManyWithoutSpt_pegawaiInput = {
    npd_tgl?: DateTimeFieldUpdateOperationsInput | Date | string
    npd_nominal?: BigIntFieldUpdateOperationsInput | bigint | number
    npd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    npd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type kotaCreateManyProvinsiInput = {
    kota_id: number
    kota_nama: string
    kota_dalam_daerah?: boolean
    kota_created?: Date | string
    kota_updated?: Date | string
    kota_deleted?: Date | string | null
  }

  export type kotaUpdateWithoutProvinsiInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: sptUpdateManyWithoutKota_asalNestedInput
    kota_tujuan?: sptUpdateManyWithoutKota_tujuanNestedInput
    kota_tujuan2?: sptUpdateManyWithoutKota_tujuan2NestedInput
    spt?: sptUpdateManyWithoutKotaNestedInput
    standard_asal?: standardUpdateManyWithoutKota_asalNestedInput
    standard_tujuan?: standardUpdateManyWithoutKota_tujuanNestedInput
  }

  export type kotaUncheckedUpdateWithoutProvinsiInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: sptUncheckedUpdateManyWithoutKota_asalNestedInput
    kota_tujuan?: sptUncheckedUpdateManyWithoutKota_tujuanNestedInput
    kota_tujuan2?: sptUncheckedUpdateManyWithoutKota_tujuan2NestedInput
    spt?: sptUncheckedUpdateManyWithoutKotaNestedInput
    standard_asal?: standardUncheckedUpdateManyWithoutKota_asalNestedInput
    standard_tujuan?: standardUncheckedUpdateManyWithoutKota_tujuanNestedInput
  }

  export type kotaUncheckedUpdateManyWithoutProvinsiInput = {
    kota_id?: IntFieldUpdateOperationsInput | number
    kota_nama?: StringFieldUpdateOperationsInput | string
    kota_dalam_daerah?: BoolFieldUpdateOperationsInput | boolean
    kota_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kota_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sptCreateManyKota_asalInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
  }

  export type sptCreateManyKota_tujuanInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
  }

  export type sptCreateManyKota_tujuan2Input = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
  }

  export type sptCreateManyKotaInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
  }

  export type standardCreateManyKota_asalInput = {
    standard_id?: number
    standard_kode: number
    standard_opd: number
    standard_kota_tujuan: number
    standard_via: number
    standard_kelas: number
    standard_nominal: number
    standard_created?: Date | string
    standard_updated?: Date | string
    standard_deleted?: Date | string | null
  }

  export type standardCreateManyKota_tujuanInput = {
    standard_id?: number
    standard_kode: number
    standard_opd: number
    standard_kota_asal: number
    standard_via: number
    standard_kelas: number
    standard_nominal: number
    standard_created?: Date | string
    standard_updated?: Date | string
    standard_deleted?: Date | string | null
  }

  export type sptUpdateWithoutKota_asalInput = {
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutSptNestedInput
    users_pj?: usersUpdateOneRequiredWithoutPjNestedInput
    users_pj2?: usersUpdateOneRequiredWithoutPj2NestedInput
    kota_tujuan?: kotaUpdateOneRequiredWithoutKota_tujuanNestedInput
    kota_tujuan2?: kotaUpdateOneWithoutKota_tujuan2NestedInput
    opd?: opdUpdateOneRequiredWithoutSptNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSptNestedInput
    sumber_dana?: sumberdanaUpdateOneRequiredWithoutSptNestedInput
    kategori?: kategoriUpdateOneRequiredWithoutSptNestedInput
    kota?: kotaUpdateOneWithoutSptNestedInput
  }

  export type sptUncheckedUpdateWithoutKota_asalInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutSptNestedInput
  }

  export type sptUncheckedUpdateManyWithoutKota_asalInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sptUpdateWithoutKota_tujuanInput = {
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutSptNestedInput
    users_pj?: usersUpdateOneRequiredWithoutPjNestedInput
    users_pj2?: usersUpdateOneRequiredWithoutPj2NestedInput
    kota_asal?: kotaUpdateOneRequiredWithoutKota_asalNestedInput
    kota_tujuan2?: kotaUpdateOneWithoutKota_tujuan2NestedInput
    opd?: opdUpdateOneRequiredWithoutSptNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSptNestedInput
    sumber_dana?: sumberdanaUpdateOneRequiredWithoutSptNestedInput
    kategori?: kategoriUpdateOneRequiredWithoutSptNestedInput
    kota?: kotaUpdateOneWithoutSptNestedInput
  }

  export type sptUncheckedUpdateWithoutKota_tujuanInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutSptNestedInput
  }

  export type sptUncheckedUpdateManyWithoutKota_tujuanInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sptUpdateWithoutKota_tujuan2Input = {
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutSptNestedInput
    users_pj?: usersUpdateOneRequiredWithoutPjNestedInput
    users_pj2?: usersUpdateOneRequiredWithoutPj2NestedInput
    kota_asal?: kotaUpdateOneRequiredWithoutKota_asalNestedInput
    kota_tujuan?: kotaUpdateOneRequiredWithoutKota_tujuanNestedInput
    opd?: opdUpdateOneRequiredWithoutSptNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSptNestedInput
    sumber_dana?: sumberdanaUpdateOneRequiredWithoutSptNestedInput
    kategori?: kategoriUpdateOneRequiredWithoutSptNestedInput
    kota?: kotaUpdateOneWithoutSptNestedInput
  }

  export type sptUncheckedUpdateWithoutKota_tujuan2Input = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutSptNestedInput
  }

  export type sptUncheckedUpdateManyWithoutKota_tujuan2Input = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sptUpdateWithoutKotaInput = {
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutSptNestedInput
    users_pj?: usersUpdateOneRequiredWithoutPjNestedInput
    users_pj2?: usersUpdateOneRequiredWithoutPj2NestedInput
    kota_asal?: kotaUpdateOneRequiredWithoutKota_asalNestedInput
    kota_tujuan?: kotaUpdateOneRequiredWithoutKota_tujuanNestedInput
    kota_tujuan2?: kotaUpdateOneWithoutKota_tujuan2NestedInput
    opd?: opdUpdateOneRequiredWithoutSptNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSptNestedInput
    sumber_dana?: sumberdanaUpdateOneRequiredWithoutSptNestedInput
    kategori?: kategoriUpdateOneRequiredWithoutSptNestedInput
  }

  export type sptUncheckedUpdateWithoutKotaInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutSptNestedInput
  }

  export type sptUncheckedUpdateManyWithoutKotaInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type standardUpdateWithoutKota_asalInput = {
    standard_kode?: IntFieldUpdateOperationsInput | number
    standard_via?: IntFieldUpdateOperationsInput | number
    standard_kelas?: IntFieldUpdateOperationsInput | number
    standard_nominal?: IntFieldUpdateOperationsInput | number
    standard_created?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_tujuan?: kotaUpdateOneWithoutStandard_tujuanNestedInput
    opd?: opdUpdateOneRequiredWithoutStandardNestedInput
  }

  export type standardUncheckedUpdateWithoutKota_asalInput = {
    standard_id?: IntFieldUpdateOperationsInput | number
    standard_kode?: IntFieldUpdateOperationsInput | number
    standard_opd?: IntFieldUpdateOperationsInput | number
    standard_kota_tujuan?: IntFieldUpdateOperationsInput | number
    standard_via?: IntFieldUpdateOperationsInput | number
    standard_kelas?: IntFieldUpdateOperationsInput | number
    standard_nominal?: IntFieldUpdateOperationsInput | number
    standard_created?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type standardUncheckedUpdateManyWithoutKota_asalInput = {
    standard_id?: IntFieldUpdateOperationsInput | number
    standard_kode?: IntFieldUpdateOperationsInput | number
    standard_opd?: IntFieldUpdateOperationsInput | number
    standard_kota_tujuan?: IntFieldUpdateOperationsInput | number
    standard_via?: IntFieldUpdateOperationsInput | number
    standard_kelas?: IntFieldUpdateOperationsInput | number
    standard_nominal?: IntFieldUpdateOperationsInput | number
    standard_created?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type standardUpdateWithoutKota_tujuanInput = {
    standard_kode?: IntFieldUpdateOperationsInput | number
    standard_via?: IntFieldUpdateOperationsInput | number
    standard_kelas?: IntFieldUpdateOperationsInput | number
    standard_nominal?: IntFieldUpdateOperationsInput | number
    standard_created?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: kotaUpdateOneWithoutStandard_asalNestedInput
    opd?: opdUpdateOneRequiredWithoutStandardNestedInput
  }

  export type standardUncheckedUpdateWithoutKota_tujuanInput = {
    standard_id?: IntFieldUpdateOperationsInput | number
    standard_kode?: IntFieldUpdateOperationsInput | number
    standard_opd?: IntFieldUpdateOperationsInput | number
    standard_kota_asal?: IntFieldUpdateOperationsInput | number
    standard_via?: IntFieldUpdateOperationsInput | number
    standard_kelas?: IntFieldUpdateOperationsInput | number
    standard_nominal?: IntFieldUpdateOperationsInput | number
    standard_created?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type standardUncheckedUpdateManyWithoutKota_tujuanInput = {
    standard_id?: IntFieldUpdateOperationsInput | number
    standard_kode?: IntFieldUpdateOperationsInput | number
    standard_opd?: IntFieldUpdateOperationsInput | number
    standard_kota_asal?: IntFieldUpdateOperationsInput | number
    standard_via?: IntFieldUpdateOperationsInput | number
    standard_kelas?: IntFieldUpdateOperationsInput | number
    standard_nominal?: IntFieldUpdateOperationsInput | number
    standard_created?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sumberdanaCreateManyKegiatanInput = {
    sd_id?: number
    sd_tahun: string
    sd_opd: number
    sd_kode_rekening: string
    sd_nama: string
    sd_jumlah: bigint | number
    sd_pptk: number
    sd_pa: number
    sd_bendahara: number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
  }

  export type sptCreateManyKegiatanInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
  }

  export type sumberdanaUpdateWithoutKegiatanInput = {
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    opd?: opdUpdateOneRequiredWithoutSumberdanaNestedInput
    users?: usersUpdateOneRequiredWithoutSumberdanaNestedInput
    spt?: sptUpdateManyWithoutSumber_danaNestedInput
    bendahara?: usersUpdateOneRequiredWithoutSumberdana_bendaharaNestedInput
    pengguna_anggaran?: usersUpdateOneRequiredWithoutSumberdana_paNestedInput
    ttd_gajian?: ttd_gajianUpdateManyWithoutSumberdanaNestedInput
  }

  export type sumberdanaUncheckedUpdateWithoutKegiatanInput = {
    sd_id?: IntFieldUpdateOperationsInput | number
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_opd?: IntFieldUpdateOperationsInput | number
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_pptk?: IntFieldUpdateOperationsInput | number
    sd_pa?: IntFieldUpdateOperationsInput | number
    sd_bendahara?: IntFieldUpdateOperationsInput | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt?: sptUncheckedUpdateManyWithoutSumber_danaNestedInput
    ttd_gajian?: ttd_gajianUncheckedUpdateManyWithoutSumberdanaNestedInput
  }

  export type sumberdanaUncheckedUpdateManyWithoutKegiatanInput = {
    sd_id?: IntFieldUpdateOperationsInput | number
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_opd?: IntFieldUpdateOperationsInput | number
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_pptk?: IntFieldUpdateOperationsInput | number
    sd_pa?: IntFieldUpdateOperationsInput | number
    sd_bendahara?: IntFieldUpdateOperationsInput | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sptUpdateWithoutKegiatanInput = {
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutSptNestedInput
    users_pj?: usersUpdateOneRequiredWithoutPjNestedInput
    users_pj2?: usersUpdateOneRequiredWithoutPj2NestedInput
    kota_asal?: kotaUpdateOneRequiredWithoutKota_asalNestedInput
    kota_tujuan?: kotaUpdateOneRequiredWithoutKota_tujuanNestedInput
    kota_tujuan2?: kotaUpdateOneWithoutKota_tujuan2NestedInput
    opd?: opdUpdateOneRequiredWithoutSptNestedInput
    sumber_dana?: sumberdanaUpdateOneRequiredWithoutSptNestedInput
    kategori?: kategoriUpdateOneRequiredWithoutSptNestedInput
    kota?: kotaUpdateOneWithoutSptNestedInput
  }

  export type sptUncheckedUpdateWithoutKegiatanInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutSptNestedInput
  }

  export type sptUncheckedUpdateManyWithoutKegiatanInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sptCreateManySumber_danaInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
  }

  export type ttd_gajianCreateManySumberdanaInput = {
    ttd_id?: number
    ttd_bulan: number
    ttd_tahun: number
    ttd_created: Date | string
    ttd_updated?: Date | string
    ttd_deleted?: Date | string | null
  }

  export type sptUpdateWithoutSumber_danaInput = {
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutSptNestedInput
    users_pj?: usersUpdateOneRequiredWithoutPjNestedInput
    users_pj2?: usersUpdateOneRequiredWithoutPj2NestedInput
    kota_asal?: kotaUpdateOneRequiredWithoutKota_asalNestedInput
    kota_tujuan?: kotaUpdateOneRequiredWithoutKota_tujuanNestedInput
    kota_tujuan2?: kotaUpdateOneWithoutKota_tujuan2NestedInput
    opd?: opdUpdateOneRequiredWithoutSptNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSptNestedInput
    kategori?: kategoriUpdateOneRequiredWithoutSptNestedInput
    kota?: kotaUpdateOneWithoutSptNestedInput
  }

  export type sptUncheckedUpdateWithoutSumber_danaInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutSptNestedInput
  }

  export type sptUncheckedUpdateManyWithoutSumber_danaInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ttd_gajianUpdateWithoutSumberdanaInput = {
    ttd_bulan?: IntFieldUpdateOperationsInput | number
    ttd_tahun?: IntFieldUpdateOperationsInput | number
    ttd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    ttd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    ttd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ttd_gajianUncheckedUpdateWithoutSumberdanaInput = {
    ttd_id?: IntFieldUpdateOperationsInput | number
    ttd_bulan?: IntFieldUpdateOperationsInput | number
    ttd_tahun?: IntFieldUpdateOperationsInput | number
    ttd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    ttd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    ttd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ttd_gajianUncheckedUpdateManyWithoutSumberdanaInput = {
    ttd_id?: IntFieldUpdateOperationsInput | number
    ttd_bulan?: IntFieldUpdateOperationsInput | number
    ttd_tahun?: IntFieldUpdateOperationsInput | number
    ttd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    ttd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    ttd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersCreateManyOpdInput = {
    user_id?: number
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_jabatan: number
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
  }

  export type sptCreateManyOpdInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kategori: number
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
  }

  export type settingCreateManyOpdInput = {
    setting_id: string
    setting_value: string
    setting_lastupdate?: Date | string
  }

  export type sumberdanaCreateManyOpdInput = {
    sd_id?: number
    sd_tahun: string
    sd_kode_rekening: string
    sd_nama: string
    sd_kegiatan: number
    sd_jumlah: bigint | number
    sd_pptk: number
    sd_pa: number
    sd_bendahara: number
    sd_active: boolean
    sd_app?: string
    sd_created?: Date | string
    sd_updated?: Date | string
    sd_deleted?: Date | string | null
  }

  export type standardCreateManyOpdInput = {
    standard_id?: number
    standard_kode: number
    standard_kota_asal: number
    standard_kota_tujuan: number
    standard_via: number
    standard_kelas: number
    standard_nominal: number
    standard_created?: Date | string
    standard_updated?: Date | string
    standard_deleted?: Date | string | null
  }

  export type kegiatanCreateManyOpdInput = {
    kegiatan_id?: number
    kegiatan_kode: string
    kegiatan_program: string
    kegiatan_nama: string
    kegiatan_subkegiatan: string
    kegiatan_created?: Date | string
    kegiatan_updated?: Date | string
    kegiatan_deleted?: Date | string | null
  }

  export type usersUpdateWithoutOpdInput = {
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutUsersNestedInput
    pj?: sptUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUpdateManyWithoutUsers_pj2NestedInput
    jabatan?: jabatanUpdateOneRequiredWithoutUsersNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUpdateManyWithoutUserNestedInput
    gajian?: gajianUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutOpdInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_jabatan?: IntFieldUpdateOperationsInput | number
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutUsersNestedInput
    pj?: sptUncheckedUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUncheckedUpdateManyWithoutUsers_pj2NestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUncheckedUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUncheckedUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUncheckedUpdateManyWithoutUserNestedInput
    gajian?: gajianUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateManyWithoutOpdInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_jabatan?: IntFieldUpdateOperationsInput | number
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sptUpdateWithoutOpdInput = {
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutSptNestedInput
    users_pj?: usersUpdateOneRequiredWithoutPjNestedInput
    users_pj2?: usersUpdateOneRequiredWithoutPj2NestedInput
    kota_asal?: kotaUpdateOneRequiredWithoutKota_asalNestedInput
    kota_tujuan?: kotaUpdateOneRequiredWithoutKota_tujuanNestedInput
    kota_tujuan2?: kotaUpdateOneWithoutKota_tujuan2NestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSptNestedInput
    sumber_dana?: sumberdanaUpdateOneRequiredWithoutSptNestedInput
    kategori?: kategoriUpdateOneRequiredWithoutSptNestedInput
    kota?: kotaUpdateOneWithoutSptNestedInput
  }

  export type sptUncheckedUpdateWithoutOpdInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutSptNestedInput
  }

  export type sptUncheckedUpdateManyWithoutOpdInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kategori?: IntFieldUpdateOperationsInput | number
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type settingUpdateWithoutOpdInput = {
    setting_id?: StringFieldUpdateOperationsInput | string
    setting_value?: StringFieldUpdateOperationsInput | string
    setting_lastupdate?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type settingUncheckedUpdateWithoutOpdInput = {
    setting_id?: StringFieldUpdateOperationsInput | string
    setting_value?: StringFieldUpdateOperationsInput | string
    setting_lastupdate?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type settingUncheckedUpdateManyWithoutOpdInput = {
    setting_id?: StringFieldUpdateOperationsInput | string
    setting_value?: StringFieldUpdateOperationsInput | string
    setting_lastupdate?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sumberdanaUpdateWithoutOpdInput = {
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kegiatan?: kegiatanUpdateOneRequiredWithoutSumberdanaNestedInput
    users?: usersUpdateOneRequiredWithoutSumberdanaNestedInput
    spt?: sptUpdateManyWithoutSumber_danaNestedInput
    bendahara?: usersUpdateOneRequiredWithoutSumberdana_bendaharaNestedInput
    pengguna_anggaran?: usersUpdateOneRequiredWithoutSumberdana_paNestedInput
    ttd_gajian?: ttd_gajianUpdateManyWithoutSumberdanaNestedInput
  }

  export type sumberdanaUncheckedUpdateWithoutOpdInput = {
    sd_id?: IntFieldUpdateOperationsInput | number
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_kegiatan?: IntFieldUpdateOperationsInput | number
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_pptk?: IntFieldUpdateOperationsInput | number
    sd_pa?: IntFieldUpdateOperationsInput | number
    sd_bendahara?: IntFieldUpdateOperationsInput | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt?: sptUncheckedUpdateManyWithoutSumber_danaNestedInput
    ttd_gajian?: ttd_gajianUncheckedUpdateManyWithoutSumberdanaNestedInput
  }

  export type sumberdanaUncheckedUpdateManyWithoutOpdInput = {
    sd_id?: IntFieldUpdateOperationsInput | number
    sd_tahun?: StringFieldUpdateOperationsInput | string
    sd_kode_rekening?: StringFieldUpdateOperationsInput | string
    sd_nama?: StringFieldUpdateOperationsInput | string
    sd_kegiatan?: IntFieldUpdateOperationsInput | number
    sd_jumlah?: BigIntFieldUpdateOperationsInput | bigint | number
    sd_pptk?: IntFieldUpdateOperationsInput | number
    sd_pa?: IntFieldUpdateOperationsInput | number
    sd_bendahara?: IntFieldUpdateOperationsInput | number
    sd_active?: BoolFieldUpdateOperationsInput | boolean
    sd_app?: StringFieldUpdateOperationsInput | string
    sd_created?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sd_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type standardUpdateWithoutOpdInput = {
    standard_kode?: IntFieldUpdateOperationsInput | number
    standard_via?: IntFieldUpdateOperationsInput | number
    standard_kelas?: IntFieldUpdateOperationsInput | number
    standard_nominal?: IntFieldUpdateOperationsInput | number
    standard_created?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kota_asal?: kotaUpdateOneWithoutStandard_asalNestedInput
    kota_tujuan?: kotaUpdateOneWithoutStandard_tujuanNestedInput
  }

  export type standardUncheckedUpdateWithoutOpdInput = {
    standard_id?: IntFieldUpdateOperationsInput | number
    standard_kode?: IntFieldUpdateOperationsInput | number
    standard_kota_asal?: IntFieldUpdateOperationsInput | number
    standard_kota_tujuan?: IntFieldUpdateOperationsInput | number
    standard_via?: IntFieldUpdateOperationsInput | number
    standard_kelas?: IntFieldUpdateOperationsInput | number
    standard_nominal?: IntFieldUpdateOperationsInput | number
    standard_created?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type standardUncheckedUpdateManyWithoutOpdInput = {
    standard_id?: IntFieldUpdateOperationsInput | number
    standard_kode?: IntFieldUpdateOperationsInput | number
    standard_kota_asal?: IntFieldUpdateOperationsInput | number
    standard_kota_tujuan?: IntFieldUpdateOperationsInput | number
    standard_via?: IntFieldUpdateOperationsInput | number
    standard_kelas?: IntFieldUpdateOperationsInput | number
    standard_nominal?: IntFieldUpdateOperationsInput | number
    standard_created?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    standard_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type kegiatanUpdateWithoutOpdInput = {
    kegiatan_kode?: StringFieldUpdateOperationsInput | string
    kegiatan_program?: StringFieldUpdateOperationsInput | string
    kegiatan_nama?: StringFieldUpdateOperationsInput | string
    kegiatan_subkegiatan?: StringFieldUpdateOperationsInput | string
    kegiatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sumberdana?: sumberdanaUpdateManyWithoutKegiatanNestedInput
    spt?: sptUpdateManyWithoutKegiatanNestedInput
  }

  export type kegiatanUncheckedUpdateWithoutOpdInput = {
    kegiatan_id?: IntFieldUpdateOperationsInput | number
    kegiatan_kode?: StringFieldUpdateOperationsInput | string
    kegiatan_program?: StringFieldUpdateOperationsInput | string
    kegiatan_nama?: StringFieldUpdateOperationsInput | string
    kegiatan_subkegiatan?: StringFieldUpdateOperationsInput | string
    kegiatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutKegiatanNestedInput
    spt?: sptUncheckedUpdateManyWithoutKegiatanNestedInput
  }

  export type kegiatanUncheckedUpdateManyWithoutOpdInput = {
    kegiatan_id?: IntFieldUpdateOperationsInput | number
    kegiatan_kode?: StringFieldUpdateOperationsInput | string
    kegiatan_program?: StringFieldUpdateOperationsInput | string
    kegiatan_nama?: StringFieldUpdateOperationsInput | string
    kegiatan_subkegiatan?: StringFieldUpdateOperationsInput | string
    kegiatan_created?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    kegiatan_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersCreateManyJabatanInput = {
    user_id?: number
    user_opd: number
    user_nama: string
    user_nip?: string | null
    user_nik: string
    user_name: string
    user_pass: string
    user_image?: string | null
    user_tmp_lahir: string
    user_tgl_lahir: Date | string
    user_pendidikan_akhir: number
    user_level: number
    user_email: string
    user_nohp: string
    user_alamat: string
    user_jk: $Enums.JK
    user_ttd?: boolean
    user_pangkat?: string | null
    user_jumlah_anak?: number
    user_active: boolean
    user_external?: boolean
    user_lastip?: string | null
    user_lastlogin?: Date | string | null
    user_created?: Date | string
    user_updated?: Date | string
    user_deleted?: Date | string | null
  }

  export type usersUpdateWithoutJabatanInput = {
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutUsersNestedInput
    pj?: sptUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUpdateManyWithoutUsers_pj2NestedInput
    opd?: opdUpdateOneRequiredWithoutUsersNestedInput
    sumberdana?: sumberdanaUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUpdateManyWithoutUserNestedInput
    gajian?: gajianUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutJabatanInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_opd?: IntFieldUpdateOperationsInput | number
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutUsersNestedInput
    pj?: sptUncheckedUpdateManyWithoutUsers_pjNestedInput
    pj2?: sptUncheckedUpdateManyWithoutUsers_pj2NestedInput
    sumberdana?: sumberdanaUncheckedUpdateManyWithoutUsersNestedInput
    sumberdana_bendahara?: sumberdanaUncheckedUpdateManyWithoutBendaharaNestedInput
    sumberdana_pa?: sumberdanaUncheckedUpdateManyWithoutPengguna_anggaranNestedInput
    bank?: bankUncheckedUpdateManyWithoutUserNestedInput
    gajian?: gajianUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateManyWithoutJabatanInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_opd?: IntFieldUpdateOperationsInput | number
    user_nama?: StringFieldUpdateOperationsInput | string
    user_nip?: NullableStringFieldUpdateOperationsInput | string | null
    user_nik?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_image?: NullableStringFieldUpdateOperationsInput | string | null
    user_tmp_lahir?: StringFieldUpdateOperationsInput | string
    user_tgl_lahir?: DateTimeFieldUpdateOperationsInput | Date | string
    user_pendidikan_akhir?: IntFieldUpdateOperationsInput | number
    user_level?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_nohp?: StringFieldUpdateOperationsInput | string
    user_alamat?: StringFieldUpdateOperationsInput | string
    user_jk?: EnumJKFieldUpdateOperationsInput | $Enums.JK
    user_ttd?: BoolFieldUpdateOperationsInput | boolean
    user_pangkat?: NullableStringFieldUpdateOperationsInput | string | null
    user_jumlah_anak?: IntFieldUpdateOperationsInput | number
    user_active?: BoolFieldUpdateOperationsInput | boolean
    user_external?: BoolFieldUpdateOperationsInput | boolean
    user_lastip?: NullableStringFieldUpdateOperationsInput | string | null
    user_lastlogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_created?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sptCreateManyKategoriInput = {
    spt_id?: number
    spt_seq: number
    spt_tahun: number
    spt_nomor: string
    spt_opd: number
    spt_kota_asal: number
    spt_kota_tujuan: number
    spt_kota_tujuan2?: number | null
    spt_tempat_tujuan: string
    spt_via: number
    spt_tgl_brkt: Date | string
    spt_tgl_kembali: Date | string
    spt_lama: number
    spt_perihal: string
    spt_kegiatan: number
    spt_sumber_dana: number
    spt_pj: number
    spt_pj2: number
    spt_dasar?: string | null
    spt_status?: number
    spt_created?: Date | string
    spt_updated?: Date | string
    spt_deleted?: Date | string | null
    kotaKota_id?: number | null
  }

  export type sptUpdateWithoutKategoriInput = {
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    spt_pegawai?: spt_pegawaiUpdateManyWithoutSptNestedInput
    users_pj?: usersUpdateOneRequiredWithoutPjNestedInput
    users_pj2?: usersUpdateOneRequiredWithoutPj2NestedInput
    kota_asal?: kotaUpdateOneRequiredWithoutKota_asalNestedInput
    kota_tujuan?: kotaUpdateOneRequiredWithoutKota_tujuanNestedInput
    kota_tujuan2?: kotaUpdateOneWithoutKota_tujuan2NestedInput
    opd?: opdUpdateOneRequiredWithoutSptNestedInput
    kegiatan?: kegiatanUpdateOneRequiredWithoutSptNestedInput
    sumber_dana?: sumberdanaUpdateOneRequiredWithoutSptNestedInput
    kota?: kotaUpdateOneWithoutSptNestedInput
  }

  export type sptUncheckedUpdateWithoutKategoriInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
    spt_pegawai?: spt_pegawaiUncheckedUpdateManyWithoutSptNestedInput
  }

  export type sptUncheckedUpdateManyWithoutKategoriInput = {
    spt_id?: IntFieldUpdateOperationsInput | number
    spt_seq?: IntFieldUpdateOperationsInput | number
    spt_tahun?: IntFieldUpdateOperationsInput | number
    spt_nomor?: StringFieldUpdateOperationsInput | string
    spt_opd?: IntFieldUpdateOperationsInput | number
    spt_kota_asal?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan?: IntFieldUpdateOperationsInput | number
    spt_kota_tujuan2?: NullableIntFieldUpdateOperationsInput | number | null
    spt_tempat_tujuan?: StringFieldUpdateOperationsInput | string
    spt_via?: IntFieldUpdateOperationsInput | number
    spt_tgl_brkt?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_tgl_kembali?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_lama?: IntFieldUpdateOperationsInput | number
    spt_perihal?: StringFieldUpdateOperationsInput | string
    spt_kegiatan?: IntFieldUpdateOperationsInput | number
    spt_sumber_dana?: IntFieldUpdateOperationsInput | number
    spt_pj?: IntFieldUpdateOperationsInput | number
    spt_pj2?: IntFieldUpdateOperationsInput | number
    spt_dasar?: NullableStringFieldUpdateOperationsInput | string | null
    spt_status?: IntFieldUpdateOperationsInput | number
    spt_created?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    spt_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kotaKota_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gajianCreateManyTunjangan_potonganInput = {
    gajian_id?: number
    gajian_pegawai: number
    gajian_bulan: number
    gajian_tahun: number
    gajian_nominal: number
    gajian_created?: Date | string
    gajian_updated?: Date | string
    gajian_deleted?: Date | string | null
  }

  export type gajianUpdateWithoutTunjangan_potonganInput = {
    gajian_bulan?: IntFieldUpdateOperationsInput | number
    gajian_tahun?: IntFieldUpdateOperationsInput | number
    gajian_nominal?: IntFieldUpdateOperationsInput | number
    gajian_created?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutGajianNestedInput
  }

  export type gajianUncheckedUpdateWithoutTunjangan_potonganInput = {
    gajian_id?: IntFieldUpdateOperationsInput | number
    gajian_pegawai?: IntFieldUpdateOperationsInput | number
    gajian_bulan?: IntFieldUpdateOperationsInput | number
    gajian_tahun?: IntFieldUpdateOperationsInput | number
    gajian_nominal?: IntFieldUpdateOperationsInput | number
    gajian_created?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gajianUncheckedUpdateManyWithoutTunjangan_potonganInput = {
    gajian_id?: IntFieldUpdateOperationsInput | number
    gajian_pegawai?: IntFieldUpdateOperationsInput | number
    gajian_bulan?: IntFieldUpdateOperationsInput | number
    gajian_tahun?: IntFieldUpdateOperationsInput | number
    gajian_nominal?: IntFieldUpdateOperationsInput | number
    gajian_created?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    gajian_deleted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UsersCountOutputTypeDefaultArgs instead
     */
    export type UsersCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsersCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SptCountOutputTypeDefaultArgs instead
     */
    export type SptCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SptCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Spt_pegawaiCountOutputTypeDefaultArgs instead
     */
    export type Spt_pegawaiCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Spt_pegawaiCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProvinsiCountOutputTypeDefaultArgs instead
     */
    export type ProvinsiCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProvinsiCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use KotaCountOutputTypeDefaultArgs instead
     */
    export type KotaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = KotaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use KegiatanCountOutputTypeDefaultArgs instead
     */
    export type KegiatanCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = KegiatanCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SumberdanaCountOutputTypeDefaultArgs instead
     */
    export type SumberdanaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SumberdanaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OpdCountOutputTypeDefaultArgs instead
     */
    export type OpdCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OpdCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JabatanCountOutputTypeDefaultArgs instead
     */
    export type JabatanCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JabatanCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use KategoriCountOutputTypeDefaultArgs instead
     */
    export type KategoriCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = KategoriCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tunjangan_potonganCountOutputTypeDefaultArgs instead
     */
    export type Tunjangan_potonganCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tunjangan_potonganCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use usersDefaultArgs instead
     */
    export type usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = usersDefaultArgs<ExtArgs>
    /**
     * @deprecated Use dasarDefaultArgs instead
     */
    export type dasarArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = dasarDefaultArgs<ExtArgs>
    /**
     * @deprecated Use sptDefaultArgs instead
     */
    export type sptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = sptDefaultArgs<ExtArgs>
    /**
     * @deprecated Use spt_pegawaiDefaultArgs instead
     */
    export type spt_pegawaiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = spt_pegawaiDefaultArgs<ExtArgs>
    /**
     * @deprecated Use npdDefaultArgs instead
     */
    export type npdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = npdDefaultArgs<ExtArgs>
    /**
     * @deprecated Use biayaDefaultArgs instead
     */
    export type biayaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = biayaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use provinsiDefaultArgs instead
     */
    export type provinsiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = provinsiDefaultArgs<ExtArgs>
    /**
     * @deprecated Use kotaDefaultArgs instead
     */
    export type kotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = kotaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use laporanDefaultArgs instead
     */
    export type laporanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = laporanDefaultArgs<ExtArgs>
    /**
     * @deprecated Use settingDefaultArgs instead
     */
    export type settingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = settingDefaultArgs<ExtArgs>
    /**
     * @deprecated Use kegiatanDefaultArgs instead
     */
    export type kegiatanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = kegiatanDefaultArgs<ExtArgs>
    /**
     * @deprecated Use sumberdanaDefaultArgs instead
     */
    export type sumberdanaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = sumberdanaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use opdDefaultArgs instead
     */
    export type opdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = opdDefaultArgs<ExtArgs>
    /**
     * @deprecated Use jabatanDefaultArgs instead
     */
    export type jabatanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = jabatanDefaultArgs<ExtArgs>
    /**
     * @deprecated Use kwitansiDefaultArgs instead
     */
    export type kwitansiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = kwitansiDefaultArgs<ExtArgs>
    /**
     * @deprecated Use kategoriDefaultArgs instead
     */
    export type kategoriArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = kategoriDefaultArgs<ExtArgs>
    /**
     * @deprecated Use standardDefaultArgs instead
     */
    export type standardArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = standardDefaultArgs<ExtArgs>
    /**
     * @deprecated Use bankDefaultArgs instead
     */
    export type bankArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = bankDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tunjangan_potonganDefaultArgs instead
     */
    export type tunjangan_potonganArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tunjangan_potonganDefaultArgs<ExtArgs>
    /**
     * @deprecated Use gajianDefaultArgs instead
     */
    export type gajianArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = gajianDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ttd_gajianDefaultArgs instead
     */
    export type ttd_gajianArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ttd_gajianDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}